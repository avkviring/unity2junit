<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" testcasecount="713" result="Failed(Child)" total="713" passed="712" failed="1" inconclusive="0" skipped="0" asserts="0" engine-version="3.5.0.0" clr-version="4.0.30319.42000" start-time="2023-03-15 12:10:20Z" end-time="1899-12-30 00:00:00Z" duration="34.8035598">
  <test-suite type="TestSuite" id="1000" name="DaMultiPlayer" fullname="DaMultiPlayer" runstate="Runnable" testcasecount="791" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="1899-12-30 00:00:00Z" duration="34.803560" total="713" passed="712" failed="1" inconclusive="0" skipped="0" asserts="0">
    <properties>
      <property name="isRoot" value="True" />
    </properties>
    <failure>
      <message><![CDATA[One or more child tests had errors]]></message>
      <stack-trace><![CDATA[]]></stack-trace>
    </failure>
    <test-suite type="Assembly" id="1154" name="dmp.battle.client.test.dll" fullname="/builds/dmp/main/unity/Client/Library/ScriptAssemblies/dmp.battle.client.test.dll" runstate="Runnable" testcasecount="114" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:26Z" duration="5.735127" total="114" passed="113" failed="1" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="587" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
        <property name="platform" value="EditMode" />
        <property name="isAssembly" value="True" />
        <property name="EditorOnly" value="True" />
        <property name="RequiresPlayMode" value="False" />
      </properties>
      <failure>
        <message><![CDATA[One or more child tests had errors]]></message>
        <stack-trace><![CDATA[]]></stack-trace>
      </failure>
      <test-suite type="TestSuite" id="1155" name="DMP" fullname="DMP" runstate="Runnable" testcasecount="114" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:26Z" duration="5.734405" total="114" passed="113" failed="1" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <failure>
          <message><![CDATA[One or more child tests had errors]]></message>
          <stack-trace><![CDATA[]]></stack-trace>
        </failure>
        <test-suite type="TestSuite" id="1156" name="Battle" fullname="DMP.Battle" runstate="Runnable" testcasecount="114" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:26Z" duration="5.731008" total="114" passed="113" failed="1" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <failure>
            <message><![CDATA[One or more child tests had errors]]></message>
            <stack-trace><![CDATA[]]></stack-trace>
          </failure>
          <test-suite type="TestSuite" id="1157" name="Client" fullname="DMP.Battle.Client" runstate="Runnable" testcasecount="114" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:26Z" duration="5.727497" total="114" passed="113" failed="1" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <failure>
              <message><![CDATA[One or more child tests had errors]]></message>
              <stack-trace><![CDATA[]]></stack-trace>
            </failure>
            <test-suite type="TestSuite" id="1158" name="Test" fullname="DMP.Battle.Client.Test" runstate="Runnable" testcasecount="114" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:26Z" duration="5.723877" total="114" passed="113" failed="1" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <failure>
                <message><![CDATA[One or more child tests had errors]]></message>
                <stack-trace><![CDATA[]]></stack-trace>
              </failure>
              <test-suite type="TestSuite" id="1168" name="Attack" fullname="DMP.Battle.Client.Test.Attack" runstate="Runnable" testcasecount="2" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:21Z" duration="0.777615" total="2" passed="1" failed="1" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <failure>
                  <message><![CDATA[One or more child tests had errors]]></message>
                  <stack-trace><![CDATA[]]></stack-trace>
                </failure>
                <test-suite type="TestFixture" id="1151" name="ClosestUnitTargetingSystemTest" fullname="DMP.Battle.Client.Test.Attack.ClosestUnitTargetingSystemTest" classname="DMP.Battle.Client.Test.Attack.ClosestUnitTargetingSystemTest" runstate="Runnable" testcasecount="2" result="Failed" site="Child" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:21Z" duration="0.769887" total="2" passed="1" failed="1" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <failure>
                    <message><![CDATA[One or more child tests had errors]]></message>
                    <stack-trace><![CDATA[]]></stack-trace>
                  </failure>
                  <test-case id="1153" name="SetHasNoTargetWhenTooFar" fullname="DMP.Battle.Client.Test.Attack.ClosestUnitTargetingSystemTest.SetHasNoTargetWhenTooFar" methodname="SetHasNoTargetWhenTooFar" classname="DMP.Battle.Client.Test.Attack.ClosestUnitTargetingSystemTest" runstate="Runnable" seed="1986551669" result="Failed" label="Error" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:20Z" duration="0.674573" asserts="0">
                    <properties />
                    <failure>
                      <message><![CDATA[System.Exception : Some Exception]]></message>
                      <stack-trace><![CDATA[  at DMP.Battle.Client.Test.Attack.ClosestUnitTargetingSystemTest.SetHasNoTargetWhenTooFar () [0x00029] in /builds/dmp/main/unity/packages/battle/Client/Tests/Attack/ClosestUnitTargetingSystemTest.cs:50 
  at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
  at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in <0bfb382d99114c52bcae2561abca6423>:0 ]]></stack-trace>
                    </failure>
                  </test-case>
                  <test-case id="1152" name="SetsTargetToClosestUnit" fullname="DMP.Battle.Client.Test.Attack.ClosestUnitTargetingSystemTest.SetsTargetToClosestUnit" methodname="SetsTargetToClosestUnit" classname="DMP.Battle.Client.Test.Attack.ClosestUnitTargetingSystemTest" runstate="Runnable" seed="1980964255" result="Passed" start-time="2023-03-15 12:10:20Z" end-time="2023-03-15 12:10:21Z" duration="0.069100" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1167" name="CombatActions" fullname="DMP.Battle.Client.Test.CombatActions" runstate="Runnable" testcasecount="21" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:22Z" duration="1.304694" total="21" passed="21" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1126" name="CombatActionSystemTest" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.363878" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1127" name="AttackRequestTest" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.AttackRequestTest" methodname="AttackRequestTest" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="1380393100" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.060508" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1128" name="AttackRequestWithoutTargetTest" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.AttackRequestWithoutTargetTest" methodname="AttackRequestWithoutTargetTest" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="408036394" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.053951" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1129" name="CycleAttackRequestTest" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.CycleAttackRequestTest" methodname="CycleAttackRequestTest" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="994474976" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.044223" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1134" name="DoesNotAddActionRequestIfOnCooldown" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.DoesNotAddActionRequestIfOnCooldown" methodname="DoesNotAddActionRequestIfOnCooldown" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="84398673" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.029017" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1133" name="DoesNotAddActionRequestWithoutCombatActionRequest" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.DoesNotAddActionRequestWithoutCombatActionRequest" methodname="DoesNotAddActionRequestWithoutCombatActionRequest" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="170922875" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.042594" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1131" name="SkipActionRequestByDistance" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.SkipActionRequestByDistance" methodname="SkipActionRequestByDistance" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="2061384058" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.067958" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1132" name="SkipActionRequestWhenInactiveAttackIntent" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.SkipActionRequestWhenInactiveAttackIntent" methodname="SkipActionRequestWhenInactiveAttackIntent" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="1545277041" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.030348" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1130" name="StopAttackRequestTest" fullname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest.StopAttackRequestTest" methodname="StopAttackRequestTest" classname="DMP.Battle.Client.Test.CombatActions.CombatActionSystemTest" runstate="Runnable" seed="1783390097" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.028846" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.CombatActionSystem targeting DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1135" name="DistanceToPlayerSystemTest" fullname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest" classname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.271538" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1136" name="CalculateDistanceToPlayer" fullname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest.CalculateDistanceToPlayer" methodname="CalculateDistanceToPlayer" classname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest" runstate="Runnable" seed="1196689865" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.080755" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1137" name="SkipCalculateDistanceToPlayerWhenDead" fullname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest.SkipCalculateDistanceToPlayerWhenDead" methodname="SkipCalculateDistanceToPlayerWhenDead" classname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest" runstate="Runnable" seed="1711759343" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.124600" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1138" name="UpdateDistanceToPlayer" fullname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest.UpdateDistanceToPlayer" methodname="UpdateDistanceToPlayer" classname="DMP.Battle.Client.Test.CombatActions.DistanceToPlayerSystemTest" runstate="Runnable" seed="1440734105" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.063556" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1139" name="InterruptActionByMoveSystemTest" fullname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest" classname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.210290" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1140" name="AddInterruptRequestTest" fullname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest.AddInterruptRequestTest" methodname="AddInterruptRequestTest" classname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest" runstate="Runnable" seed="1429469636" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.062524" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.CombatActions.Systems.InterruptActionByMoveSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1142" name="SkipRequestByAggroBlockerTest" fullname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest.SkipRequestByAggroBlockerTest" methodname="SkipRequestByAggroBlockerTest" classname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest" runstate="Runnable" seed="944166472" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.039008" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.CombatActions.Systems.InterruptActionByMoveSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1141" name="SkipRequestByForceTest" fullname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest.SkipRequestByForceTest" methodname="SkipRequestByForceTest" classname="DMP.Battle.Client.Test.CombatActions.InterruptActionByMoveSystemTest" runstate="Runnable" seed="545857582" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:21Z" duration="0.106376" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.CombatActions.Systems.InterruptActionByMoveSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1143" name="PlayerAttackRequestSystemTest" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:22Z" duration="0.454575" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1149" name="ActivateAttackRequestWhenAttackInput" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest.ActivateAttackRequestWhenAttackInput" methodname="ActivateAttackRequestWhenAttackInput" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" seed="2051471799" result="Passed" start-time="2023-03-15 12:10:21Z" end-time="2023-03-15 12:10:22Z" duration="0.146567" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1147" name="AttackRequestInactiveWhenNoAttackInput" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest.AttackRequestInactiveWhenNoAttackInput" methodname="AttackRequestInactiveWhenNoAttackInput" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" seed="1696722834" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.044096" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1150" name="DeactivateAttackRequestWhenInteractInput" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest.DeactivateAttackRequestWhenInteractInput" methodname="DeactivateAttackRequestWhenInteractInput" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" seed="444580337" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.050887" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1146" name="DeactivateAttackRequestWhenMove" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest.DeactivateAttackRequestWhenMove" methodname="DeactivateAttackRequestWhenMove" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" seed="1440078806" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.074638" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1145" name="DoNotActivateAttackRequestWhenDisarm" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest.DoNotActivateAttackRequestWhenDisarm" methodname="DoNotActivateAttackRequestWhenDisarm" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" seed="530528277" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.061555" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1144" name="DoNotActivateAttackRequestWhenMove" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest.DoNotActivateAttackRequestWhenMove" methodname="DoNotActivateAttackRequestWhenMove" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" seed="1305364218" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.033408" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1148" name="DoNotDeactivateAttackRequestWhenNoAttackInput" fullname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest.DoNotDeactivateAttackRequestWhenNoAttackInput" methodname="DoNotDeactivateAttackRequestWhenNoAttackInput" classname="DMP.Battle.Client.Test.CombatActions.PlayerAttackRequestSystemTest" runstate="Runnable" seed="16872155" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.033899" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.CombatActions.Systems.PlayerAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1166" name="Destroy" fullname="DMP.Battle.Client.Test.Destroy" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.306283" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1122" name="DeleteObjectsOnBattleExitTest" fullname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest" classname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.305442" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1123" name="DeletesAllMemberObjects" fullname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest.DeletesAllMemberObjects" methodname="DeletesAllMemberObjects" classname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest" runstate="Runnable" seed="294880146" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.129429" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1124" name="DoesNotDeleteObjectsWithNoReplicas" fullname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest.DoesNotDeleteObjectsWithNoReplicas" methodname="DoesNotDeleteObjectsWithNoReplicas" classname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest" runstate="Runnable" seed="1298445412" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.038209" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1125" name="DoesNotDeleteOtherMemberObjects" fullname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest.DoesNotDeleteOtherMemberObjects" methodname="DoesNotDeleteOtherMemberObjects" classname="DMP.Battle.Client.Test.Destroy.DeleteObjectsOnBattleExitTest" runstate="Runnable" seed="118277002" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.035790" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1165" name="Input" fullname="DMP.Battle.Client.Test.Input" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.204573" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1116" name="PlayerInputAuthoringTest" fullname="DMP.Battle.Client.Test.Input.PlayerInputAuthoringTest" classname="DMP.Battle.Client.Test.Input.PlayerInputAuthoringTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.092994" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1117" name="CreatesPlayerInput" fullname="DMP.Battle.Client.Test.Input.PlayerInputAuthoringTest.CreatesPlayerInput" methodname="CreatesPlayerInput" classname="DMP.Battle.Client.Test.Input.PlayerInputAuthoringTest" runstate="Runnable" seed="896534756" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.058872" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1118" name="ProxiesInput" fullname="DMP.Battle.Client.Test.Input.PlayerInputAuthoringTest.ProxiesInput" methodname="ProxiesInput" classname="DMP.Battle.Client.Test.Input.PlayerInputAuthoringTest" runstate="Runnable" seed="1631900877" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.029423" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1119" name="PlayerSkillInputAuthoringTest" fullname="DMP.Battle.Client.Test.Input.PlayerSkillInputAuthoringTest" classname="DMP.Battle.Client.Test.Input.PlayerSkillInputAuthoringTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.109878" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1120" name="CreatesPlayerSkillInput" fullname="DMP.Battle.Client.Test.Input.PlayerSkillInputAuthoringTest.CreatesPlayerSkillInput" methodname="CreatesPlayerSkillInput" classname="DMP.Battle.Client.Test.Input.PlayerSkillInputAuthoringTest" runstate="Runnable" seed="15648104" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.073495" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1121" name="ProxiesInput" fullname="DMP.Battle.Client.Test.Input.PlayerSkillInputAuthoringTest.ProxiesInput" methodname="ProxiesInput" classname="DMP.Battle.Client.Test.Input.PlayerSkillInputAuthoringTest" runstate="Runnable" seed="277715912" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.033499" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1164" name="Interaction" fullname="DMP.Battle.Client.Test.Interaction" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:23Z" duration="0.240988" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1108" name="PlayerInteractRequestSystemTest" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:23Z" duration="0.239304" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1115" name="ActivateInteractRequestWhenInteractInput" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest.ActivateInteractRequestWhenInteractInput" methodname="ActivateInteractRequestWhenInteractInput" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" seed="1691524084" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.033425" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1112" name="DeactivateInteractRequestWhenAttackInput" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest.DeactivateInteractRequestWhenAttackInput" methodname="DeactivateInteractRequestWhenAttackInput" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" seed="2130941697" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.026633" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1110" name="DeactivateInteractRequestWhenMove" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest.DeactivateInteractRequestWhenMove" methodname="DeactivateInteractRequestWhenMove" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" seed="1385792333" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:22Z" duration="0.026757" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1111" name="DoNotActivateInteractRequestWhenAttackInput" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest.DoNotActivateInteractRequestWhenAttackInput" methodname="DoNotActivateInteractRequestWhenAttackInput" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" seed="825557568" result="Passed" start-time="2023-03-15 12:10:22Z" end-time="2023-03-15 12:10:23Z" duration="0.033384" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1109" name="DoNotActivateInteractRequestWhenMove" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest.DoNotActivateInteractRequestWhenMove" methodname="DoNotActivateInteractRequestWhenMove" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" seed="1858971516" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.062115" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1114" name="DoNotDeactivateInteractRequestWhenNoInteractInput" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest.DoNotDeactivateInteractRequestWhenNoInteractInput" methodname="DoNotDeactivateInteractRequestWhenNoInteractInput" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" seed="945133430" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.026390" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1113" name="InteractRequestInactiveWhenNoInteractInput" fullname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest.InteractRequestInactiveWhenNoInteractInput" methodname="InteractRequestInactiveWhenNoInteractInput" classname="DMP.Battle.Client.Test.Interaction.PlayerInteractRequestSystemTest" runstate="Runnable" seed="1763490095" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.026045" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1163" name="LifeCycle" fullname="DMP.Battle.Client.Test.LifeCycle" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.080861" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1105" name="ReceiveHealthSystemTest" fullname="DMP.Battle.Client.Test.LifeCycle.ReceiveHealthSystemTest" classname="DMP.Battle.Client.Test.LifeCycle.ReceiveHealthSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.079729" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1107" name="DoesNotSetHealthIfIdDiffers" fullname="DMP.Battle.Client.Test.LifeCycle.ReceiveHealthSystemTest.DoesNotSetHealthIfIdDiffers" methodname="DoesNotSetHealthIfIdDiffers" classname="DMP.Battle.Client.Test.LifeCycle.ReceiveHealthSystemTest" runstate="Runnable" seed="762637686" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.046108" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1106" name="SetsHealthToReplica" fullname="DMP.Battle.Client.Test.LifeCycle.ReceiveHealthSystemTest.SetsHealthToReplica" methodname="SetsHealthToReplica" classname="DMP.Battle.Client.Test.LifeCycle.ReceiveHealthSystemTest" runstate="Runnable" seed="1340977072" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.029869" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1162" name="Move" fullname="DMP.Battle.Client.Test.Move" runstate="Runnable" testcasecount="16" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.674930" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1082" name="CopyNavMeshPositionToTranslationSystemTest" fullname="DMP.Battle.Client.Test.Move.CopyNavMeshPositionToTranslationSystemTest" classname="DMP.Battle.Client.Test.Move.CopyNavMeshPositionToTranslationSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.074501" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1083" name="CopyPositionToTranslationTest" fullname="DMP.Battle.Client.Test.Move.CopyNavMeshPositionToTranslationSystemTest.CopyPositionToTranslationTest" methodname="CopyPositionToTranslationTest" classname="DMP.Battle.Client.Test.Move.CopyNavMeshPositionToTranslationSystemTest" runstate="Runnable" seed="1285978224" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.070394" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1084" name="CopyNavMeshRotationToRotationSystemSystemTest" fullname="DMP.Battle.Client.Test.Move.CopyNavMeshRotationToRotationSystemSystemTest" classname="DMP.Battle.Client.Test.Move.CopyNavMeshRotationToRotationSystemSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.035885" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1085" name="CopyNavMeshRotationToRotationTest" fullname="DMP.Battle.Client.Test.Move.CopyNavMeshRotationToRotationSystemSystemTest.CopyNavMeshRotationToRotationTest" methodname="CopyNavMeshRotationToRotationTest" classname="DMP.Battle.Client.Test.Move.CopyNavMeshRotationToRotationSystemSystemTest" runstate="Runnable" seed="88461366" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.033774" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1086" name="CopyRotationToNavMeshRotationSystemTest" fullname="DMP.Battle.Client.Test.Move.CopyRotationToNavMeshRotationSystemTest" classname="DMP.Battle.Client.Test.Move.CopyRotationToNavMeshRotationSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.087055" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1088" name="DoesNotUpdateRotationWithoutTagTest" fullname="DMP.Battle.Client.Test.Move.CopyRotationToNavMeshRotationSystemTest.DoesNotUpdateRotationWithoutTagTest" methodname="DoesNotUpdateRotationWithoutTagTest" classname="DMP.Battle.Client.Test.Move.CopyRotationToNavMeshRotationSystemTest" runstate="Runnable" seed="534764915" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.041179" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1087" name="UpdateRotationTest" fullname="DMP.Battle.Client.Test.Move.CopyRotationToNavMeshRotationSystemTest.UpdateRotationTest" methodname="UpdateRotationTest" classname="DMP.Battle.Client.Test.Move.CopyRotationToNavMeshRotationSystemTest" runstate="Runnable" seed="1334397722" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.043833" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1089" name="DisableMoveToTargetByInputSystemTest" fullname="DMP.Battle.Client.Test.Move.DisableMoveToTargetByInputSystemTest" classname="DMP.Battle.Client.Test.Move.DisableMoveToTargetByInputSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.100923" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1090" name="DisableMoveAndAttackWhenHasInputTest" fullname="DMP.Battle.Client.Test.Move.DisableMoveToTargetByInputSystemTest.DisableMoveAndAttackWhenHasInputTest" methodname="DisableMoveAndAttackWhenHasInputTest" classname="DMP.Battle.Client.Test.Move.DisableMoveToTargetByInputSystemTest" runstate="Runnable" seed="921015603" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.034635" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1091" name="IgnoreWhenHasAggroBlockerTest" fullname="DMP.Battle.Client.Test.Move.DisableMoveToTargetByInputSystemTest.IgnoreWhenHasAggroBlockerTest" methodname="IgnoreWhenHasAggroBlockerTest" classname="DMP.Battle.Client.Test.Move.DisableMoveToTargetByInputSystemTest" runstate="Runnable" seed="1412610056" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.064665" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1092" name="NavMeshAgentMoveSystemTest" fullname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" classname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.245161" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1096" name="DoesNotMoveByForceTest" fullname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest.DoesNotMoveByForceTest" methodname="DoesNotMoveByForceTest" classname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" runstate="Runnable" seed="870063438" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.044955" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Move.Systems.NavMeshAgentMoveSystem targeting DMP.Battle.Core.Move.Systems.RotateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.FixedStepSimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1097" name="DoesNotMoveByMoveBlockerTest" fullname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest.DoesNotMoveByMoveBlockerTest" methodname="DoesNotMoveByMoveBlockerTest" classname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" runstate="Runnable" seed="1308441992" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.029912" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Move.Systems.NavMeshAgentMoveSystem targeting DMP.Battle.Core.Move.Systems.RotateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.FixedStepSimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1098" name="DoesNotRotateByMoveBlockerTest" fullname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest.DoesNotRotateByMoveBlockerTest" methodname="DoesNotRotateByMoveBlockerTest" classname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" runstate="Runnable" seed="2107753844" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.036007" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Move.Systems.NavMeshAgentMoveSystem targeting DMP.Battle.Core.Move.Systems.RotateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.FixedStepSimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1094" name="DoesNotSetWithDeadTag" fullname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest.DoesNotSetWithDeadTag" methodname="DoesNotSetWithDeadTag" classname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" runstate="Runnable" seed="1368757797" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.028954" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Move.Systems.NavMeshAgentMoveSystem targeting DMP.Battle.Core.Move.Systems.RotateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.FixedStepSimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1095" name="DoesNotSetWithNavMeshRoutingTag" fullname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest.DoesNotSetWithNavMeshRoutingTag" methodname="DoesNotSetWithNavMeshRoutingTag" classname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" runstate="Runnable" seed="1903276497" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.046285" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Move.Systems.NavMeshAgentMoveSystem targeting DMP.Battle.Core.Move.Systems.RotateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.FixedStepSimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1093" name="SetNavAgentParametersTest" fullname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest.SetNavAgentParametersTest" methodname="SetNavAgentParametersTest" classname="DMP.Battle.Client.Test.Move.NavMeshAgentMoveSystemTest" runstate="Runnable" seed="137220915" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.055287" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Move.Systems.NavMeshAgentMoveSystem targeting DMP.Battle.Core.Move.Systems.RotateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.FixedStepSimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1099" name="PlayerMoveIntentSystemTest" fullname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest" classname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.088132" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1101" name="ControlsMultipleTargets" fullname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest.ControlsMultipleTargets" methodname="ControlsMultipleTargets" classname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest" runstate="Runnable" seed="1201862316" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.034580" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1102" name="DoesNotWriteInputIfNotUnderControl" fullname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest.DoesNotWriteInputIfNotUnderControl" methodname="DoesNotWriteInputIfNotUnderControl" classname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest" runstate="Runnable" seed="419253021" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.025444" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1100" name="WritesInputToMoveIntent" fullname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest.WritesInputToMoveIntent" methodname="WritesInputToMoveIntent" classname="DMP.Battle.Client.Test.Move.PlayerMoveIntentSystemTest" runstate="Runnable" seed="2133947755" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.025790" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1103" name="RotateToTargetByActionSystemTest" fullname="DMP.Battle.Client.Test.Move.RotateToTargetByActionSystemTest" classname="DMP.Battle.Client.Test.Move.RotateToTargetByActionSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.042094" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1104" name="RotateToTargetByAttackTest" fullname="DMP.Battle.Client.Test.Move.RotateToTargetByActionSystemTest.RotateToTargetByAttackTest" methodname="RotateToTargetByAttackTest" classname="DMP.Battle.Client.Test.Move.RotateToTargetByActionSystemTest" runstate="Runnable" seed="939823359" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.040355" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1161" name="Navigation" fullname="DMP.Battle.Client.Test.Navigation" runstate="Runnable" testcasecount="33" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:25Z" duration="1.173195" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1039" name="DisableAutoRoutingByDeadSystemTest" fullname="DMP.Battle.Client.Test.Navigation.DisableAutoRoutingByDeadSystemTest" classname="DMP.Battle.Client.Test.Navigation.DisableAutoRoutingByDeadSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.075806" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1040" name="OnRemoveAutoRoutingByDeadTagTest" fullname="DMP.Battle.Client.Test.Navigation.DisableAutoRoutingByDeadSystemTest.OnRemoveAutoRoutingByDeadTagTest" methodname="OnRemoveAutoRoutingByDeadTagTest" classname="DMP.Battle.Client.Test.Navigation.DisableAutoRoutingByDeadSystemTest" runstate="Runnable" seed="1062916741" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.072791" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1041" name="DisableNavMeshAgentRoutingByInputSystemTest" fullname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest" classname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:24Z" duration="0.161440" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1046" name="DoesNotRemoveComponentFromOtherUnitTest" fullname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest.DoesNotRemoveComponentFromOtherUnitTest" methodname="DoesNotRemoveComponentFromOtherUnitTest" classname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest" runstate="Runnable" seed="1080473496" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:23Z" duration="0.027687" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1043" name="DoesNotResetWithAggroBlockerTest" fullname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest.DoesNotResetWithAggroBlockerTest" methodname="DoesNotResetWithAggroBlockerTest" classname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest" runstate="Runnable" seed="1343531879" result="Passed" start-time="2023-03-15 12:10:23Z" end-time="2023-03-15 12:10:24Z" duration="0.027331" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1042" name="DoesNotResetWithoutInputTest" fullname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest.DoesNotResetWithoutInputTest" methodname="DoesNotResetWithoutInputTest" classname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest" runstate="Runnable" seed="1170798361" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.027249" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1045" name="RemoveComponentTest" fullname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest.RemoveComponentTest" methodname="RemoveComponentTest" classname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest" runstate="Runnable" seed="1145054647" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.028708" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1044" name="RemoveRequestTest" fullname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest.RemoveRequestTest" methodname="RemoveRequestTest" classname="DMP.Battle.Client.Test.Navigation.DisableNavMeshAgentRoutingByInputSystemTest" runstate="Runnable" seed="1960117117" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.047860" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1047" name="NavMeshAutoRoutingSystemTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshAutoRoutingSystemTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshAutoRoutingSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.081731" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1049" name="DoesNotUpdateWhenCancelledTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshAutoRoutingSystemTest.DoesNotUpdateWhenCancelledTest" methodname="DoesNotUpdateWhenCancelledTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshAutoRoutingSystemTest" runstate="Runnable" seed="69910468" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.051789" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1048" name="UpdateTargetPositionTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshAutoRoutingSystemTest.UpdateTargetPositionTest" methodname="UpdateTargetPositionTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshAutoRoutingSystemTest" runstate="Runnable" seed="791274586" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.028244" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1050" name="NavMeshRoutingSystemTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.174094" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1052" name="DoesNotUpdateWithoutComponentTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest.DoesNotUpdateWithoutComponentTest" methodname="DoesNotUpdateWithoutComponentTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest" runstate="Runnable" seed="1362754347" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.028078" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1054" name="RemovesRoutingOnCancel" fullname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest.RemovesRoutingOnCancel" methodname="RemovesRoutingOnCancel" classname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest" runstate="Runnable" seed="1803458017" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.031657" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1053" name="StopsByDistanceTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest.StopsByDistanceTest" methodname="StopsByDistanceTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest" runstate="Runnable" seed="650312234" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.031288" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1051" name="UpdateNavAgentParametersTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest.UpdateNavAgentParametersTest" methodname="UpdateNavAgentParametersTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshRoutingSystemTest" runstate="Runnable" seed="581741890" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.080501" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1055" name="NavMeshUpdateDataSystemTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateDataSystemTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateDataSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.060758" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1056" name="UpdatePositionFromNavMeshAgentTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateDataSystemTest.UpdatePositionFromNavMeshAgentTest" methodname="UpdatePositionFromNavMeshAgentTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateDataSystemTest" runstate="Runnable" seed="1571787031" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.033114" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1057" name="UpdateRotationFromNavMeshAgentTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateDataSystemTest.UpdateRotationFromNavMeshAgentTest" methodname="UpdateRotationFromNavMeshAgentTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateDataSystemTest" runstate="Runnable" seed="1242256470" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.025747" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1058" name="NavMeshUpdatePathSystemTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.091730" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1061" name="DoesNotUpdateByTimeTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest.DoesNotUpdateByTimeTest" methodname="DoesNotUpdateByTimeTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest" runstate="Runnable" seed="1783826628" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.027261" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1060" name="DoesNotUpdateForPointTargetTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest.DoesNotUpdateForPointTargetTest" methodname="DoesNotUpdateForPointTargetTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest" runstate="Runnable" seed="398952940" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.031133" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1059" name="UpdateForMovableTargetTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest.UpdateForMovableTargetTest" methodname="UpdateForMovableTargetTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdatePathSystemTest" runstate="Runnable" seed="1089323372" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.030322" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1062" name="NavMeshUpdateReplicasSystemTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.112875" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1065" name="DoesNotUpdateWithAIReferenceTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest.DoesNotUpdateWithAIReferenceTest" methodname="DoesNotUpdateWithAIReferenceTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest" runstate="Runnable" seed="669122558" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.062283" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1064" name="DoesNotUpdateWithPlayerControlTargetTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest.DoesNotUpdateWithPlayerControlTargetTest" methodname="DoesNotUpdateWithPlayerControlTargetTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest" runstate="Runnable" seed="596403341" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.023389" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1063" name="UpdatePositionTest" fullname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest.UpdatePositionTest" methodname="UpdatePositionTest" classname="DMP.Battle.Client.Test.Navigation.NavMeshUpdateReplicasSystemTest" runstate="Runnable" seed="1872752502" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.024911" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1066" name="SetAvoidancePrioritySystemTest" fullname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest" classname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.105423" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1069" name="SetPriorityToOtherPlayerTest" fullname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest.SetPriorityToOtherPlayerTest" methodname="SetPriorityToOtherPlayerTest" classname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest" runstate="Runnable" seed="462355422" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.032529" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Navigation.Systems.SetAvoidancePrioritySystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1067" name="SetPriorityToPlayerUnitTest" fullname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest.SetPriorityToPlayerUnitTest" methodname="SetPriorityToPlayerUnitTest" classname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest" runstate="Runnable" seed="1716005406" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.023294" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Navigation.Systems.SetAvoidancePrioritySystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1068" name="SetPriorityToUnitTest" fullname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest.SetPriorityToUnitTest" methodname="SetPriorityToUnitTest" classname="DMP.Battle.Client.Test.Navigation.SetAvoidancePrioritySystemTest" runstate="Runnable" seed="1979459517" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.047949" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Navigation.Systems.SetAvoidancePrioritySystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1070" name="SetRoutingForReplicasSystemTest" fullname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest" classname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.115857" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1071" name="AddsComponent" fullname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest.AddsComponent" methodname="AddsComponent" classname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest" runstate="Runnable" seed="1297955606" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.043619" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Navigation.Systems.SetRoutingForReplicasSystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1074" name="DoesNotAddComponentIfNoNavComponents" fullname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest.DoesNotAddComponentIfNoNavComponents" methodname="DoesNotAddComponentIfNoNavComponents" classname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest" runstate="Runnable" seed="1184814911" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.023921" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Navigation.Systems.SetRoutingForReplicasSystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1073" name="DoesNotAddComponentIfNotReplica" fullname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest.DoesNotAddComponentIfNotReplica" methodname="DoesNotAddComponentIfNotReplica" classname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest" runstate="Runnable" seed="740244860" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.023429" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Navigation.Systems.SetRoutingForReplicasSystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1072" name="DoesNotAddComponentTwice" fullname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest.DoesNotAddComponentTwice" methodname="DoesNotAddComponentTwice" classname="DMP.Battle.Client.Test.Navigation.SetRoutingForReplicasSystemTest" runstate="Runnable" seed="1257049364" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.022593" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Navigation.Systems.SetRoutingForReplicasSystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1075" name="TranslateDataToNavMeshAgentSystemTest" fullname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" classname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:25Z" duration="0.191171" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1076" name="CheckPlayerUpdateNavMeshAgentTest" fullname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest.CheckPlayerUpdateNavMeshAgentTest" methodname="CheckPlayerUpdateNavMeshAgentTest" classname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" runstate="Runnable" seed="4422619" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.027460" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1079" name="DoesNotPlayerUpdateByUnitDataTest" fullname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest.DoesNotPlayerUpdateByUnitDataTest" methodname="DoesNotPlayerUpdateByUnitDataTest" classname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" runstate="Runnable" seed="1569376956" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.063795" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1080" name="DoesNotUnitUpdateByPlayerDataTest" fullname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest.DoesNotUnitUpdateByPlayerDataTest" methodname="DoesNotUnitUpdateByPlayerDataTest" classname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" runstate="Runnable" seed="1910719872" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.022682" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1078" name="PlayerInputVelocityTest" fullname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest.PlayerInputVelocityTest" methodname="PlayerInputVelocityTest" classname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" runstate="Runnable" seed="2053149978" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:24Z" duration="0.023043" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1077" name="RoutingTest" fullname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest.RoutingTest" methodname="RoutingTest" classname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" runstate="Runnable" seed="1834969179" result="Passed" start-time="2023-03-15 12:10:24Z" end-time="2023-03-15 12:10:25Z" duration="0.029853" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1081" name="StopMovingByDeadTest" fullname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest.StopMovingByDeadTest" methodname="StopMovingByDeadTest" classname="DMP.Battle.Client.Test.Navigation.TranslateDataToNavMeshAgentSystemTest" runstate="Runnable" seed="331170934" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.022216" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1160" name="Skill" fullname="DMP.Battle.Client.Test.Skill" runstate="Runnable" testcasecount="19" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.709219" total="19" passed="19" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1016" name="CreatePlayerSkillActionRequestSystemTest" fullname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" classname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.200431" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1017" name="CreatePlayerSkillCastRequest" fullname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest.CreatePlayerSkillCastRequest" methodname="CreatePlayerSkillCastRequest" classname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" runstate="Runnable" seed="112932004" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.030930" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1018" name="CreatePlayerSkillCastRequestWhenActionInterruptible" fullname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest.CreatePlayerSkillCastRequestWhenActionInterruptible" methodname="CreatePlayerSkillCastRequestWhenActionInterruptible" classname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" runstate="Runnable" seed="1601012361" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.068796" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1019" name="DoesNotCreatePlayerSkillCastRequestWhenActionNotInterruptible" fullname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest.DoesNotCreatePlayerSkillCastRequestWhenActionNotInterruptible" methodname="DoesNotCreatePlayerSkillCastRequestWhenActionNotInterruptible" classname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" runstate="Runnable" seed="1441570194" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024809" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1022" name="DoesNotCreatePlayerSkillCastRequestWhenDead" fullname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest.DoesNotCreatePlayerSkillCastRequestWhenDead" methodname="DoesNotCreatePlayerSkillCastRequestWhenDead" classname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" runstate="Runnable" seed="1249679230" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.023554" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1020" name="DoesNotCreatePlayerSkillCastRequestWhenOnCooldown" fullname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest.DoesNotCreatePlayerSkillCastRequestWhenOnCooldown" methodname="DoesNotCreatePlayerSkillCastRequestWhenOnCooldown" classname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" runstate="Runnable" seed="1307181750" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024685" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1021" name="DoesNotCreatePlayerSkillCastRequestWhenPressedOrCanceled" fullname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest.DoesNotCreatePlayerSkillCastRequestWhenPressedOrCanceled" methodname="DoesNotCreatePlayerSkillCastRequestWhenPressedOrCanceled" classname="DMP.Battle.Client.Test.Skill.CreatePlayerSkillActionRequestSystemTest" runstate="Runnable" seed="1613036768" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.023778" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1023" name="InterruptActionBySkillCastSystemTest" fullname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" classname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.194561" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1024" name="CreateInterrtuptActionRequest" fullname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest.CreateInterrtuptActionRequest" methodname="CreateInterrtuptActionRequest" classname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" runstate="Runnable" seed="605110961" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.030240" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1025" name="CreatePlayerInterrtuptActionRequestWhenActionInterruptible" fullname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest.CreatePlayerInterrtuptActionRequestWhenActionInterruptible" methodname="CreatePlayerInterrtuptActionRequestWhenActionInterruptible" classname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" runstate="Runnable" seed="197389045" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.063280" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1026" name="DoesNotCreateInterrtuptActionRequestWhenActionNotInterruptible" fullname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest.DoesNotCreateInterrtuptActionRequestWhenActionNotInterruptible" methodname="DoesNotCreateInterrtuptActionRequestWhenActionNotInterruptible" classname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" runstate="Runnable" seed="397401762" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024305" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1029" name="DoesNotCreateInterrtuptActionRequestWhenDead" fullname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest.DoesNotCreateInterrtuptActionRequestWhenDead" methodname="DoesNotCreateInterrtuptActionRequestWhenDead" classname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" runstate="Runnable" seed="1057801009" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024548" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1027" name="DoesNotCreateInterrtuptActionRequestWhenOnCooldown" fullname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest.DoesNotCreateInterrtuptActionRequestWhenOnCooldown" methodname="DoesNotCreateInterrtuptActionRequestWhenOnCooldown" classname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" runstate="Runnable" seed="1039698164" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024976" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1028" name="DoesNotCreateInterrtuptActionRequestWhenPressedOrCanceled" fullname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest.DoesNotCreateInterrtuptActionRequestWhenPressedOrCanceled" methodname="DoesNotCreateInterrtuptActionRequestWhenPressedOrCanceled" classname="DMP.Battle.Client.Test.Skill.InterruptActionBySkillCastSystemTest" runstate="Runnable" seed="884778983" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.025084" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1030" name="PlayerRequestSkillActionSystemTest" fullname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" classname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.282974" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1031" name="CreateRequestAndParameters" fullname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest.CreateRequestAndParameters" methodname="CreateRequestAndParameters" classname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" runstate="Runnable" seed="1963552120" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.043000" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1035" name="DoesNotCreateRequestAndParametersWhenActionData" fullname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest.DoesNotCreateRequestAndParametersWhenActionData" methodname="DoesNotCreateRequestAndParametersWhenActionData" classname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" runstate="Runnable" seed="1769920104" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.086922" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1033" name="DoesNotCreateRequestAndParametersWhenDead" fullname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest.DoesNotCreateRequestAndParametersWhenDead" methodname="DoesNotCreateRequestAndParametersWhenDead" classname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" runstate="Runnable" seed="1800498363" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.075499" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1034" name="DoesNotCreateRequestAndParametersWhenDisarmBlocker" fullname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest.DoesNotCreateRequestAndParametersWhenDisarmBlocker" methodname="DoesNotCreateRequestAndParametersWhenDisarmBlocker" classname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" runstate="Runnable" seed="471826408" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.025407" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1032" name="DoesNotCreateRequestAndParametersWhenNoRequest" fullname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest.DoesNotCreateRequestAndParametersWhenNoRequest" methodname="DoesNotCreateRequestAndParametersWhenNoRequest" classname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" runstate="Runnable" seed="1367827386" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024948" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1036" name="DoesNotCreateRequestAndParametersWhenSkillActionParameters" fullname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest.DoesNotCreateRequestAndParametersWhenSkillActionParameters" methodname="DoesNotCreateRequestAndParametersWhenSkillActionParameters" classname="DMP.Battle.Client.Test.Skill.PlayerRequestSkillActionSystemTest" runstate="Runnable" seed="1089890019" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024753" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1037" name="RemovePlayerSkillActionRequestSystemTest" fullname="DMP.Battle.Client.Test.Skill.RemovePlayerSkillActionRequestSystemTest" classname="DMP.Battle.Client.Test.Skill.RemovePlayerSkillActionRequestSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.030301" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1038" name="RemovePlayerSkillCastRequest" fullname="DMP.Battle.Client.Test.Skill.RemovePlayerSkillActionRequestSystemTest.RemovePlayerSkillCastRequest" methodname="RemovePlayerSkillCastRequest" classname="DMP.Battle.Client.Test.Skill.RemovePlayerSkillActionRequestSystemTest" runstate="Runnable" seed="1859226270" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.029038" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemovePlayerSkillActionRequestSystem targeting DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1159" name="Skills" fullname="DMP.Battle.Client.Test.Skills" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:26Z" duration="0.247399" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1007" name="CreateSkillAimTagSystemTest" fullname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest" classname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.140903" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1008" name="AddSkillAimWhenPressed" fullname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest.AddSkillAimWhenPressed" methodname="AddSkillAimWhenPressed" classname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest" runstate="Runnable" seed="1738012474" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.035255" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1010" name="DoesNotAddSkillAimWhenDead" fullname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest.DoesNotAddSkillAimWhenDead" methodname="DoesNotAddSkillAimWhenDead" classname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest" runstate="Runnable" seed="1877716399" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.057013" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1009" name="DoesNotAddSkillAimWhenSkillNotPressed" fullname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest.DoesNotAddSkillAimWhenSkillNotPressed" methodname="DoesNotAddSkillAimWhenSkillNotPressed" classname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest" runstate="Runnable" seed="349213330" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.022005" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1011" name="DoesNotAddSkillAimWhenSkillOnCooldown" fullname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest.DoesNotAddSkillAimWhenSkillOnCooldown" methodname="DoesNotAddSkillAimWhenSkillOnCooldown" classname="DMP.Battle.Client.Test.Skills.CreateSkillAimTagSystemTest" runstate="Runnable" seed="2126641361" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.021807" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1012" name="RemoveSkillAimTagSystemTest" fullname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest" classname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:26Z" duration="0.105980" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1013" name="DoesNotRemoveSkillAimWhenPressed" fullname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest.DoesNotRemoveSkillAimWhenPressed" methodname="DoesNotRemoveSkillAimWhenPressed" classname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest" runstate="Runnable" seed="1978445016" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.030225" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1015" name="RemoveSkillAimWhenDead" fullname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest.RemoveSkillAimWhenDead" methodname="RemoveSkillAimWhenDead" classname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest" runstate="Runnable" seed="1923024196" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:25Z" duration="0.024887" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1014" name="RemoveSkillAimWhenNotPressed" fullname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest.RemoveSkillAimWhenNotPressed" methodname="RemoveSkillAimWhenNotPressed" classname="DMP.Battle.Client.Test.Skills.RemoveSkillAimTagSystemTest" runstate="Runnable" seed="1381613835" result="Passed" start-time="2023-03-15 12:10:25Z" end-time="2023-03-15 12:10:26Z" duration="0.049159" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.CreatePlayerSkillActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.InterruptActionBySkillCastSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem targeting DMP.Battle.Client.Skill.Systems.PlayerRequestSkillActionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="1616" name="dmp.battle.core.test.dll" fullname="/builds/dmp/main/unity/Client/Library/ScriptAssemblies/dmp.battle.core.test.dll" runstate="Runnable" testcasecount="325" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:37Z" duration="11.699061" total="325" passed="325" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="587" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
        <property name="platform" value="EditMode" />
        <property name="isAssembly" value="True" />
        <property name="EditorOnly" value="True" />
        <property name="RequiresPlayMode" value="False" />
      </properties>
      <test-suite type="TestSuite" id="1617" name="DMP" fullname="DMP" runstate="Runnable" testcasecount="325" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:37Z" duration="11.697817" total="325" passed="325" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="1618" name="Battle" fullname="DMP.Battle" runstate="Runnable" testcasecount="325" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:37Z" duration="11.694499" total="325" passed="325" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="1619" name="Core" fullname="DMP.Battle.Core" runstate="Runnable" testcasecount="325" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:37Z" duration="11.676838" total="325" passed="325" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestSuite" id="1620" name="Test" fullname="DMP.Battle.Core.Test" runstate="Runnable" testcasecount="325" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:37Z" duration="11.673193" total="325" passed="325" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="TestSuite" id="1637" name="Action" fullname="DMP.Battle.Core.Test.Action" runstate="Runnable" testcasecount="25" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.893034" total="25" passed="25" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1544" name="ActionCastTimerSystemTest" fullname="DMP.Battle.Core.Test.Action.ActionCastTimerSystemTest" classname="DMP.Battle.Core.Test.Action.ActionCastTimerSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.075236" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1546" name="TimerCompleteAndNextState" fullname="DMP.Battle.Core.Test.Action.ActionCastTimerSystemTest.TimerCompleteAndNextState" methodname="TimerCompleteAndNextState" classname="DMP.Battle.Core.Test.Action.ActionCastTimerSystemTest" runstate="Runnable" seed="613838980" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.037252" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.ActionCastTimerSystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1545" name="TimerTickWhenHasCooldown" fullname="DMP.Battle.Core.Test.Action.ActionCastTimerSystemTest.TimerTickWhenHasCooldown" methodname="TimerTickWhenHasCooldown" classname="DMP.Battle.Core.Test.Action.ActionCastTimerSystemTest" runstate="Runnable" seed="1460851363" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.033628" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.ActionCastTimerSystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1547" name="ActionPrepareSystemTest" fullname="DMP.Battle.Core.Test.Action.ActionPrepareSystemTest" classname="DMP.Battle.Core.Test.Action.ActionPrepareSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.033781" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1548" name="AddActionTimerWhenHasRequest" fullname="DMP.Battle.Core.Test.Action.ActionPrepareSystemTest.AddActionTimerWhenHasRequest" methodname="AddActionTimerWhenHasRequest" classname="DMP.Battle.Core.Test.Action.ActionPrepareSystemTest" runstate="Runnable" seed="1359896844" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.032611" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.ActionPrepareSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1549" name="ActionPrepareTimerSystemTest" fullname="DMP.Battle.Core.Test.Action.ActionPrepareTimerSystemTest" classname="DMP.Battle.Core.Test.Action.ActionPrepareTimerSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.069889" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1551" name="TimerCompleteAndNextState" fullname="DMP.Battle.Core.Test.Action.ActionPrepareTimerSystemTest.TimerCompleteAndNextState" methodname="TimerCompleteAndNextState" classname="DMP.Battle.Core.Test.Action.ActionPrepareTimerSystemTest" runstate="Runnable" seed="423665337" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.035563" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.ActionPrepareTimerSystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1550" name="TimerTickWhenHasCooldown" fullname="DMP.Battle.Core.Test.Action.ActionPrepareTimerSystemTest.TimerTickWhenHasCooldown" methodname="TimerTickWhenHasCooldown" classname="DMP.Battle.Core.Test.Action.ActionPrepareTimerSystemTest" runstate="Runnable" seed="260698960" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.033110" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.ActionPrepareTimerSystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1552" name="InterruptActionByAttackBlockerSystemTest" fullname="DMP.Battle.Core.Test.Action.InterruptActionByAttackBlockerSystemTest" classname="DMP.Battle.Core.Test.Action.InterruptActionByAttackBlockerSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.094657" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1553" name="AddInterruptRequestTest" fullname="DMP.Battle.Core.Test.Action.InterruptActionByAttackBlockerSystemTest.AddInterruptRequestTest" methodname="AddInterruptRequestTest" classname="DMP.Battle.Core.Test.Action.InterruptActionByAttackBlockerSystemTest" runstate="Runnable" seed="1690426712" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.068682" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Action.Systems.InterruptActionByAttackBlockerSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1554" name="DoesNotInterruptNotInterruptableTest" fullname="DMP.Battle.Core.Test.Action.InterruptActionByAttackBlockerSystemTest.DoesNotInterruptNotInterruptableTest" methodname="DoesNotInterruptNotInterruptableTest" classname="DMP.Battle.Core.Test.Action.InterruptActionByAttackBlockerSystemTest" runstate="Runnable" seed="1531174434" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.024435" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Action.Systems.InterruptActionByAttackBlockerSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1555" name="InterruptActionByDeathSystemTest" fullname="DMP.Battle.Core.Test.Action.InterruptActionByDeathSystemTest" classname="DMP.Battle.Core.Test.Action.InterruptActionByDeathSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.053618" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1556" name="ShouldAddInterruptActionRequestIfDead" fullname="DMP.Battle.Core.Test.Action.InterruptActionByDeathSystemTest.ShouldAddInterruptActionRequestIfDead" methodname="ShouldAddInterruptActionRequestIfDead" classname="DMP.Battle.Core.Test.Action.InterruptActionByDeathSystemTest" runstate="Runnable" seed="1627371853" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.028924" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Action.Systems.InterruptActionByDeathSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1557" name="ShouldNotAddInterruptActionRequestIfAlive" fullname="DMP.Battle.Core.Test.Action.InterruptActionByDeathSystemTest.ShouldNotAddInterruptActionRequestIfAlive" methodname="ShouldNotAddInterruptActionRequestIfAlive" classname="DMP.Battle.Core.Test.Action.InterruptActionByDeathSystemTest" runstate="Runnable" seed="1237868208" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.023284" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Action.Systems.InterruptActionByDeathSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1558" name="InterruptActionPrepareSystemTest" fullname="DMP.Battle.Core.Test.Action.InterruptActionPrepareSystemTest" classname="DMP.Battle.Core.Test.Action.InterruptActionPrepareSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.102054" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1560" name="DoesNotRemoveComponentsWithoutRequest" fullname="DMP.Battle.Core.Test.Action.InterruptActionPrepareSystemTest.DoesNotRemoveComponentsWithoutRequest" methodname="DoesNotRemoveComponentsWithoutRequest" classname="DMP.Battle.Core.Test.Action.InterruptActionPrepareSystemTest" runstate="Runnable" seed="543397507" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.025631" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1559" name="RemoveComponentsWhenHasRequest" fullname="DMP.Battle.Core.Test.Action.InterruptActionPrepareSystemTest.RemoveComponentsWhenHasRequest" methodname="RemoveComponentsWhenHasRequest" classname="DMP.Battle.Core.Test.Action.InterruptActionPrepareSystemTest" runstate="Runnable" seed="1386919221" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.075017" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1561" name="ReceiveActionRequestSystemTest" fullname="DMP.Battle.Core.Test.Action.ReceiveActionRequestSystemTest" classname="DMP.Battle.Core.Test.Action.ReceiveActionRequestSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.056293" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1563" name="DoesNotSetsActionRequestToOther" fullname="DMP.Battle.Core.Test.Action.ReceiveActionRequestSystemTest.DoesNotSetsActionRequestToOther" methodname="DoesNotSetsActionRequestToOther" classname="DMP.Battle.Core.Test.Action.ReceiveActionRequestSystemTest" runstate="Runnable" seed="348070804" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.031690" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1562" name="SetsActionRequestToReplica" fullname="DMP.Battle.Core.Test.Action.ReceiveActionRequestSystemTest.SetsActionRequestToReplica" methodname="SetsActionRequestToReplica" classname="DMP.Battle.Core.Test.Action.ReceiveActionRequestSystemTest" runstate="Runnable" seed="167228289" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.022761" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1564" name="ReceiveInterruptActionRequestSystemTest" fullname="DMP.Battle.Core.Test.Action.ReceiveInterruptActionRequestSystemTest" classname="DMP.Battle.Core.Test.Action.ReceiveInterruptActionRequestSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.050226" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1566" name="DoesNotSetsActionRequestToOther" fullname="DMP.Battle.Core.Test.Action.ReceiveInterruptActionRequestSystemTest.DoesNotSetsActionRequestToOther" methodname="DoesNotSetsActionRequestToOther" classname="DMP.Battle.Core.Test.Action.ReceiveInterruptActionRequestSystemTest" runstate="Runnable" seed="889185408" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.027088" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1565" name="SetsActionRequestToReplica" fullname="DMP.Battle.Core.Test.Action.ReceiveInterruptActionRequestSystemTest.SetsActionRequestToReplica" methodname="SetsActionRequestToReplica" classname="DMP.Battle.Core.Test.Action.ReceiveInterruptActionRequestSystemTest" runstate="Runnable" seed="1800085699" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.021643" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1567" name="RemoveActionDataSystemTest" fullname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest" classname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.171483" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1570" name="DoesNotRemoveActionDataWhenCastStageTest" fullname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest.DoesNotRemoveActionDataWhenCastStageTest" methodname="DoesNotRemoveActionDataWhenCastStageTest" classname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest" runstate="Runnable" seed="821897831" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.029456" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.RemoveActionDataSystem targeting DMP.Battle.Core.Action.Systems.RemoveInterruptActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1569" name="DoesNotRemoveActionDataWhenPrepareStageTest" fullname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest.DoesNotRemoveActionDataWhenPrepareStageTest" methodname="DoesNotRemoveActionDataWhenPrepareStageTest" classname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest" runstate="Runnable" seed="1843224539" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.067811" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.RemoveActionDataSystem targeting DMP.Battle.Core.Action.Systems.RemoveInterruptActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1572" name="DoesNotRemoveOtherBlockersTest" fullname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest.DoesNotRemoveOtherBlockersTest" methodname="DoesNotRemoveOtherBlockersTest" classname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest" runstate="Runnable" seed="1864599910" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.024446" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.RemoveActionDataSystem targeting DMP.Battle.Core.Action.Systems.RemoveInterruptActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1568" name="RemoveActionDataTest" fullname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest.RemoveActionDataTest" methodname="RemoveActionDataTest" classname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest" runstate="Runnable" seed="1441518649" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.024186" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.RemoveActionDataSystem targeting DMP.Battle.Core.Action.Systems.RemoveInterruptActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1571" name="RemoveMultipleBlockersTest" fullname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest.RemoveMultipleBlockersTest" methodname="RemoveMultipleBlockersTest" classname="DMP.Battle.Core.Test.Action.RemoveActionDataSystemTest" runstate="Runnable" seed="823376532" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.023504" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.RemoveActionDataSystem targeting DMP.Battle.Core.Action.Systems.RemoveInterruptActionRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1573" name="RemoveInterruptActionRequestSystemTest" fullname="DMP.Battle.Core.Test.Action.RemoveInterruptActionRequestSystemTest" classname="DMP.Battle.Core.Test.Action.RemoveInterruptActionRequestSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.029908" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1574" name="RemoveInterruptAction" fullname="DMP.Battle.Core.Test.Action.RemoveInterruptActionRequestSystemTest.RemoveInterruptAction" methodname="RemoveInterruptAction" classname="DMP.Battle.Core.Test.Action.RemoveInterruptActionRequestSystemTest" runstate="Runnable" seed="1558205449" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.028715" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Action.Systems.RemoveInterruptActionRequestSystem targeting DMP.Battle.Core.Action.Systems.InterruptActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1575" name="SendActionRequestSystemTest" fullname="DMP.Battle.Core.Test.Action.SendActionRequestSystemTest" classname="DMP.Battle.Core.Test.Action.SendActionRequestSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.099066" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1577" name="DoesNotAddActionRequestIfNoControlTarget" fullname="DMP.Battle.Core.Test.Action.SendActionRequestSystemTest.DoesNotAddActionRequestIfNoControlTarget" methodname="DoesNotAddActionRequestIfNoControlTarget" classname="DMP.Battle.Core.Test.Action.SendActionRequestSystemTest" runstate="Runnable" seed="1136682526" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.031548" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1576" name="SetActionRequestForControlTarget" fullname="DMP.Battle.Core.Test.Action.SendActionRequestSystemTest.SetActionRequestForControlTarget" methodname="SetActionRequestForControlTarget" classname="DMP.Battle.Core.Test.Action.SendActionRequestSystemTest" runstate="Runnable" seed="2068791323" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.066189" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1578" name="SendInterruptActionRequestSystemTest" fullname="DMP.Battle.Core.Test.Action.SendInterruptActionRequestSystemTest" classname="DMP.Battle.Core.Test.Action.SendInterruptActionRequestSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.052502" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1580" name="DoesNotAddInterruptActionRequestIfNoControlTarget" fullname="DMP.Battle.Core.Test.Action.SendInterruptActionRequestSystemTest.DoesNotAddInterruptActionRequestIfNoControlTarget" methodname="DoesNotAddInterruptActionRequestIfNoControlTarget" classname="DMP.Battle.Core.Test.Action.SendInterruptActionRequestSystemTest" runstate="Runnable" seed="1972538253" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.027220" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1579" name="SetInterruptActionRequestForControlTarget" fullname="DMP.Battle.Core.Test.Action.SendInterruptActionRequestSystemTest.SetInterruptActionRequestForControlTarget" methodname="SetInterruptActionRequestForControlTarget" classname="DMP.Battle.Core.Test.Action.SendInterruptActionRequestSystemTest" runstate="Runnable" seed="820393918" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.023740" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1638" name="AI" fullname="DMP.Battle.Core.Test.AI" runstate="Runnable" testcasecount="28" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:27Z" duration="0.951796" total="28" passed="28" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestSuite" id="1641" name="Attack" fullname="DMP.Battle.Core.Test.AI.Attack" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:27Z" duration="0.181882" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-suite type="TestFixture" id="1610" name="AttackSystemTest" fullname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest" classname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:27Z" duration="0.178436" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1611" name="CreatesAttackActionParametersAndActionRequestForClosestTarget" fullname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest.CreatesAttackActionParametersAndActionRequestForClosestTarget" methodname="CreatesAttackActionParametersAndActionRequestForClosestTarget" classname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest" runstate="Runnable" seed="1840106360" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.037370" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1613" name="ExitsIfAttackBlocker" fullname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest.ExitsIfAttackBlocker" methodname="ExitsIfAttackBlocker" classname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest" runstate="Runnable" seed="1802049941" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:26Z" duration="0.022679" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1615" name="ExitsIfClosestTargetIsTooFar" fullname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest.ExitsIfClosestTargetIsTooFar" methodname="ExitsIfClosestTargetIsTooFar" classname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest" runstate="Runnable" seed="1629899498" result="Passed" start-time="2023-03-15 12:10:26Z" end-time="2023-03-15 12:10:27Z" duration="0.027759" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1612" name="ExitsIfNoClosestTarget" fullname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest.ExitsIfNoClosestTarget" methodname="ExitsIfNoClosestTarget" classname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest" runstate="Runnable" seed="176333389" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.063025" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1614" name="StaysInAttackStateIfAlreadyInAction" fullname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest.StaysInAttackStateIfAlreadyInAction" methodname="StaysInAttackStateIfAlreadyInAction" classname="DMP.Battle.Core.Test.AI.Attack.AttackSystemTest" runstate="Runnable" seed="1018395880" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.022909" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                </test-suite>
                <test-suite type="TestSuite" id="1640" name="Chase" fullname="DMP.Battle.Core.Test.AI.Chase" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.299470" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-suite type="TestFixture" id="1598" name="ChaseSystemTest" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.214464" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1602" name="CancelsRoutingRequestOnExit" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest.CancelsRoutingRequestOnExit" methodname="CancelsRoutingRequestOnExit" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" seed="1131446687" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.030716" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1605" name="ExitsIfClosestTargetIsTooClose" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest.ExitsIfClosestTargetIsTooClose" methodname="ExitsIfClosestTargetIsTooClose" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" seed="63424491" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.023001" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1604" name="ExitsIfClosestTargetIsTooFar" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest.ExitsIfClosestTargetIsTooFar" methodname="ExitsIfClosestTargetIsTooFar" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" seed="707474057" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.021834" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1603" name="ExitsIfNoClosestTarget" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest.ExitsIfNoClosestTarget" methodname="ExitsIfNoClosestTarget" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" seed="768478798" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.026615" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1599" name="SetsNavMeshRoutingIfTargetIsInRange" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest.SetsNavMeshRoutingIfTargetIsInRange" methodname="SetsNavMeshRoutingIfTargetIsInRange" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" seed="1876926001" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.063502" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1600" name="StaysInChaseStateIfTargetIsInRage" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest.StaysInChaseStateIfTargetIsInRage" methodname="StaysInChaseStateIfTargetIsInRage" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" seed="1850168590" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.022009" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1601" name="UpdatesRoutingRequestTarget" fullname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest.UpdatesRoutingRequestTarget" methodname="UpdatesRoutingRequestTarget" classname="DMP.Battle.Core.Test.AI.Chase.ChaseSystemTest" runstate="Runnable" seed="37129815" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.022522" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1606" name="InitUnitChaseParametersSystemTest" fullname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest" classname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.084264" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1609" name="DoesNotSetTwice" fullname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest.DoesNotSetTwice" methodname="DoesNotSetTwice" classname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest" runstate="Runnable" seed="1748017856" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.033304" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.AI.Chase.Systems.InitUnitChaseParametersSystem targeting DMP.Battle.Core.AI.Systems.CreateUnitAISystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1607" name="SetsParameters" fullname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest.SetsParameters" methodname="SetsParameters" classname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest" runstate="Runnable" seed="1758398108" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.023021" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.AI.Chase.Systems.InitUnitChaseParametersSystem targeting DMP.Battle.Core.AI.Systems.CreateUnitAISystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1608" name="SetsParametersForSecondEntity" fullname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest.SetsParametersForSecondEntity" methodname="SetsParametersForSecondEntity" classname="DMP.Battle.Core.Test.AI.Chase.InitUnitChaseParametersSystemTest" runstate="Runnable" seed="1966462729" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.026308" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.AI.Chase.Systems.InitUnitChaseParametersSystem targeting DMP.Battle.Core.AI.Systems.CreateUnitAISystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                </test-suite>
                <test-suite type="TestFixture" id="1581" name="ClosestTargetSystemTest" fullname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest" classname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.143580" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1584" name="DoesNotSetTargetIfNoTargetsAround" fullname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest.DoesNotSetTargetIfNoTargetsAround" methodname="DoesNotSetTargetIfNoTargetsAround" classname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest" runstate="Runnable" seed="1081217676" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.073407" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1585" name="RemovesClosestTarget" fullname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest.RemovesClosestTarget" methodname="RemovesClosestTarget" classname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest" runstate="Runnable" seed="1204979705" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.023269" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1582" name="SetsClosestTarget" fullname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest.SetsClosestTarget" methodname="SetsClosestTarget" classname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest" runstate="Runnable" seed="1969791386" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.022008" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1583" name="UpdatesClosestTarget" fullname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest.UpdatesClosestTarget" methodname="UpdatesClosestTarget" classname="DMP.Battle.Core.Test.AI.ClosestTargetSystemTest" runstate="Runnable" seed="1430261418" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.022938" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1586" name="CreateUnitAISystemTest" fullname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest" classname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.146883" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1587" name="CreatesAiEntityAndReference" fullname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest.CreatesAiEntityAndReference" methodname="CreatesAiEntityAndReference" classname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest" runstate="Runnable" seed="1712445000" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.029450" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.AI.Systems.CreateUnitAISystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1589" name="DoesNotCreateAiForPlayer" fullname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest.DoesNotCreateAiForPlayer" methodname="DoesNotCreateAiForPlayer" classname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest" runstate="Runnable" seed="1119144321" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.027188" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.AI.Systems.CreateUnitAISystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1590" name="DoesNotCreateAiForReplicatedUnits" fullname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest.DoesNotCreateAiForReplicatedUnits" methodname="DoesNotCreateAiForReplicatedUnits" classname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest" runstate="Runnable" seed="1084558082" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.064515" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.AI.Systems.CreateUnitAISystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1588" name="DoesNotCreateAITwice" fullname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest.DoesNotCreateAITwice" methodname="DoesNotCreateAITwice" classname="DMP.Battle.Core.Test.AI.CreateUnitAISystemTest" runstate="Runnable" seed="919115492" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.023982" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.AI.Systems.CreateUnitAISystem targeting DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestSuite" id="1639" name="Idle" fullname="DMP.Battle.Core.Test.AI.Idle" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.104857" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-suite type="TestFixture" id="1593" name="IdleSystemTest" fullname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest" classname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.104258" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1597" name="GoesToAttackIfTargetIsInWeaponRange" fullname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest.GoesToAttackIfTargetIsInWeaponRange" methodname="GoesToAttackIfTargetIsInWeaponRange" classname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest" runstate="Runnable" seed="577570419" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.028405" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1596" name="GoesToChaseIfTargetIsInChaseRange" fullname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest.GoesToChaseIfTargetIsInChaseRange" methodname="GoesToChaseIfTargetIsInChaseRange" classname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest" runstate="Runnable" seed="17235142" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.022140" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1595" name="StaysInIdleIfTargetIsTooFar" fullname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest.StaysInIdleIfTargetIsTooFar" methodname="StaysInIdleIfTargetIsTooFar" classname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest" runstate="Runnable" seed="2120080968" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.022594" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1594" name="StaysInIdleIfThereAreNoTargets" fullname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest.StaysInIdleIfThereAreNoTargets" methodname="StaysInIdleIfThereAreNoTargets" classname="DMP.Battle.Core.Test.AI.Idle.IdleSystemTest" runstate="Runnable" seed="582880955" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.027426" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                </test-suite>
                <test-suite type="TestFixture" id="1591" name="TimeLeftSystemTest" fullname="DMP.Battle.Core.Test.AI.TimeLeftSystemTest" classname="DMP.Battle.Core.Test.AI.TimeLeftSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.074149" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1592" name="CountsDownTime" fullname="DMP.Battle.Core.Test.AI.TimeLeftSystemTest.CountsDownTime" methodname="CountsDownTime" classname="DMP.Battle.Core.Test.AI.TimeLeftSystemTest" runstate="Runnable" seed="332794264" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.072892" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1636" name="Attack" fullname="DMP.Battle.Core.Test.Attack" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:28Z" duration="0.337971" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1529" name="AttackCastActionSystemTest" fullname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest" classname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:28Z" duration="0.139216" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1530" name="AddSimpleAttackCooldownTest" fullname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest.AddSimpleAttackCooldownTest" methodname="AddSimpleAttackCooldownTest" classname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest" runstate="Runnable" seed="384557233" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.031261" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.AttackCastActionSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1531" name="DamageTest" fullname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest.DamageTest" methodname="DamageTest" classname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest" runstate="Runnable" seed="679414217" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.029300" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.AttackCastActionSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1533" name="DoesNotDamageWhenHasNotActionTickTest" fullname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest.DoesNotDamageWhenHasNotActionTickTest" methodname="DoesNotDamageWhenHasNotActionTickTest" classname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest" runstate="Runnable" seed="1499466998" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.024210" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.AttackCastActionSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1534" name="DoesNotDamageWhenHasNoTargetTest" fullname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest.DoesNotDamageWhenHasNoTargetTest" methodname="DoesNotDamageWhenHasNoTargetTest" classname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest" runstate="Runnable" seed="1970292032" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:27Z" duration="0.023660" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.AttackCastActionSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1532" name="SplitDamageToSeveralTicksTest" fullname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest.SplitDamageToSeveralTicksTest" methodname="SplitDamageToSeveralTicksTest" classname="DMP.Battle.Core.Test.Attack.AttackCastActionSystemTest" runstate="Runnable" seed="1994966383" result="Passed" start-time="2023-03-15 12:10:27Z" end-time="2023-03-15 12:10:28Z" duration="0.026905" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.AttackCastActionSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1535" name="AttackCooldownTimerSystemTest" fullname="DMP.Battle.Core.Test.Attack.AttackCooldownTimerSystemTest" classname="DMP.Battle.Core.Test.Attack.AttackCooldownTimerSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.109071" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1537" name="TimerCompleteAndNextState" fullname="DMP.Battle.Core.Test.Attack.AttackCooldownTimerSystemTest.TimerCompleteAndNextState" methodname="TimerCompleteAndNextState" classname="DMP.Battle.Core.Test.Attack.AttackCooldownTimerSystemTest" runstate="Runnable" seed="1761819759" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.077845" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.AttackCooldownTimerSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1536" name="TimerTickWhenHasCooldown" fullname="DMP.Battle.Core.Test.Attack.AttackCooldownTimerSystemTest.TimerTickWhenHasCooldown" methodname="TimerTickWhenHasCooldown" classname="DMP.Battle.Core.Test.Attack.AttackCooldownTimerSystemTest" runstate="Runnable" seed="1857640946" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.029652" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.AttackCooldownTimerSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1538" name="CreateAttackCastRequestSystemTest" fullname="DMP.Battle.Core.Test.Attack.CreateAttackCastRequestSystemTest" classname="DMP.Battle.Core.Test.Attack.CreateAttackCastRequestSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.029094" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1539" name="CreateCastRequestOnActionPrepareState" fullname="DMP.Battle.Core.Test.Attack.CreateAttackCastRequestSystemTest.CreateCastRequestOnActionPrepareState" methodname="CreateCastRequestOnActionPrepareState" classname="DMP.Battle.Core.Test.Attack.CreateAttackCastRequestSystemTest" runstate="Runnable" seed="907225612" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.027853" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.CreateAttackCastRequestSystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1540" name="RemoveAttackActionParametersSystemTest" fullname="DMP.Battle.Core.Test.Attack.RemoveAttackActionParametersSystemTest" classname="DMP.Battle.Core.Test.Attack.RemoveAttackActionParametersSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.030470" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1541" name="RemoveSkillActionParameters" fullname="DMP.Battle.Core.Test.Attack.RemoveAttackActionParametersSystemTest.RemoveSkillActionParameters" methodname="RemoveSkillActionParameters" classname="DMP.Battle.Core.Test.Attack.RemoveAttackActionParametersSystemTest" runstate="Runnable" seed="2006522881" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.029415" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.RemoveAttackActionParametersSystem targeting DMP.Battle.Core.Attack.Systems.RemoveAttackRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1542" name="RemoveAttackRequestSystemTest" fullname="DMP.Battle.Core.Test.Attack.RemoveAttackRequestSystemTest" classname="DMP.Battle.Core.Test.Attack.RemoveAttackRequestSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.029158" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1543" name="RemoveDamageRequest" fullname="DMP.Battle.Core.Test.Attack.RemoveAttackRequestSystemTest.RemoveDamageRequest" methodname="RemoveDamageRequest" classname="DMP.Battle.Core.Test.Attack.RemoveAttackRequestSystemTest" runstate="Runnable" seed="65192645" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.028004" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Attack.Systems.RemoveAttackRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1634" name="Blockers" fullname="DMP.Battle.Core.Test.Blockers" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.129484" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1517" name="BaseBlockerSystemTest" fullname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest" classname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.129056" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1518" name="AddBlockerTest" fullname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest.AddBlockerTest" methodname="AddBlockerTest" classname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest" runstate="Runnable" seed="960034627" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.035753" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1520" name="DoesNotRemoveBlockerWhenHasSeveralTest" fullname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest.DoesNotRemoveBlockerWhenHasSeveralTest" methodname="DoesNotRemoveBlockerWhenHasSeveralTest" classname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest" runstate="Runnable" seed="1071293077" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.065139" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1519" name="RemoveBlockerTest" fullname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest.RemoveBlockerTest" methodname="RemoveBlockerTest" classname="DMP.Battle.Core.Test.Blockers.BaseBlockerSystemTest" runstate="Runnable" seed="1940878704" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.023664" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1635" name="CombatActions" fullname="DMP.Battle.Core.Test.CombatActions" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.201925" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1521" name="ReceiveAttackActionParametersSystemTest" fullname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest" classname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.075603" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1524" name="DoesNotSetsActionRequestToOther" fullname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest.DoesNotSetsActionRequestToOther" methodname="DoesNotSetsActionRequestToOther" classname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest" runstate="Runnable" seed="896662244" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.029303" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1522" name="SetsActionRequestToReplica" fullname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest.SetsActionRequestToReplica" methodname="SetsActionRequestToReplica" classname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest" runstate="Runnable" seed="1926206746" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.021855" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1523" name="SetsActionRequestWithoutTargetToReplica" fullname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest.SetsActionRequestWithoutTargetToReplica" methodname="SetsActionRequestWithoutTargetToReplica" classname="DMP.Battle.Core.Test.CombatActions.ReceiveAttackActionParametersSystemTest" runstate="Runnable" seed="1238358417" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.020909" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1525" name="SendAttackActionParametersSystemTest" fullname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest" classname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.125617" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1528" name="DoesNotAddActionRequestIfNoControlTarget" fullname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest.DoesNotAddActionRequestIfNoControlTarget" methodname="DoesNotAddActionRequestIfNoControlTarget" classname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest" runstate="Runnable" seed="864556487" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.028932" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1526" name="SetActionRequestForControlTarget" fullname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest.SetActionRequestForControlTarget" methodname="SetActionRequestForControlTarget" classname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest" runstate="Runnable" seed="1660158979" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.070124" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1527" name="SetActionRequestWithoutTargetForControlTarget" fullname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest.SetActionRequestWithoutTargetForControlTarget" methodname="SetActionRequestWithoutTargetForControlTarget" classname="DMP.Battle.Core.Test.CombatActions.SendAttackActionParametersSystemTest" runstate="Runnable" seed="1064571216" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.024964" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1633" name="Damage" fullname="DMP.Battle.Core.Test.Damage" runstate="Runnable" testcasecount="17" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:29Z" duration="0.602815" total="17" passed="17" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1493" name="DamageArmorResistSystemTest" fullname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest" classname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.116316" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1497" name="ResistDamageByArmorTest" fullname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest.ResistDamageByArmorTest" methodname="ResistDamageByArmorTest" classname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest" runstate="Runnable" seed="2023229950" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.036513" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageArmorResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageEnergyChargeSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1496" name="ResistDamageByLevelTest" fullname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest.ResistDamageByLevelTest" methodname="ResistDamageByLevelTest" classname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest" runstate="Runnable" seed="1008783011" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.025633" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageArmorResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageEnergyChargeSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1494" name="ResistDamageToPlayerTest" fullname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest.ResistDamageToPlayerTest" methodname="ResistDamageToPlayerTest" classname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest" runstate="Runnable" seed="2137033956" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.025335" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageArmorResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageEnergyChargeSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1495" name="ResistDamageToUnitTest" fullname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest.ResistDamageToUnitTest" methodname="ResistDamageToUnitTest" classname="DMP.Battle.Core.Test.Damage.DamageArmorResistSystemTest" runstate="Runnable" seed="664542825" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.025131" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageArmorResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageEnergyChargeSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1498" name="DamageClassWeaponSystemTest" fullname="DMP.Battle.Core.Test.Damage.DamageClassWeaponSystemTest" classname="DMP.Battle.Core.Test.Damage.DamageClassWeaponSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.077486" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1499" name="AddClassWeaponDamageTest" fullname="DMP.Battle.Core.Test.Damage.DamageClassWeaponSystemTest.AddClassWeaponDamageTest" methodname="AddClassWeaponDamageTest" classname="DMP.Battle.Core.Test.Damage.DamageClassWeaponSystemTest" runstate="Runnable" seed="584450815" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.076230" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1500" name="DamageCompleteSystemTest" fullname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest" classname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.103690" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1504" name="DoesNotAddDamageTwiceTest" fullname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest.DoesNotAddDamageTwiceTest" methodname="DoesNotAddDamageTwiceTest" classname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest" runstate="Runnable" seed="1680243537" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.030625" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1503" name="RemoveTest" fullname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest.RemoveTest" methodname="RemoveTest" classname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest" runstate="Runnable" seed="1805798947" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.024171" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1501" name="SendDamageTest" fullname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest.SendDamageTest" methodname="SendDamageTest" classname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest" runstate="Runnable" seed="829333653" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.023784" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1502" name="SendSplitDamageTest" fullname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest.SendSplitDamageTest" methodname="SendSplitDamageTest" classname="DMP.Battle.Core.Test.Damage.DamageCompleteSystemTest" runstate="Runnable" seed="1100392144" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.023379" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1505" name="DamageEnergyChargeSystemTest" fullname="DMP.Battle.Core.Test.Damage.DamageEnergyChargeSystemTest" classname="DMP.Battle.Core.Test.Damage.DamageEnergyChargeSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.104990" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1506" name="AddChargeEffectTest" fullname="DMP.Battle.Core.Test.Damage.DamageEnergyChargeSystemTest.AddChargeEffectTest" methodname="AddChargeEffectTest" classname="DMP.Battle.Core.Test.Damage.DamageEnergyChargeSystemTest" runstate="Runnable" seed="1846926759" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.030704" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageEnergyChargeSystem targeting DMP.Battle.Core.Damage.Systems.DamageFractionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1507" name="DoesNotAddChargeEffectTest" fullname="DMP.Battle.Core.Test.Damage.DamageEnergyChargeSystemTest.DoesNotAddChargeEffectTest" methodname="DoesNotAddChargeEffectTest" classname="DMP.Battle.Core.Test.Damage.DamageEnergyChargeSystemTest" runstate="Runnable" seed="2045542045" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.072915" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageEnergyChargeSystem targeting DMP.Battle.Core.Damage.Systems.DamageFractionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1508" name="DamageEnergyShieldResistSystemTest" fullname="DMP.Battle.Core.Test.Damage.DamageEnergyShieldResistSystemTest" classname="DMP.Battle.Core.Test.Damage.DamageEnergyShieldResistSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:29Z" duration="0.058429" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1510" name="DoesNotUseEnergyShieldTest" fullname="DMP.Battle.Core.Test.Damage.DamageEnergyShieldResistSystemTest.DoesNotUseEnergyShieldTest" methodname="DoesNotUseEnergyShieldTest" classname="DMP.Battle.Core.Test.Damage.DamageEnergyShieldResistSystemTest" runstate="Runnable" seed="852292616" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:28Z" duration="0.031656" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageEnergyShieldResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageFractionResistSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1509" name="UseEnergyShieldTest" fullname="DMP.Battle.Core.Test.Damage.DamageEnergyShieldResistSystemTest.UseEnergyShieldTest" methodname="UseEnergyShieldTest" classname="DMP.Battle.Core.Test.Damage.DamageEnergyShieldResistSystemTest" runstate="Runnable" seed="135661696" result="Passed" start-time="2023-03-15 12:10:28Z" end-time="2023-03-15 12:10:29Z" duration="0.025295" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageEnergyShieldResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageFractionResistSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1511" name="DamageFractionResistSystemTest" fullname="DMP.Battle.Core.Test.Damage.DamageFractionResistSystemTest" classname="DMP.Battle.Core.Test.Damage.DamageFractionResistSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.058179" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1512" name="AddFractionDamageTest" fullname="DMP.Battle.Core.Test.Damage.DamageFractionResistSystemTest.AddFractionDamageTest" methodname="AddFractionDamageTest" classname="DMP.Battle.Core.Test.Damage.DamageFractionResistSystemTest" runstate="Runnable" seed="429052416" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.032452" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageFractionResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageArmorResistSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1513" name="DoesNotAddFractionDamageTest" fullname="DMP.Battle.Core.Test.Damage.DamageFractionResistSystemTest.DoesNotAddFractionDamageTest" methodname="DoesNotAddFractionDamageTest" classname="DMP.Battle.Core.Test.Damage.DamageFractionResistSystemTest" runstate="Runnable" seed="2104104582" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.024333" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageFractionResistSystem targeting DMP.Battle.Core.Damage.Systems.DamageArmorResistSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1514" name="DamageFractionSystemTest" fullname="DMP.Battle.Core.Test.Damage.DamageFractionSystemTest" classname="DMP.Battle.Core.Test.Damage.DamageFractionSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.082388" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1515" name="AddFractionDamageTest" fullname="DMP.Battle.Core.Test.Damage.DamageFractionSystemTest.AddFractionDamageTest" methodname="AddFractionDamageTest" classname="DMP.Battle.Core.Test.Damage.DamageFractionSystemTest" runstate="Runnable" seed="1599757895" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.031089" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageFractionSystem targeting DMP.Battle.Core.Damage.Systems.DamageClassWeaponSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1516" name="DoesNotAddFractionDamageTest" fullname="DMP.Battle.Core.Test.Damage.DamageFractionSystemTest.DoesNotAddFractionDamageTest" methodname="DoesNotAddFractionDamageTest" classname="DMP.Battle.Core.Test.Damage.DamageFractionSystemTest" runstate="Runnable" seed="964118120" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.049849" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Damage.Systems.DamageFractionSystem targeting DMP.Battle.Core.Damage.Systems.DamageClassWeaponSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Damage.DamageGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1632" name="Destroy" fullname="DMP.Battle.Core.Test.Destroy" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.160498" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1486" name="DestroyUnitSystemTest" fullname="DMP.Battle.Core.Test.Destroy.DestroyUnitSystemTest" classname="DMP.Battle.Core.Test.Destroy.DestroyUnitSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.078525" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1487" name="DestroysEntitiesWithTombstones" fullname="DMP.Battle.Core.Test.Destroy.DestroyUnitSystemTest.DestroysEntitiesWithTombstones" methodname="DestroysEntitiesWithTombstones" classname="DMP.Battle.Core.Test.Destroy.DestroyUnitSystemTest" runstate="Runnable" seed="1629000347" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.051028" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1488" name="DoesNotDestroyOtherEntities" fullname="DMP.Battle.Core.Test.Destroy.DestroyUnitSystemTest.DoesNotDestroyOtherEntities" methodname="DoesNotDestroyOtherEntities" classname="DMP.Battle.Core.Test.Destroy.DestroyUnitSystemTest" runstate="Runnable" seed="108752456" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.023784" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1489" name="MarkDestroyByObjectSystemTest" fullname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest" classname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.081178" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1492" name="DoesNotSetTombstoneIfIdIsDifferent" fullname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest.DoesNotSetTombstoneIfIdIsDifferent" methodname="DoesNotSetTombstoneIfIdIsDifferent" classname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest" runstate="Runnable" seed="311666202" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.030530" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1491" name="DoesNotSetTombstoneIfTemplateIsDifferent" fullname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest.DoesNotSetTombstoneIfTemplateIsDifferent" methodname="DoesNotSetTombstoneIfTemplateIsDifferent" classname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest" runstate="Runnable" seed="280323699" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.024386" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1490" name="SetsTombstoneOnDeletedObjects" fullname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest.SetsTombstoneOnDeletedObjects" methodname="SetsTombstoneOnDeletedObjects" classname="DMP.Battle.Core.Test.Destroy.MarkDestroyByObjectSystemTest" runstate="Runnable" seed="683920148" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.024641" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1629" name="Effects" fullname="DMP.Battle.Core.Test.Effects" runstate="Runnable" testcasecount="136" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:34Z" duration="4.940364" total="136" passed="136" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1307" name="BaseDOTEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.312286" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1308" name="AddDamageTest" fullname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest.AddDamageTest" methodname="AddDamageTest" classname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest" runstate="Runnable" seed="140612030" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.033959" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1309" name="RemoveEffectByTimeTest" fullname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest.RemoveEffectByTimeTest" methodname="RemoveEffectByTimeTest" classname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest" runstate="Runnable" seed="531657141" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.091664" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1312" name="UnlimitedEffectTest" fullname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest.UnlimitedEffectTest" methodname="UnlimitedEffectTest" classname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest" runstate="Runnable" seed="1946350480" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.079338" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1311" name="UpdateTimeAndTickTest" fullname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest.UpdateTimeAndTickTest" methodname="UpdateTimeAndTickTest" classname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest" runstate="Runnable" seed="663343881" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.053498" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1310" name="WaitTimeTest" fullname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest.WaitTimeTest" methodname="WaitTimeTest" classname="DMP.Battle.Core.Test.Effects.BaseDOTEffectSystemTest" runstate="Runnable" seed="1778293751" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.049999" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1313" name="BaseSurvivalParametersLoseLocationSystemTest" fullname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest" classname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.179977" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1314" name="LoseByTimeParameterTest" fullname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest.LoseByTimeParameterTest" methodname="LoseByTimeParameterTest" classname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest" runstate="Runnable" seed="792643052" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.055159" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1315" name="StopChangeParameterTest" fullname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest.StopChangeParameterTest" methodname="StopChangeParameterTest" classname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest" runstate="Runnable" seed="432775807" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.037157" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1316" name="WaitTimeTest" fullname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest.WaitTimeTest" methodname="WaitTimeTest" classname="DMP.Battle.Core.Test.Effects.BaseSurvivalParametersLoseLocationSystemTest" runstate="Runnable" seed="1824236637" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.085668" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestSuite" id="1631" name="Effects" fullname="DMP.Battle.Core.Test.Effects.Effects" runstate="Runnable" testcasecount="112" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:33Z" duration="3.902691" total="112" passed="112" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-suite type="TestFixture" id="1340" name="AggroEffectDispellSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.082672" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1341" name="DispellSelfEffectRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest.DispellSelfEffectRequestTest" methodname="DispellSelfEffectRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest" runstate="Runnable" seed="1968133388" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.031820" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1342" name="DoesNotDispellOtherEffectTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest.DoesNotDispellOtherEffectTest" methodname="DoesNotDispellOtherEffectTest" classname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest" runstate="Runnable" seed="897662000" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.023593" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1343" name="DoesNotUpdateWithoutRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest.DoesNotUpdateWithoutRequestTest" methodname="DoesNotUpdateWithoutRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectDispellSystemTest" runstate="Runnable" seed="1419254726" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.023685" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1344" name="AggroEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.056382" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1345" name="AddBlockerTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectSystemTest.AddBlockerTest" methodname="AddBlockerTest" classname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectSystemTest" runstate="Runnable" seed="642803830" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.031463" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.AggroEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1346" name="DoesNotAddWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectSystemTest.DoesNotAddWithoutTagTest" methodname="DoesNotAddWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.AggroEffectSystemTest" runstate="Runnable" seed="1392254610" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:29Z" duration="0.023565" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.AggroEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1347" name="AttackDamageEffectDispelSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageEffectDispelSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageEffectDispelSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:30Z" duration="0.142482" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1348" name="DispellSelfEffectRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageEffectDispelSystemTest.DispellSelfEffectRequestTest" methodname="DispellSelfEffectRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageEffectDispelSystemTest" runstate="Runnable" seed="1810936577" result="Passed" start-time="2023-03-15 12:10:29Z" end-time="2023-03-15 12:10:30Z" duration="0.055294" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1349" name="DoesNotUpdateWithoutRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageEffectDispelSystemTest.DoesNotUpdateWithoutRequestTest" methodname="DoesNotUpdateWithoutRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageEffectDispelSystemTest" runstate="Runnable" seed="1052745694" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.085717" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1350" name="AttackDamageTickEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.117403" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1351" name="CreateDamageRequestEntityTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest.CreateDamageRequestEntityTest" methodname="CreateDamageRequestEntityTest" classname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest" runstate="Runnable" seed="1770579255" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.066037" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.AttackDamageTickEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1353" name="DoesNotTickTwiceTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest.DoesNotTickTwiceTest" methodname="DoesNotTickTwiceTest" classname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest" runstate="Runnable" seed="635384874" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.025060" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.AttackDamageTickEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1352" name="RemoveTickTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest.RemoveTickTagTest" methodname="RemoveTickTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.AttackDamageTickEffectSystemTest" runstate="Runnable" seed="409669356" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.024730" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.AttackDamageTickEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1354" name="BaseDispellEffectParameterSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.082059" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1357" name="DoesNotRemoveModificatorWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest.DoesNotRemoveModificatorWithoutTagTest" methodname="DoesNotRemoveModificatorWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest" runstate="Runnable" seed="2137867777" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.029498" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1356" name="DoesNotRemoveOtherTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest.DoesNotRemoveOtherTest" methodname="DoesNotRemoveOtherTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest" runstate="Runnable" seed="757006243" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.024890" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1355" name="RemoveModificatorTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest.RemoveModificatorTest" methodname="RemoveModificatorTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseDispellEffectParameterSystemTest" runstate="Runnable" seed="1888308439" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.026003" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1358" name="BaseParameterEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.149100" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1359" name="AddModificatorTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest.AddModificatorTest" methodname="AddModificatorTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest" runstate="Runnable" seed="594293355" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.074242" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Test.Effects.Effects.TestParameterEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1360" name="AddTwoDifferentModificatorsTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest.AddTwoDifferentModificatorsTest" methodname="AddTwoDifferentModificatorsTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest" runstate="Runnable" seed="784395042" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.025205" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Test.Effects.Effects.TestParameterEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1362" name="DoesNotAddModificatorWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest.DoesNotAddModificatorWithoutTagTest" methodname="DoesNotAddModificatorWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest" runstate="Runnable" seed="399676752" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.023549" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Test.Effects.Effects.TestParameterEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1361" name="RemoveTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest.RemoveTagTest" methodname="RemoveTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.BaseParameterEffectSystemTest" runstate="Runnable" seed="722256223" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.023998" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Test.Effects.Effects.TestParameterEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1363" name="DashEffectDispelSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.126285" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1364" name="DispellSelfEffectRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest.DispellSelfEffectRequestTest" methodname="DispellSelfEffectRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest" runstate="Runnable" seed="395803386" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.030716" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1365" name="DoesNotDispellOtherEffectTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest.DoesNotDispellOtherEffectTest" methodname="DoesNotDispellOtherEffectTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest" runstate="Runnable" seed="1880910528" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.023779" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1366" name="DoesNotUpdateWithoutRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest.DoesNotUpdateWithoutRequestTest" methodname="DoesNotUpdateWithoutRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDispelSystemTest" runstate="Runnable" seed="847348357" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.070255" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1367" name="DashEffectDurationModificationSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.083756" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1368" name="ChangeDurationByDistance" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest.ChangeDurationByDistance" methodname="ChangeDurationByDistance" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest" runstate="Runnable" seed="968079686" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.033088" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Effects.Effects.Systems.DashEffectDurationModificationSystem targeting DMP.Battle.Core.Effects.Requests.Systems.EffectRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Requests.EffectRequestGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1370" name="DoesNotChangeDurationSecondTime" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest.DoesNotChangeDurationSecondTime" methodname="DoesNotChangeDurationSecondTime" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest" runstate="Runnable" seed="488492496" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.024620" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Effects.Effects.Systems.DashEffectDurationModificationSystem targeting DMP.Battle.Core.Effects.Requests.Systems.EffectRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Requests.EffectRequestGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1369" name="SetMaxDurationIfDistanceIsBigger" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest.SetMaxDurationIfDistanceIsBigger" methodname="SetMaxDurationIfDistanceIsBigger" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectDurationModificationSystemTest" runstate="Runnable" seed="1993864440" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.024369" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Effects.Effects.Systems.DashEffectDurationModificationSystem targeting DMP.Battle.Core.Effects.Requests.Systems.EffectRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Requests.EffectRequestGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1371" name="DashEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.055838" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1372" name="AddBlockersTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectSystemTest.AddBlockersTest" methodname="AddBlockersTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectSystemTest" runstate="Runnable" seed="1348336044" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.031013" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.DashEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1373" name="DoesNotAddWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashEffectSystemTest.DoesNotAddWithoutTagTest" methodname="DoesNotAddWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashEffectSystemTest" runstate="Runnable" seed="701408641" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.023452" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.DashEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1374" name="DashNavMeshAgentMoveSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.178572" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1375" name="DashNavMeshAgentProxyTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest.DashNavMeshAgentProxyTest" methodname="DashNavMeshAgentProxyTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest" runstate="Runnable" seed="2140093062" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.046580" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1376" name="DisableWhenPositionReachedTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest.DisableWhenPositionReachedTest" methodname="DisableWhenPositionReachedTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest" runstate="Runnable" seed="843155371" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.056954" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1379" name="DoesNotUpdateWithAutoRoutingTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest.DoesNotUpdateWithAutoRoutingTest" methodname="DoesNotUpdateWithAutoRoutingTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest" runstate="Runnable" seed="1481094835" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.024772" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1378" name="DoesNotUpdateWithDeadTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest.DoesNotUpdateWithDeadTagTest" methodname="DoesNotUpdateWithDeadTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest" runstate="Runnable" seed="1475198580" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.024349" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1377" name="DoesNotUpdateWithoutDashActionDataTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest.DoesNotUpdateWithoutDashActionDataTest" methodname="DoesNotUpdateWithoutDashActionDataTest" classname="DMP.Battle.Core.Test.Effects.Effects.DashNavMeshAgentMoveSystemTest" runstate="Runnable" seed="99779055" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.023990" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1380" name="DisarmEffectDispellSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:31Z" duration="0.126986" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1381" name="DispellSelfEffectRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest.DispellSelfEffectRequest" methodname="DispellSelfEffectRequest" classname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest" runstate="Runnable" seed="1174338579" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.030878" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1382" name="DoesNotDispellOtherChargeRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest.DoesNotDispellOtherChargeRequest" methodname="DoesNotDispellOtherChargeRequest" classname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest" runstate="Runnable" seed="1242500759" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:30Z" duration="0.025933" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1383" name="DoesNotUpdateWithoutRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest.DoesNotUpdateWithoutRequest" methodname="DoesNotUpdateWithoutRequest" classname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectDispellSystemTest" runstate="Runnable" seed="1001105886" result="Passed" start-time="2023-03-15 12:10:30Z" end-time="2023-03-15 12:10:31Z" duration="0.068558" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1384" name="DisarmEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.056112" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1385" name="AddMoveBlockerTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectSystemTest.AddMoveBlockerTest" methodname="AddMoveBlockerTest" classname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectSystemTest" runstate="Runnable" seed="1638904301" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.030112" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.DisarmEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1386" name="DoesNotAddWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectSystemTest.DoesNotAddWithoutTagTest" methodname="DoesNotAddWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.DisarmEffectSystemTest" runstate="Runnable" seed="1974979372" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.024647" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.DisarmEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1387" name="DotTickEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.081304" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1388" name="AddDotEffectToTargetTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest.AddDotEffectToTargetTest" methodname="AddDotEffectToTargetTest" classname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest" runstate="Runnable" seed="1504427471" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.030700" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.DotTickEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1390" name="DoesNotTickTwiceTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest.DoesNotTickTwiceTest" methodname="DoesNotTickTwiceTest" classname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest" runstate="Runnable" seed="666786340" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.025108" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.DotTickEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1389" name="RemoveTickTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest.RemoveTickTagTest" methodname="RemoveTickTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.DotTickEffectSystemTest" runstate="Runnable" seed="21821773" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023930" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.DotTickEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1391" name="EffectCompleteSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.130368" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1392" name="AddTickTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest.AddTickTagTest" methodname="AddTickTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest" runstate="Runnable" seed="1273994994" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.077978" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectCompleteSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectLifeTimeSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1393" name="DoesNotAddTagByTimeTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest.DoesNotAddTagByTimeTest" methodname="DoesNotAddTagByTimeTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest" runstate="Runnable" seed="617739485" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.026112" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectCompleteSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectLifeTimeSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1394" name="DoesNotAddTagWhenHasTickTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest.DoesNotAddTagWhenHasTickTagTest" methodname="DoesNotAddTagWhenHasTickTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCompleteSystemTest" runstate="Runnable" seed="420546229" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.024669" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectCompleteSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectLifeTimeSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1395" name="EffectCreateNextSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.089090" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1396" name="AddEffectRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest.AddEffectRequestTest" methodname="AddEffectRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest" runstate="Runnable" seed="1629339082" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.040791" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1398" name="DoesNotUpdateWithoutDispellRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest.DoesNotUpdateWithoutDispellRequestTest" methodname="DoesNotUpdateWithoutDispellRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest" runstate="Runnable" seed="1257938915" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023693" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1397" name="DoesNotUpdateWithoutHasNextEffectTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest.DoesNotUpdateWithoutHasNextEffectTagTest" methodname="DoesNotUpdateWithoutHasNextEffectTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectCreateNextSystemTest" runstate="Runnable" seed="140059309" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023091" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1399" name="EffectDispelSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.150284" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1400" name="AddDestroyTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest.AddDestroyTagTest" methodname="AddDestroyTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest" runstate="Runnable" seed="1711507416" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.053050" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1403" name="DoesNotRemoveFromBufferWhenTargetDestroyedTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest.DoesNotRemoveFromBufferWhenTargetDestroyedTest" methodname="DoesNotRemoveFromBufferWhenTargetDestroyedTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest" runstate="Runnable" seed="1567360623" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.048007" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1402" name="DoesNotUpdateWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest.DoesNotUpdateWithoutTagTest" methodname="DoesNotUpdateWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest" runstate="Runnable" seed="1693490651" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023777" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1401" name="RemoveFromBufferTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest.RemoveFromBufferTest" methodname="RemoveFromBufferTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectDispelSystemTest" runstate="Runnable" seed="2070899434" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023577" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1404" name="EffectLifeTimeSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.103329" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1405" name="CountsDownTimeTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest.CountsDownTimeTest" methodname="CountsDownTimeTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest" runstate="Runnable" seed="267490857" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.029963" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectLifeTimeSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1407" name="UpdateTickCountTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest.UpdateTickCountTest" methodname="UpdateTickCountTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest" runstate="Runnable" seed="1687777478" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.042905" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectLifeTimeSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1406" name="UpdateTickTimeTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest.UpdateTickTimeTest" methodname="UpdateTickTimeTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectLifeTimeSystemTest" runstate="Runnable" seed="720803350" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.028851" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectLifeTimeSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1408" name="EffectStackSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" testcasecount="12" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:32Z" duration="0.390073" total="12" passed="12" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1410" name="AddDifferentLevelEffectWithDifferentBatchTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.AddDifferentLevelEffectWithDifferentBatchTagTest" methodname="AddDifferentLevelEffectWithDifferentBatchTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="952602582" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.072875" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1409" name="AddSameLevelEffectWithDifferentBatchTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.AddSameLevelEffectWithDifferentBatchTagTest" methodname="AddSameLevelEffectWithDifferentBatchTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="1385974266" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023575" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1418" name="AddWithOutStackTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.AddWithOutStackTest" methodname="AddWithOutStackTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="1061843816" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023918" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1420" name="DoesNotAddToBufferTwiceTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.DoesNotAddToBufferTwiceTest" methodname="DoesNotAddToBufferTwiceTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="1448377403" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023137" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1417" name="DoesNotReplaceByLoverLevelTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.DoesNotReplaceByLoverLevelTest" methodname="DoesNotReplaceByLoverLevelTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="965206275" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023445" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1413" name="DoesNotReplaceStackedEffectByLowerLevelTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.DoesNotReplaceStackedEffectByLowerLevelTest" methodname="DoesNotReplaceStackedEffectByLowerLevelTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="1664168499" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023619" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1416" name="ReplaceByHigherLevelTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.ReplaceByHigherLevelTest" methodname="ReplaceByHigherLevelTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="1629922713" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.073053" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1415" name="ReplaceBySameLevelTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.ReplaceBySameLevelTest" methodname="ReplaceBySameLevelTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="1910307312" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.024905" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1412" name="ReplaceStackedEffectByHigherLevelTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.ReplaceStackedEffectByHigherLevelTest" methodname="ReplaceStackedEffectByHigherLevelTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="1127467431" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.024586" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1414" name="SeveralStacksTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.SeveralStacksTest" methodname="SeveralStacksTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="303632721" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:31Z" duration="0.023916" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1419" name="SimpleAddToBufferTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.SimpleAddToBufferTest" methodname="SimpleAddToBufferTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="494395861" result="Passed" start-time="2023-03-15 12:10:31Z" end-time="2023-03-15 12:10:32Z" duration="0.024513" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1411" name="StackLimitTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest.StackLimitTest" methodname="StackLimitTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectStackSystemTest" runstate="Runnable" seed="155169857" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.024987" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1421" name="EffectTickSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectTickSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectTickSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.105099" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1422" name="AddTickTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectTickSystemTest.AddTickTagTest" methodname="AddTickTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectTickSystemTest" runstate="Runnable" seed="152775300" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.033606" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectStackSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1423" name="UpdateTimeAndAddTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EffectTickSystemTest.UpdateTimeAndAddTagTest" methodname="UpdateTimeAndAddTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EffectTickSystemTest" runstate="Runnable" seed="1373759859" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.070150" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectStackSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1424" name="EnergyChargeEffectChangeSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.099825" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1428" name="DoesNotAddTagToOtherTypeOfEffectsTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest.DoesNotAddTagToOtherTypeOfEffectsTest" methodname="DoesNotAddTagToOtherTypeOfEffectsTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest" runstate="Runnable" seed="2065625609" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.029157" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1427" name="DoesNotEnableNextChargeTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest.DoesNotEnableNextChargeTest" methodname="DoesNotEnableNextChargeTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest" runstate="Runnable" seed="1435818387" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.023201" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1425" name="NextChargeTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest.NextChargeTest" methodname="NextChargeTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest" runstate="Runnable" seed="2082680339" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.023072" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1426" name="ShouldBeFirstOfBufferEffectTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest.ShouldBeFirstOfBufferEffectTest" methodname="ShouldBeFirstOfBufferEffectTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectChangeSystemTest" runstate="Runnable" seed="1178939379" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.022492" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1429" name="EnergyChargeEffectDispelSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.127900" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1430" name="DispellSelfChargeRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest.DispellSelfChargeRequest" methodname="DispellSelfChargeRequest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest" runstate="Runnable" seed="1455825816" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.029490" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1431" name="DoesNotDispellOtherChargeRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest.DoesNotDispellOtherChargeRequest" methodname="DoesNotDispellOtherChargeRequest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest" runstate="Runnable" seed="2084610608" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.072858" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1432" name="DoesNotUpdateWithoutRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest.DoesNotUpdateWithoutRequest" methodname="DoesNotUpdateWithoutRequest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectDispelSystemTest" runstate="Runnable" seed="648902028" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.023986" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1433" name="EnergyChargeEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.080159" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1434" name="AddChargeTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest.AddChargeTest" methodname="AddChargeTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest" runstate="Runnable" seed="599193995" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.029701" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.EnergyChargeEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1435" name="DoesNotUpdateChargeTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest.DoesNotUpdateChargeTest" methodname="DoesNotUpdateChargeTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest" runstate="Runnable" seed="1734594116" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.024676" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.EnergyChargeEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1436" name="DoesNotUpdateWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest.DoesNotUpdateWithoutTagTest" methodname="DoesNotUpdateWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyChargeEffectSystemTest" runstate="Runnable" seed="1682739767" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.024243" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.EnergyChargeEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1437" name="EnergyShieldEffectChangeSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.147554" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1441" name="DoesNotAddTagToOtherTypeOfEffectsTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest.DoesNotAddTagToOtherTypeOfEffectsTest" methodname="DoesNotAddTagToOtherTypeOfEffectsTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest" runstate="Runnable" seed="449202458" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.028456" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1440" name="DoesNotEnableNextShieldTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest.DoesNotEnableNextShieldTest" methodname="DoesNotEnableNextShieldTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest" runstate="Runnable" seed="1663155170" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.040355" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1438" name="NextShieldTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest.NextShieldTest" methodname="NextShieldTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest" runstate="Runnable" seed="511447434" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.054361" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1439" name="ShouldBeFirstOfBufferEffectTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest.ShouldBeFirstOfBufferEffectTest" methodname="ShouldBeFirstOfBufferEffectTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectChangeSystemTest" runstate="Runnable" seed="338368462" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.022523" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1442" name="EnergyShieldEffectDispellSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.076780" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1443" name="DispellSelfShieldRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest.DispellSelfShieldRequest" methodname="DispellSelfShieldRequest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest" runstate="Runnable" seed="1174294991" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.028363" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1444" name="DoesNotDispellOtherShieldRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest.DoesNotDispellOtherShieldRequest" methodname="DoesNotDispellOtherShieldRequest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest" runstate="Runnable" seed="732393632" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.023008" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1445" name="DoesNotUpdateWithoutRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest.DoesNotUpdateWithoutRequest" methodname="DoesNotUpdateWithoutRequest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectDispellSystemTest" runstate="Runnable" seed="565987015" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.023903" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1446" name="EnergyShieldEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.132137" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1447" name="AddShieldTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest.AddShieldTest" methodname="AddShieldTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest" runstate="Runnable" seed="1902472910" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.032626" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.EnergyShieldEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1448" name="DoesNotUpdateShieldTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest.DoesNotUpdateShieldTest" methodname="DoesNotUpdateShieldTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest" runstate="Runnable" seed="1521618134" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.072703" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.EnergyShieldEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1449" name="DoesNotUpdateWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest.DoesNotUpdateWithoutTagTest" methodname="DoesNotUpdateWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.EnergyShieldEffectSystemTest" runstate="Runnable" seed="1978810047" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.025191" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.EnergyShieldEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1450" name="HealOfTimeEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.080586" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1451" name="AddHotEffectToTargetTest" fullname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest.AddHotEffectToTargetTest" methodname="AddHotEffectToTargetTest" classname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest" runstate="Runnable" seed="1420221475" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.031341" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.HealOfTimeEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1453" name="DoesNotTickTwiceTest" fullname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest.DoesNotTickTwiceTest" methodname="DoesNotTickTwiceTest" classname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest" runstate="Runnable" seed="2002563172" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.024038" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.HealOfTimeEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1452" name="RemoveTickTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest.RemoveTickTagTest" methodname="RemoveTickTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.HealOfTimeEffectSystemTest" runstate="Runnable" seed="1129226535" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.023666" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.HealOfTimeEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1454" name="InvulnerableEffectDispellSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:33Z" duration="0.131105" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1455" name="DispellSelfEffectRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest.DispellSelfEffectRequest" methodname="DispellSelfEffectRequest" classname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest" runstate="Runnable" seed="530133589" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.030284" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1456" name="DoesNotDispellOtherChargeRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest.DoesNotDispellOtherChargeRequest" methodname="DoesNotDispellOtherChargeRequest" classname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest" runstate="Runnable" seed="1272338779" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:32Z" duration="0.055060" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1457" name="DoesNotUpdateWithoutRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest.DoesNotUpdateWithoutRequest" methodname="DoesNotUpdateWithoutRequest" classname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectDispellSystemTest" runstate="Runnable" seed="543932602" result="Passed" start-time="2023-03-15 12:10:32Z" end-time="2023-03-15 12:10:33Z" duration="0.044082" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1458" name="InvulnerableEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.055611" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1459" name="AddBlockerTest" fullname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectSystemTest.AddBlockerTest" methodname="AddBlockerTest" classname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectSystemTest" runstate="Runnable" seed="1646590284" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.030008" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.InvulnerableEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1460" name="DoesNotAddWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectSystemTest.DoesNotAddWithoutTagTest" methodname="DoesNotAddWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.InvulnerableEffectSystemTest" runstate="Runnable" seed="1376530602" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.024226" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.InvulnerableEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1461" name="PlayerAggroSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.218313" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1462" name="AddMoveToTargetTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest.AddMoveToTargetTest" methodname="AddMoveToTargetTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" seed="170566680" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.027470" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1467" name="DoesNotAddWithActionCastStateTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest.DoesNotAddWithActionCastStateTest" methodname="DoesNotAddWithActionCastStateTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" seed="2048913759" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.023106" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1466" name="DoesNotAddWithActionPrepareStateTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest.DoesNotAddWithActionPrepareStateTest" methodname="DoesNotAddWithActionPrepareStateTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" seed="2005790820" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.028264" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1465" name="DoesNotAddWithActionRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest.DoesNotAddWithActionRequestTest" methodname="DoesNotAddWithActionRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" seed="813479388" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.068160" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1468" name="DoesNotAddWithAttackCooldownTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest.DoesNotAddWithAttackCooldownTest" methodname="DoesNotAddWithAttackCooldownTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" seed="1059007394" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.023361" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1464" name="DoesNotAddWithoutDataTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest.DoesNotAddWithoutDataTest" methodname="DoesNotAddWithoutDataTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" seed="1642516822" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.021959" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1463" name="UpdateMoveToTargetTest" fullname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest.UpdateMoveToTargetTest" methodname="UpdateMoveToTargetTest" classname="DMP.Battle.Core.Test.Effects.Effects.PlayerAggroSystemTest" runstate="Runnable" seed="1041301795" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.023724" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1469" name="RootEffectDispellSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.105085" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1470" name="DispellSelfEffectRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest.DispellSelfEffectRequest" methodname="DispellSelfEffectRequest" classname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest" runstate="Runnable" seed="971459878" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.029774" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1471" name="DoesNotDispellOtherChargeRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest.DoesNotDispellOtherChargeRequest" methodname="DoesNotDispellOtherChargeRequest" classname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest" runstate="Runnable" seed="563357640" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.024153" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1472" name="DoesNotUpdateWithoutRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest.DoesNotUpdateWithoutRequest" methodname="DoesNotUpdateWithoutRequest" classname="DMP.Battle.Core.Test.Effects.Effects.RootEffectDispellSystemTest" runstate="Runnable" seed="157723439" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.049492" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1473" name="RootEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.RootEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.RootEffectSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.080163" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1474" name="AddMoveBlockerTest" fullname="DMP.Battle.Core.Test.Effects.Effects.RootEffectSystemTest.AddMoveBlockerTest" methodname="AddMoveBlockerTest" classname="DMP.Battle.Core.Test.Effects.Effects.RootEffectSystemTest" runstate="Runnable" seed="5631201" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.053525" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.RootEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1475" name="DoesNotAddWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.RootEffectSystemTest.DoesNotAddWithoutTagTest" methodname="DoesNotAddWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.RootEffectSystemTest" runstate="Runnable" seed="1205086935" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.024868" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.RootEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1476" name="StunEffectDispellSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.075829" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1477" name="DispellSelfEffectRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest.DispellSelfEffectRequest" methodname="DispellSelfEffectRequest" classname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest" runstate="Runnable" seed="954626002" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.028794" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1478" name="DoesNotDispellOtherChargeRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest.DoesNotDispellOtherChargeRequest" methodname="DoesNotDispellOtherChargeRequest" classname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest" runstate="Runnable" seed="1819285682" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.023033" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1479" name="DoesNotUpdateWithoutRequest" fullname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest.DoesNotUpdateWithoutRequest" methodname="DoesNotUpdateWithoutRequest" classname="DMP.Battle.Core.Test.Effects.Effects.StunEffectDispellSystemTest" runstate="Runnable" seed="241568549" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.022481" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1480" name="StunEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.StunEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.StunEffectSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.105224" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1481" name="AddBlockersTest" fullname="DMP.Battle.Core.Test.Effects.Effects.StunEffectSystemTest.AddBlockersTest" methodname="AddBlockersTest" classname="DMP.Battle.Core.Test.Effects.Effects.StunEffectSystemTest" runstate="Runnable" seed="1900137669" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.034560" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.StunEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1482" name="DoesNotAddWithoutTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.StunEffectSystemTest.DoesNotAddWithoutTagTest" methodname="DoesNotAddWithoutTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.StunEffectSystemTest" runstate="Runnable" seed="1109491375" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.069248" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.StunEffectSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1483" name="ZoneEffectTickSystemTest" fullname="DMP.Battle.Core.Test.Effects.Effects.ZoneEffectTickSystemTest" classname="DMP.Battle.Core.Test.Effects.Effects.ZoneEffectTickSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.056696" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1484" name="AddEffectRequestTest" fullname="DMP.Battle.Core.Test.Effects.Effects.ZoneEffectTickSystemTest.AddEffectRequestTest" methodname="AddEffectRequestTest" classname="DMP.Battle.Core.Test.Effects.Effects.ZoneEffectTickSystemTest" runstate="Runnable" seed="1762244614" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.030375" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.ZoneEffectTickSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                    <test-case id="1485" name="DoesNotUpdateWithoutHasNextEffectTagTest" fullname="DMP.Battle.Core.Test.Effects.Effects.ZoneEffectTickSystemTest.DoesNotUpdateWithoutHasNextEffectTagTest" methodname="DoesNotUpdateWithoutHasNextEffectTagTest" classname="DMP.Battle.Core.Test.Effects.Effects.ZoneEffectTickSystemTest" runstate="Runnable" seed="1208594396" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.024860" asserts="0">
                      <properties />
                      <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Effects.Effects.Systems.ZoneEffectTickSystem targeting DMP.Battle.Core.Effects.Effects.Systems.Base.EffectTickSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Effects.EffectGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                    </test-case>
                  </test-suite>
                </test-suite>
                <test-suite type="TestFixture" id="1317" name="HungerAuraSystemTest" fullname="DMP.Battle.Core.Test.Effects.HungerAuraSystemTest" classname="DMP.Battle.Core.Test.Effects.HungerAuraSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.056608" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1318" name="AddAuraTest" fullname="DMP.Battle.Core.Test.Effects.HungerAuraSystemTest.AddAuraTest" methodname="AddAuraTest" classname="DMP.Battle.Core.Test.Effects.HungerAuraSystemTest" runstate="Runnable" seed="1491603399" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.032188" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1319" name="RemoveAuraTest" fullname="DMP.Battle.Core.Test.Effects.HungerAuraSystemTest.RemoveAuraTest" methodname="RemoveAuraTest" classname="DMP.Battle.Core.Test.Effects.HungerAuraSystemTest" runstate="Runnable" seed="1814335284" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.023103" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1320" name="ImmunityMaxHealthEffectSystemTest" fullname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest" classname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.132345" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1321" name="AddModificatorIntoBufferTest" fullname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest.AddModificatorIntoBufferTest" methodname="AddModificatorIntoBufferTest" classname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest" runstate="Runnable" seed="267093431" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.032555" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1323" name="RemoveModificatorFromBufferTest" fullname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest.RemoveModificatorFromBufferTest" methodname="RemoveModificatorFromBufferTest" classname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest" runstate="Runnable" seed="463059782" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.048389" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1322" name="ReplaceModificatorIntoBufferTest" fullname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest.ReplaceModificatorIntoBufferTest" methodname="ReplaceModificatorIntoBufferTest" classname="DMP.Battle.Core.Test.Effects.ImmunityMaxHealthEffectSystemTest" runstate="Runnable" seed="96705973" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.049823" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1324" name="InitLocationSurvivalAurasSystemTest" fullname="DMP.Battle.Core.Test.Effects.InitLocationSurvivalAurasSystemTest" classname="DMP.Battle.Core.Test.Effects.InitLocationSurvivalAurasSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.058575" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1325" name="AddComponentsTest" fullname="DMP.Battle.Core.Test.Effects.InitLocationSurvivalAurasSystemTest.AddComponentsTest" methodname="AddComponentsTest" classname="DMP.Battle.Core.Test.Effects.InitLocationSurvivalAurasSystemTest" runstate="Runnable" seed="360148531" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.032842" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1326" name="SkipComponentsWhenTickEquals0Test" fullname="DMP.Battle.Core.Test.Effects.InitLocationSurvivalAurasSystemTest.SkipComponentsWhenTickEquals0Test" methodname="SkipComponentsWhenTickEquals0Test" classname="DMP.Battle.Core.Test.Effects.InitLocationSurvivalAurasSystemTest" runstate="Runnable" seed="2035228669" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.024292" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1327" name="MaxHealthResizeDamageSystemTest" fullname="DMP.Battle.Core.Test.Effects.MaxHealthResizeDamageSystemTest" classname="DMP.Battle.Core.Test.Effects.MaxHealthResizeDamageSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:34Z" duration="0.052768" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1328" name="CalculateParameterTest" fullname="DMP.Battle.Core.Test.Effects.MaxHealthResizeDamageSystemTest.CalculateParameterTest" methodname="CalculateParameterTest" classname="DMP.Battle.Core.Test.Effects.MaxHealthResizeDamageSystemTest" runstate="Runnable" seed="1596132229" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:33Z" duration="0.028947" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1329" name="SkipCalculateTest" fullname="DMP.Battle.Core.Test.Effects.MaxHealthResizeDamageSystemTest.SkipCalculateTest" methodname="SkipCalculateTest" classname="DMP.Battle.Core.Test.Effects.MaxHealthResizeDamageSystemTest" runstate="Runnable" seed="309698801" result="Passed" start-time="2023-03-15 12:10:33Z" end-time="2023-03-15 12:10:34Z" duration="0.022485" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestSuite" id="1630" name="Requests" fullname="DMP.Battle.Core.Test.Effects.Requests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.187756" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-suite type="TestFixture" id="1333" name="EffectRemoveRequestSystemTest" fullname="DMP.Battle.Core.Test.Effects.Requests.EffectRemoveRequestSystemTest" classname="DMP.Battle.Core.Test.Effects.Requests.EffectRemoveRequestSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.105935" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1334" name="AddDestroyTagTest" fullname="DMP.Battle.Core.Test.Effects.Requests.EffectRemoveRequestSystemTest.AddDestroyTagTest" methodname="AddDestroyTagTest" classname="DMP.Battle.Core.Test.Effects.Requests.EffectRemoveRequestSystemTest" runstate="Runnable" seed="1563406452" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.030364" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1335" name="DoesNotAddWhenHasNotCompleteTagTest" fullname="DMP.Battle.Core.Test.Effects.Requests.EffectRemoveRequestSystemTest.DoesNotAddWhenHasNotCompleteTagTest" methodname="DoesNotAddWhenHasNotCompleteTagTest" classname="DMP.Battle.Core.Test.Effects.Requests.EffectRemoveRequestSystemTest" runstate="Runnable" seed="337024456" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.071234" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                  <test-suite type="TestFixture" id="1336" name="EffectRequestSystemTest" fullname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest" classname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.081162" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                    <properties />
                    <test-case id="1338" name="AddEffectEntitiesToAllTargetsTest" fullname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest.AddEffectEntitiesToAllTargetsTest" methodname="AddEffectEntitiesToAllTargetsTest" classname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest" runstate="Runnable" seed="10785221" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.031289" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1337" name="AddTickTagTest" fullname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest.AddTickTagTest" methodname="AddTickTagTest" classname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest" runstate="Runnable" seed="1039545832" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.024149" asserts="0">
                      <properties />
                    </test-case>
                    <test-case id="1339" name="RemoveTickTagWhenNoTargetTest" fullname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest.RemoveTickTagWhenNoTargetTest" methodname="RemoveTickTagWhenNoTargetTest" classname="DMP.Battle.Core.Test.Effects.Requests.EffectRequestSystemTest" runstate="Runnable" seed="1459346264" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.024172" asserts="0">
                      <properties />
                    </test-case>
                  </test-suite>
                </test-suite>
                <test-suite type="TestFixture" id="1330" name="ThirstAuraSystemTest" fullname="DMP.Battle.Core.Test.Effects.ThirstAuraSystemTest" classname="DMP.Battle.Core.Test.Effects.ThirstAuraSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.055613" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1331" name="AddAuraTest" fullname="DMP.Battle.Core.Test.Effects.ThirstAuraSystemTest.AddAuraTest" methodname="AddAuraTest" classname="DMP.Battle.Core.Test.Effects.ThirstAuraSystemTest" runstate="Runnable" seed="292085204" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.031637" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1332" name="RemoveAuraTest" fullname="DMP.Battle.Core.Test.Effects.ThirstAuraSystemTest.RemoveAuraTest" methodname="RemoveAuraTest" classname="DMP.Battle.Core.Test.Effects.ThirstAuraSystemTest" runstate="Runnable" seed="1434201877" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.022635" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1628" name="LifeCycle" fullname="DMP.Battle.Core.Test.LifeCycle" runstate="Runnable" testcasecount="14" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.557917" total="14" passed="14" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1288" name="DeathActionSystemTest" fullname="DMP.Battle.Core.Test.LifeCycle.DeathActionSystemTest" classname="DMP.Battle.Core.Test.LifeCycle.DeathActionSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.109151" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1290" name="AddDeadTagWhenHealthEqualZero" fullname="DMP.Battle.Core.Test.LifeCycle.DeathActionSystemTest.AddDeadTagWhenHealthEqualZero" methodname="AddDeadTagWhenHealthEqualZero" classname="DMP.Battle.Core.Test.LifeCycle.DeathActionSystemTest" runstate="Runnable" seed="776990164" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.035478" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.LifeCycle.Systems.DeadActionSystem targeting DMP.Battle.Core.LifeCycle.Systems.HealthUpdateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1289" name="DoesNotAddDeadTagWhenHealthMoreThanZero" fullname="DMP.Battle.Core.Test.LifeCycle.DeathActionSystemTest.DoesNotAddDeadTagWhenHealthMoreThanZero" methodname="DoesNotAddDeadTagWhenHealthMoreThanZero" classname="DMP.Battle.Core.Test.LifeCycle.DeathActionSystemTest" runstate="Runnable" seed="1070526111" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.069500" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.LifeCycle.Systems.DeadActionSystem targeting DMP.Battle.Core.LifeCycle.Systems.HealthUpdateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1291" name="HealthChangeBufferUpdateSystemTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.131118" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1294" name="DoesNotCreateTwiceTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest.DoesNotCreateTwiceTest" methodname="DoesNotCreateTwiceTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest" runstate="Runnable" seed="1884615691" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.025464" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1296" name="DoesNotIgnoreHealByBlockerTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest.DoesNotIgnoreHealByBlockerTest" methodname="DoesNotIgnoreHealByBlockerTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest" runstate="Runnable" seed="1753481382" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.029101" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1295" name="IgnoreDamageByBlockerTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest.IgnoreDamageByBlockerTest" methodname="IgnoreDamageByBlockerTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest" runstate="Runnable" seed="161717151" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.023221" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1293" name="SkipByTimeTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest.SkipByTimeTest" methodname="SkipByTimeTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest" runstate="Runnable" seed="1237192415" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.023356" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1292" name="UpdateTimerAndCreateDamageDataTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest.UpdateTimerAndCreateDamageDataTest" methodname="UpdateTimerAndCreateDamageDataTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthChangeBufferUpdateSystemTest" runstate="Runnable" seed="293850452" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.028032" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1297" name="HealthStageUpdateSystemTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthStageUpdateSystemTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthStageUpdateSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.148973" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1299" name="DoesNotUpdateHealthStageWithoutChangeHealthTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthStageUpdateSystemTest.DoesNotUpdateHealthStageWithoutChangeHealthTest" methodname="DoesNotUpdateHealthStageWithoutChangeHealthTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthStageUpdateSystemTest" runstate="Runnable" seed="1826177712" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.061943" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.LifeCycle.Systems.HealthStageUpdateSystem targeting DMP.Battle.Core.LifeCycle.Systems.HealthUpdateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1298" name="UpdateHealthStageByHealthTest" fullname="DMP.Battle.Core.Test.LifeCycle.HealthStageUpdateSystemTest.UpdateHealthStageByHealthTest" methodname="UpdateHealthStageByHealthTest" classname="DMP.Battle.Core.Test.LifeCycle.HealthStageUpdateSystemTest" runstate="Runnable" seed="663898584" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.085420" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.LifeCycle.Systems.HealthStageUpdateSystem targeting DMP.Battle.Core.LifeCycle.Systems.HealthUpdateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1300" name="PureHealthUpdateSystemTest" fullname="DMP.Battle.Core.Test.LifeCycle.PureHealthUpdateSystemTest" classname="DMP.Battle.Core.Test.LifeCycle.PureHealthUpdateSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.092708" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1302" name="DoesNotUpdateHealthWithoutPureDamageDataTest" fullname="DMP.Battle.Core.Test.LifeCycle.PureHealthUpdateSystemTest.DoesNotUpdateHealthWithoutPureDamageDataTest" methodname="DoesNotUpdateHealthWithoutPureDamageDataTest" classname="DMP.Battle.Core.Test.LifeCycle.PureHealthUpdateSystemTest" runstate="Runnable" seed="468473306" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.061797" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.LifeCycle.Systems.HealthUpdateSystem targeting DMP.Battle.Core.LifeCycle.Systems.HealthChangeBufferUpdateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1301" name="UpdateHealthByPureHealthDataTest" fullname="DMP.Battle.Core.Test.LifeCycle.PureHealthUpdateSystemTest.UpdateHealthByPureHealthDataTest" methodname="UpdateHealthByPureHealthDataTest" classname="DMP.Battle.Core.Test.LifeCycle.PureHealthUpdateSystemTest" runstate="Runnable" seed="1196728815" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.029556" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.LifeCycle.Systems.HealthUpdateSystem targeting DMP.Battle.Core.LifeCycle.Systems.HealthChangeBufferUpdateSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1303" name="SendHealthSystemTest" fullname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest" classname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.075027" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1306" name="DoesNotUpdateHealthIfTimeHasNotCome" fullname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest.DoesNotUpdateHealthIfTimeHasNotCome" methodname="DoesNotUpdateHealthIfTimeHasNotCome" classname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest" runstate="Runnable" seed="1380797195" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.023759" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1305" name="UpdateHealthIfNoControlTarget" fullname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest.UpdateHealthIfNoControlTarget" methodname="UpdateHealthIfNoControlTarget" classname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest" runstate="Runnable" seed="1700770852" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.026443" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1304" name="UpdatesHealthOfControlTarget" fullname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest.UpdatesHealthOfControlTarget" methodname="UpdatesHealthOfControlTarget" classname="DMP.Battle.Core.Test.LifeCycle.SendHealthSystemTest" runstate="Runnable" seed="102880184" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.023282" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1627" name="Move" fullname="DMP.Battle.Core.Test.Move" runstate="Runnable" testcasecount="19" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:35Z" duration="0.670494" total="19" passed="19" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1262" name="AutoRoutingRotationSystemTest" fullname="DMP.Battle.Core.Test.Move.AutoRoutingRotationSystemTest" classname="DMP.Battle.Core.Test.Move.AutoRoutingRotationSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.108075" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1264" name="DoesNotRotateWithDeadTagTest" fullname="DMP.Battle.Core.Test.Move.AutoRoutingRotationSystemTest.DoesNotRotateWithDeadTagTest" methodname="DoesNotRotateWithDeadTagTest" classname="DMP.Battle.Core.Test.Move.AutoRoutingRotationSystemTest" runstate="Runnable" seed="260161083" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.025478" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1263" name="RotateTowardsByAutoRoutingTest" fullname="DMP.Battle.Core.Test.Move.AutoRoutingRotationSystemTest.RotateTowardsByAutoRoutingTest" methodname="RotateTowardsByAutoRoutingTest" classname="DMP.Battle.Core.Test.Move.AutoRoutingRotationSystemTest" runstate="Runnable" seed="470151022" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.078302" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1265" name="MoveToTargetSystemTest" fullname="DMP.Battle.Core.Test.Move.MoveToTargetSystemTest" classname="DMP.Battle.Core.Test.Move.MoveToTargetSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.030962" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1266" name="MoveWhenHasComponentTest" fullname="DMP.Battle.Core.Test.Move.MoveToTargetSystemTest.MoveWhenHasComponentTest" methodname="MoveWhenHasComponentTest" classname="DMP.Battle.Core.Test.Move.MoveToTargetSystemTest" runstate="Runnable" seed="995858269" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.029745" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1267" name="ReceivePositionSystemTest" fullname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest" classname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:35Z" duration="0.077599" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1269" name="DoesNotSetPositionIfFieldDiffers" fullname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest.DoesNotSetPositionIfFieldDiffers" methodname="DoesNotSetPositionIfFieldDiffers" classname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest" runstate="Runnable" seed="256258019" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:34Z" duration="0.028063" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1270" name="DoesNotSetPositionIfIdDiffers" fullname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest.DoesNotSetPositionIfIdDiffers" methodname="DoesNotSetPositionIfIdDiffers" classname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest" runstate="Runnable" seed="1035564812" result="Passed" start-time="2023-03-15 12:10:34Z" end-time="2023-03-15 12:10:35Z" duration="0.024311" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1268" name="SetsPositionToReplica" fullname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest.SetsPositionToReplica" methodname="SetsPositionToReplica" classname="DMP.Battle.Core.Test.Move.ReceivePositionSystemTest" runstate="Runnable" seed="493639022" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.023679" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1271" name="ReceiveRotationSystemTest" fullname="DMP.Battle.Core.Test.Move.ReceiveRotationSystemTest" classname="DMP.Battle.Core.Test.Move.ReceiveRotationSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.034095" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1272" name="SetsRotationToReplica" fullname="DMP.Battle.Core.Test.Move.ReceiveRotationSystemTest.SetsRotationToReplica" methodname="SetsRotationToReplica" classname="DMP.Battle.Core.Test.Move.ReceiveRotationSystemTest" runstate="Runnable" seed="1065191972" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.032719" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1273" name="RotateSystemTest" fullname="DMP.Battle.Core.Test.Move.RotateSystemTest" classname="DMP.Battle.Core.Test.Move.RotateSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.156427" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1277" name="DoesNotRotateWithAutoRouting" fullname="DMP.Battle.Core.Test.Move.RotateSystemTest.DoesNotRotateWithAutoRouting" methodname="DoesNotRotateWithAutoRouting" classname="DMP.Battle.Core.Test.Move.RotateSystemTest" runstate="Runnable" seed="408249630" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.031121" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1276" name="DoesNotRotateWithDeadTag" fullname="DMP.Battle.Core.Test.Move.RotateSystemTest.DoesNotRotateWithDeadTag" methodname="DoesNotRotateWithDeadTag" classname="DMP.Battle.Core.Test.Move.RotateSystemTest" runstate="Runnable" seed="58614370" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.069613" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1275" name="DoesNotRotateWithoutMove" fullname="DMP.Battle.Core.Test.Move.RotateSystemTest.DoesNotRotateWithoutMove" methodname="DoesNotRotateWithoutMove" classname="DMP.Battle.Core.Test.Move.RotateSystemTest" runstate="Runnable" seed="1279362501" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.025113" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1274" name="RotateTowardsMoveDirectionImmediately" fullname="DMP.Battle.Core.Test.Move.RotateSystemTest.RotateTowardsMoveDirectionImmediately" methodname="RotateTowardsMoveDirectionImmediately" classname="DMP.Battle.Core.Test.Move.RotateSystemTest" runstate="Runnable" seed="58353526" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.028945" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1278" name="SendPositionSystemTest" fullname="DMP.Battle.Core.Test.Move.SendPositionSystemTest" classname="DMP.Battle.Core.Test.Move.SendPositionSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.110400" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1282" name="DoesNotUpdatePositionIfNoChanges" fullname="DMP.Battle.Core.Test.Move.SendPositionSystemTest.DoesNotUpdatePositionIfNoChanges" methodname="DoesNotUpdatePositionIfNoChanges" classname="DMP.Battle.Core.Test.Move.SendPositionSystemTest" runstate="Runnable" seed="967977400" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.027922" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1280" name="DoesNotUpdatePositionIfNoControlTarget" fullname="DMP.Battle.Core.Test.Move.SendPositionSystemTest.DoesNotUpdatePositionIfNoControlTarget" methodname="DoesNotUpdatePositionIfNoControlTarget" classname="DMP.Battle.Core.Test.Move.SendPositionSystemTest" runstate="Runnable" seed="1421563184" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.023497" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1281" name="DoesNotUpdatePositionIfTimeHasNotCome" fullname="DMP.Battle.Core.Test.Move.SendPositionSystemTest.DoesNotUpdatePositionIfTimeHasNotCome" methodname="DoesNotUpdatePositionIfTimeHasNotCome" classname="DMP.Battle.Core.Test.Move.SendPositionSystemTest" runstate="Runnable" seed="1412145419" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.022766" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1279" name="UpdatesPositionOfControlTarget" fullname="DMP.Battle.Core.Test.Move.SendPositionSystemTest.UpdatesPositionOfControlTarget" methodname="UpdatesPositionOfControlTarget" classname="DMP.Battle.Core.Test.Move.SendPositionSystemTest" runstate="Runnable" seed="1424485859" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.034252" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1283" name="SendRotationSystemTest" fullname="DMP.Battle.Core.Test.Move.SendRotationSystemTest" classname="DMP.Battle.Core.Test.Move.SendRotationSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.151580" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1287" name="DoesNotUpdateRotationIfNoChanges" fullname="DMP.Battle.Core.Test.Move.SendRotationSystemTest.DoesNotUpdateRotationIfNoChanges" methodname="DoesNotUpdateRotationIfNoChanges" classname="DMP.Battle.Core.Test.Move.SendRotationSystemTest" runstate="Runnable" seed="1020375313" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.073854" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1285" name="DoesNotUpdateRotationIfNoControlTarget" fullname="DMP.Battle.Core.Test.Move.SendRotationSystemTest.DoesNotUpdateRotationIfNoControlTarget" methodname="DoesNotUpdateRotationIfNoControlTarget" classname="DMP.Battle.Core.Test.Move.SendRotationSystemTest" runstate="Runnable" seed="938558577" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.024654" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1286" name="DoesNotUpdateRotationIfTimeHasNotCome" fullname="DMP.Battle.Core.Test.Move.SendRotationSystemTest.DoesNotUpdateRotationIfTimeHasNotCome" methodname="DoesNotUpdateRotationIfTimeHasNotCome" classname="DMP.Battle.Core.Test.Move.SendRotationSystemTest" runstate="Runnable" seed="1615401366" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.023956" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1284" name="UpdatesRotationOfControlTarget" fullname="DMP.Battle.Core.Test.Move.SendRotationSystemTest.UpdatesRotationOfControlTarget" methodname="UpdatesRotationOfControlTarget" classname="DMP.Battle.Core.Test.Move.SendRotationSystemTest" runstate="Runnable" seed="178913897" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.026416" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1625" name="Parameters" fullname="DMP.Battle.Core.Test.Parameters" runstate="Runnable" testcasecount="9" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.306189" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1237" name="BaseCalculateParametersSystemTest" fullname="DMP.Battle.Core.Test.Parameters.BaseCalculateParametersSystemTest" classname="DMP.Battle.Core.Test.Parameters.BaseCalculateParametersSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.061117" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1238" name="CalculateParameterTest" fullname="DMP.Battle.Core.Test.Parameters.BaseCalculateParametersSystemTest.CalculateParameterTest" methodname="CalculateParameterTest" classname="DMP.Battle.Core.Test.Parameters.BaseCalculateParametersSystemTest" runstate="Runnable" seed="1913330252" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.033429" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1239" name="ResetParameterTest" fullname="DMP.Battle.Core.Test.Parameters.BaseCalculateParametersSystemTest.ResetParameterTest" methodname="ResetParameterTest" classname="DMP.Battle.Core.Test.Parameters.BaseCalculateParametersSystemTest" runstate="Runnable" seed="584692533" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.024222" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1240" name="InitPlayerParametersSystemTest" fullname="DMP.Battle.Core.Test.Parameters.InitPlayerParametersSystemTest" classname="DMP.Battle.Core.Test.Parameters.InitPlayerParametersSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.112932" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1242" name="DoesNotSetTwice" fullname="DMP.Battle.Core.Test.Parameters.InitPlayerParametersSystemTest.DoesNotSetTwice" methodname="DoesNotSetTwice" classname="DMP.Battle.Core.Test.Parameters.InitPlayerParametersSystemTest" runstate="Runnable" seed="689995233" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.056637" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1241" name="SetsParameters" fullname="DMP.Battle.Core.Test.Parameters.InitPlayerParametersSystemTest.SetsParameters" methodname="SetsParameters" classname="DMP.Battle.Core.Test.Parameters.InitPlayerParametersSystemTest" runstate="Runnable" seed="1908893606" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.054810" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1243" name="InitPlayerStarvationParametersSystemTest" fullname="DMP.Battle.Core.Test.Parameters.InitPlayerStarvationParametersSystemTest" classname="DMP.Battle.Core.Test.Parameters.InitPlayerStarvationParametersSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.053221" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1245" name="DoesNotSetTwice" fullname="DMP.Battle.Core.Test.Parameters.InitPlayerStarvationParametersSystemTest.DoesNotSetTwice" methodname="DoesNotSetTwice" classname="DMP.Battle.Core.Test.Parameters.InitPlayerStarvationParametersSystemTest" runstate="Runnable" seed="994989040" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.028365" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1244" name="SetsParameters" fullname="DMP.Battle.Core.Test.Parameters.InitPlayerStarvationParametersSystemTest.SetsParameters" methodname="SetsParameters" classname="DMP.Battle.Core.Test.Parameters.InitPlayerStarvationParametersSystemTest" runstate="Runnable" seed="1316199918" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.023400" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1246" name="InitUnitParametersSystemTest" fullname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest" classname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.078006" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1249" name="DoesNotSetTwice" fullname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest.DoesNotSetTwice" methodname="DoesNotSetTwice" classname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest" runstate="Runnable" seed="2093944279" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.031081" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1247" name="SetsParameters" fullname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest.SetsParameters" methodname="SetsParameters" classname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest" runstate="Runnable" seed="1586230839" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.022598" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1248" name="SetsParametersForSecondEntity" fullname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest.SetsParametersForSecondEntity" methodname="SetsParametersForSecondEntity" classname="DMP.Battle.Core.Test.Parameters.InitUnitParametersSystemTest" runstate="Runnable" seed="1492209794" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.022733" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1626" name="PVP" fullname="DMP.Battle.Core.Test.PVP" runstate="Runnable" testcasecount="8" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:36Z" duration="0.313069" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1250" name="ReceiveTeamIdSystemTest" fullname="DMP.Battle.Core.Test.PVP.ReceiveTeamIdSystemTest" classname="DMP.Battle.Core.Test.PVP.ReceiveTeamIdSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.052169" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1251" name="SetsWeaponIdOnFieldChange" fullname="DMP.Battle.Core.Test.PVP.ReceiveTeamIdSystemTest.SetsWeaponIdOnFieldChange" methodname="SetsWeaponIdOnFieldChange" classname="DMP.Battle.Core.Test.PVP.ReceiveTeamIdSystemTest" runstate="Runnable" seed="2113286871" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.047952" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1252" name="SendTeamIdSystemTest" fullname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest" classname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.125926" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1256" name="DoesNotSetIfIsNotControlTarget" fullname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest.DoesNotSetIfIsNotControlTarget" methodname="DoesNotSetIfIsNotControlTarget" classname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest" runstate="Runnable" seed="170641558" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.053862" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1255" name="DoesNotUpdateTeamIdTwice" fullname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest.DoesNotUpdateTeamIdTwice" methodname="DoesNotUpdateTeamIdTwice" classname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest" runstate="Runnable" seed="142542683" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.024368" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1253" name="SetsTeamIdFieldToReplica" fullname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest.SetsTeamIdFieldToReplica" methodname="SetsTeamIdFieldToReplica" classname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest" runstate="Runnable" seed="170034023" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.022933" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1254" name="UpdatesTeamIdField" fullname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest.UpdatesTeamIdField" methodname="UpdatesTeamIdField" classname="DMP.Battle.Core.Test.PVP.SendTeamIdSystemTest" runstate="Runnable" seed="844296993" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.022618" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1257" name="UpdatePvPModeSystemTest" fullname="DMP.Battle.Core.Test.PVP.UpdatePvPModeSystemTest" classname="DMP.Battle.Core.Test.PVP.UpdatePvPModeSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.030698" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1258" name="SetPVPModeTest" fullname="DMP.Battle.Core.Test.PVP.UpdatePvPModeSystemTest.SetPVPModeTest" methodname="SetPVPModeTest" classname="DMP.Battle.Core.Test.PVP.UpdatePvPModeSystemTest" runstate="Runnable" seed="250125580" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:35Z" duration="0.029550" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1259" name="UpdateTeamIdSystemTest" fullname="DMP.Battle.Core.Test.PVP.UpdateTeamIdSystemTest" classname="DMP.Battle.Core.Test.PVP.UpdateTeamIdSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:35Z" end-time="2023-03-15 12:10:36Z" duration="0.103309" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1261" name="DoesNotUpdateWithoutPvPModeChangedTest" fullname="DMP.Battle.Core.Test.PVP.UpdateTeamIdSystemTest.DoesNotUpdateWithoutPvPModeChangedTest" methodname="DoesNotUpdateWithoutPvPModeChangedTest" classname="DMP.Battle.Core.Test.PVP.UpdateTeamIdSystemTest" runstate="Runnable" seed="1621516944" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.027491" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1260" name="SetTeamIdTest" fullname="DMP.Battle.Core.Test.PVP.UpdateTeamIdSystemTest.SetTeamIdTest" methodname="SetTeamIdTest" classname="DMP.Battle.Core.Test.PVP.UpdateTeamIdSystemTest" runstate="Runnable" seed="1863681631" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.074558" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1624" name="Skill" fullname="DMP.Battle.Core.Test.Skill" runstate="Runnable" testcasecount="15" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.566341" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1213" name="ActiveSkillActivitySystemTest" fullname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest" classname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.085504" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1216" name="SetIsBlockedIfHasNoTargetWhenTargetRequired" fullname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest.SetIsBlockedIfHasNoTargetWhenTargetRequired" methodname="SetIsBlockedIfHasNoTargetWhenTargetRequired" classname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest" runstate="Runnable" seed="807353730" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.032944" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.ActiveSkillBlockSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1215" name="SetIsNotBlockedIfHasNoTargetWhenTargetNotRequired" fullname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest.SetIsNotBlockedIfHasNoTargetWhenTargetNotRequired" methodname="SetIsNotBlockedIfHasNoTargetWhenTargetNotRequired" classname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest" runstate="Runnable" seed="838389415" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.024565" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.ActiveSkillBlockSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1214" name="SetIsNotBlockedIfHasTarget" fullname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest.SetIsNotBlockedIfHasTarget" methodname="SetIsNotBlockedIfHasTarget" classname="DMP.Battle.Core.Test.Skill.ActiveSkillActivitySystemTest" runstate="Runnable" seed="1926475620" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.024585" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.ActiveSkillBlockSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1217" name="CreateSkillCastRequestSystemTest" fullname="DMP.Battle.Core.Test.Skill.CreateSkillCastRequestSystemTest" classname="DMP.Battle.Core.Test.Skill.CreateSkillCastRequestSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.031667" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1218" name="CreateCastRequestOnActionPrepareState" fullname="DMP.Battle.Core.Test.Skill.CreateSkillCastRequestSystemTest.CreateCastRequestOnActionPrepareState" methodname="CreateCastRequestOnActionPrepareState" classname="DMP.Battle.Core.Test.Skill.CreateSkillCastRequestSystemTest" runstate="Runnable" seed="1802525606" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.030482" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.CreateSkillCastRequestSystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1219" name="RemoveSkillActionParametersSystemTest" fullname="DMP.Battle.Core.Test.Skill.RemoveSkillActionParametersSystemTest" classname="DMP.Battle.Core.Test.Skill.RemoveSkillActionParametersSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.029428" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1220" name="RemoveSkillActionParameters" fullname="DMP.Battle.Core.Test.Skill.RemoveSkillActionParametersSystemTest.RemoveSkillActionParameters" methodname="RemoveSkillActionParameters" classname="DMP.Battle.Core.Test.Skill.RemoveSkillActionParametersSystemTest" runstate="Runnable" seed="581735659" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.028380" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.RemoveSkillActionParametersSystem targeting DMP.Battle.Core.Skill.Systems.RemoveSkillCastRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1221" name="RemoveSkillCastRequestSystemTest" fullname="DMP.Battle.Core.Test.Skill.RemoveSkillCastRequestSystemTest" classname="DMP.Battle.Core.Test.Skill.RemoveSkillCastRequestSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.034026" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1222" name="RemoveSkillCastRequest" fullname="DMP.Battle.Core.Test.Skill.RemoveSkillCastRequestSystemTest.RemoveSkillCastRequest" methodname="RemoveSkillCastRequest" classname="DMP.Battle.Core.Test.Skill.RemoveSkillCastRequestSystemTest" runstate="Runnable" seed="818931289" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.032874" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.RemoveSkillCastRequestSystem targeting DMP.Battle.Core.Action.Systems.RemoveActionDataSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1223" name="SendSkillActionParametersSystemTest" fullname="DMP.Battle.Core.Test.Skill.SendSkillActionParametersSystemTest" classname="DMP.Battle.Core.Test.Skill.SendSkillActionParametersSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.101182" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1225" name="DoesNotAddActionRequestIfNoControlTarget" fullname="DMP.Battle.Core.Test.Skill.SendSkillActionParametersSystemTest.DoesNotAddActionRequestIfNoControlTarget" methodname="DoesNotAddActionRequestIfNoControlTarget" classname="DMP.Battle.Core.Test.Skill.SendSkillActionParametersSystemTest" runstate="Runnable" seed="442599532" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.075664" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1224" name="SetActionRequestForControlTarget" fullname="DMP.Battle.Core.Test.Skill.SendSkillActionParametersSystemTest.SetActionRequestForControlTarget" methodname="SetActionRequestForControlTarget" classname="DMP.Battle.Core.Test.Skill.SendSkillActionParametersSystemTest" runstate="Runnable" seed="211690016" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.024122" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1226" name="SetSpawnSkillSystemTest" fullname="DMP.Battle.Core.Test.Skill.SetSpawnSkillSystemTest" classname="DMP.Battle.Core.Test.Skill.SetSpawnSkillSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.031981" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1227" name="CopiesActiveSkillBufferFromRequestToUnitNextFrame" fullname="DMP.Battle.Core.Test.Skill.SetSpawnSkillSystemTest.CopiesActiveSkillBufferFromRequestToUnitNextFrame" methodname="CopiesActiveSkillBufferFromRequestToUnitNextFrame" classname="DMP.Battle.Core.Test.Skill.SetSpawnSkillSystemTest" runstate="Runnable" seed="201293020" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.030807" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1228" name="SkillCastActionSystemTest" fullname="DMP.Battle.Core.Test.Skill.SkillCastActionSystemTest" classname="DMP.Battle.Core.Test.Skill.SkillCastActionSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.059522" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1230" name="AddEffectRequest" fullname="DMP.Battle.Core.Test.Skill.SkillCastActionSystemTest.AddEffectRequest" methodname="AddEffectRequest" classname="DMP.Battle.Core.Test.Skill.SkillCastActionSystemTest" runstate="Runnable" seed="501694796" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.032584" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.SkillCastActionSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1229" name="AddSkillCooldownRequest" fullname="DMP.Battle.Core.Test.Skill.SkillCastActionSystemTest.AddSkillCooldownRequest" methodname="AddSkillCooldownRequest" classname="DMP.Battle.Core.Test.Skill.SkillCastActionSystemTest" runstate="Runnable" seed="1037914273" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.025784" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.SkillCastActionSystem targeting DMP.Battle.Core.Action.Systems.ActionCastTimerSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1231" name="SkillCooldownAddSystemTest" fullname="DMP.Battle.Core.Test.Skill.SkillCooldownAddSystemTest" classname="DMP.Battle.Core.Test.Skill.SkillCooldownAddSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.064742" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1233" name="AddCooldownComponentAndRemoveRequestComponentsByRequest" fullname="DMP.Battle.Core.Test.Skill.SkillCooldownAddSystemTest.AddCooldownComponentAndRemoveRequestComponentsByRequest" methodname="AddCooldownComponentAndRemoveRequestComponentsByRequest" classname="DMP.Battle.Core.Test.Skill.SkillCooldownAddSystemTest" runstate="Runnable" seed="1804985346" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.031943" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.SkillCooldownAddSystem targeting DMP.Battle.Core.Skill.Systems.SkillCastActionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1232" name="DoesNotAddCooldownWithoutRequest" fullname="DMP.Battle.Core.Test.Skill.SkillCooldownAddSystemTest.DoesNotAddCooldownWithoutRequest" methodname="DoesNotAddCooldownWithoutRequest" classname="DMP.Battle.Core.Test.Skill.SkillCooldownAddSystemTest" runstate="Runnable" seed="546945317" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.031377" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Skill.Systems.SkillCooldownAddSystem targeting DMP.Battle.Core.Skill.Systems.SkillCastActionSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1234" name="SkillCooldownSystemTest" fullname="DMP.Battle.Core.Test.Skill.SkillCooldownSystemTest" classname="DMP.Battle.Core.Test.Skill.SkillCooldownSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.126780" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1235" name="RemoveSkillCooldownWhenExpired" fullname="DMP.Battle.Core.Test.Skill.SkillCooldownSystemTest.RemoveSkillCooldownWhenExpired" methodname="RemoveSkillCooldownWhenExpired" classname="DMP.Battle.Core.Test.Skill.SkillCooldownSystemTest" runstate="Runnable" seed="1014934672" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.080348" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1236" name="RemoveSkillTwoCooldown" fullname="DMP.Battle.Core.Test.Skill.SkillCooldownSystemTest.RemoveSkillTwoCooldown" methodname="RemoveSkillTwoCooldown" classname="DMP.Battle.Core.Test.Skill.SkillCooldownSystemTest" runstate="Runnable" seed="1542834162" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.045023" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1623" name="Skills" fullname="DMP.Battle.Core.Test.Skills" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.056885" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1210" name="ReceiveSkillActionParametersSystemTest" fullname="DMP.Battle.Core.Test.Skills.ReceiveSkillActionParametersSystemTest" classname="DMP.Battle.Core.Test.Skills.ReceiveSkillActionParametersSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.056197" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1212" name="DoesNotSetsActionRequestToOther" fullname="DMP.Battle.Core.Test.Skills.ReceiveSkillActionParametersSystemTest.DoesNotSetsActionRequestToOther" methodname="DoesNotSetsActionRequestToOther" classname="DMP.Battle.Core.Test.Skills.ReceiveSkillActionParametersSystemTest" runstate="Runnable" seed="389729772" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.029372" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1211" name="SetsActionRequestToReplica" fullname="DMP.Battle.Core.Test.Skills.ReceiveSkillActionParametersSystemTest.SetsActionRequestToReplica" methodname="SetsActionRequestToReplica" classname="DMP.Battle.Core.Test.Skills.ReceiveSkillActionParametersSystemTest" runstate="Runnable" seed="1906838471" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.023419" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1622" name="Spawn" fullname="DMP.Battle.Core.Test.Spawn" runstate="Runnable" testcasecount="20" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:37Z" duration="0.713505" total="20" passed="20" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1182" name="FinishSpawnSystemTest" fullname="DMP.Battle.Core.Test.Spawn.FinishSpawnSystemTest" classname="DMP.Battle.Core.Test.Spawn.FinishSpawnSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.032589" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1183" name="DestroysSpawnRequestEntityOnNextFrame" fullname="DMP.Battle.Core.Test.Spawn.FinishSpawnSystemTest.DestroysSpawnRequestEntityOnNextFrame" methodname="DestroysSpawnRequestEntityOnNextFrame" classname="DMP.Battle.Core.Test.Spawn.FinishSpawnSystemTest" runstate="Runnable" seed="245384421" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.028465" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1184" name="InstantiateUnitSystemTest" fullname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest" classname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.137713" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1187" name="DoesNotSpawnPlayerTwice" fullname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest.DoesNotSpawnPlayerTwice" methodname="DoesNotSpawnPlayerTwice" classname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest" runstate="Runnable" seed="1458327755" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.034342" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1185" name="SpawnsUnitBasePrefabAndAddsPlayerComponent" fullname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest.SpawnsUnitBasePrefabAndAddsPlayerComponent" methodname="SpawnsUnitBasePrefabAndAddsPlayerComponent" classname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest" runstate="Runnable" seed="2053113923" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.048243" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1186" name="SpawnsUnitBasePrefabAndAddsUnitTypeComponent" fullname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest.SpawnsUnitBasePrefabAndAddsUnitTypeComponent" methodname="SpawnsUnitBasePrefabAndAddsUnitTypeComponent" classname="DMP.Battle.Core.Test.Spawn.InstantiateUnitSystemTest" runstate="Runnable" seed="1127137715" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.053714" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1188" name="ReplicateSelfUnitSpawnSystemTest" fullname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" classname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:37Z" duration="0.170976" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1189" name="CreatesObjectAfterSpawn" fullname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest.CreatesObjectAfterSpawn" methodname="CreatesObjectAfterSpawn" classname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" runstate="Runnable" seed="1670367007" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.034941" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1190" name="CreatesReplicaComponentForSpawnResultNextFrame" fullname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest.CreatesReplicaComponentForSpawnResultNextFrame" methodname="CreatesReplicaComponentForSpawnResultNextFrame" classname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" runstate="Runnable" seed="1320061529" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.023998" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1193" name="DoesNotCreateObjectIfAlreadyReplicated" fullname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest.DoesNotCreateObjectIfAlreadyReplicated" methodname="DoesNotCreateObjectIfAlreadyReplicated" classname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" runstate="Runnable" seed="1314029619" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:36Z" duration="0.023709" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1191" name="DoesNotCreateObjectIfIdDiffers" fullname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest.DoesNotCreateObjectIfIdDiffers" methodname="DoesNotCreateObjectIfIdDiffers" classname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" runstate="Runnable" seed="424181013" result="Passed" start-time="2023-03-15 12:10:36Z" end-time="2023-03-15 12:10:37Z" duration="0.022954" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1194" name="DoesNotCreateObjectIfNotSpawned" fullname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest.DoesNotCreateObjectIfNotSpawned" methodname="DoesNotCreateObjectIfNotSpawned" classname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" runstate="Runnable" seed="732415324" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.024048" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1192" name="DoesNotCreateObjectIfPositionIsNotSet" fullname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest.DoesNotCreateObjectIfPositionIsNotSet" methodname="DoesNotCreateObjectIfPositionIsNotSet" classname="DMP.Battle.Core.Test.Spawn.ReplicateSelfUnitSpawnSystemTest" runstate="Runnable" seed="1393770898" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.038995" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1195" name="RequestSpawnByObjectSystemTest" fullname="DMP.Battle.Core.Test.Spawn.RequestSpawnByObjectSystemTest" classname="DMP.Battle.Core.Test.Spawn.RequestSpawnByObjectSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.074764" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1196" name="CreatesSpawnRequestNextFrame" fullname="DMP.Battle.Core.Test.Spawn.RequestSpawnByObjectSystemTest.CreatesSpawnRequestNextFrame" methodname="CreatesSpawnRequestNextFrame" classname="DMP.Battle.Core.Test.Spawn.RequestSpawnByObjectSystemTest" runstate="Runnable" seed="12901283" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.073244" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1197" name="SetBattleMemberIdSystemTest" fullname="DMP.Battle.Core.Test.Spawn.SetBattleMemberIdSystemTest" classname="DMP.Battle.Core.Test.Spawn.SetBattleMemberIdSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.027000" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1198" name="SetsBattleMemberId" fullname="DMP.Battle.Core.Test.Spawn.SetBattleMemberIdSystemTest.SetsBattleMemberId" methodname="SetsBattleMemberId" classname="DMP.Battle.Core.Test.Spawn.SetBattleMemberIdSystemTest" runstate="Runnable" seed="2059525350" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.025843" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1199" name="SetSpawnPositionSystemTest" fullname="DMP.Battle.Core.Test.Spawn.SetSpawnPositionSystemTest" classname="DMP.Battle.Core.Test.Spawn.SetSpawnPositionSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.051755" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1201" name="DoesNotUpdatePositionWithoutRequestTest" fullname="DMP.Battle.Core.Test.Spawn.SetSpawnPositionSystemTest.DoesNotUpdatePositionWithoutRequestTest" methodname="DoesNotUpdatePositionWithoutRequestTest" classname="DMP.Battle.Core.Test.Spawn.SetSpawnPositionSystemTest" runstate="Runnable" seed="1748187779" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.025007" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1200" name="SetPositionFromRequestTest" fullname="DMP.Battle.Core.Test.Spawn.SetSpawnPositionSystemTest.SetPositionFromRequestTest" methodname="SetPositionFromRequestTest" classname="DMP.Battle.Core.Test.Spawn.SetSpawnPositionSystemTest" runstate="Runnable" seed="1090678074" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.025474" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1202" name="SetSpawnReplicaSystemTest" fullname="DMP.Battle.Core.Test.Spawn.SetSpawnReplicaSystemTest" classname="DMP.Battle.Core.Test.Spawn.SetSpawnReplicaSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.027971" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1203" name="AddsComponentsToResultEntityNextFrame" fullname="DMP.Battle.Core.Test.Spawn.SetSpawnReplicaSystemTest.AddsComponentsToResultEntityNextFrame" methodname="AddsComponentsToResultEntityNextFrame" classname="DMP.Battle.Core.Test.Spawn.SetSpawnReplicaSystemTest" runstate="Runnable" seed="1417930878" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.026681" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Core.Spawn.Systems.SetSpawnReplicaSystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1204" name="SpawnUnitsBySpawnersSystemTest" fullname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest" classname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.189439" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1208" name="DespawnsAndRespawnsAllOnRequest" fullname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest.DespawnsAndRespawnsAllOnRequest" methodname="DespawnsAndRespawnsAllOnRequest" classname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest" runstate="Runnable" seed="1814753902" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.038122" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1209" name="DoesNotDespawnOtherPlayerUnits" fullname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest.DoesNotDespawnOtherPlayerUnits" methodname="DoesNotDespawnOtherPlayerUnits" classname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest" runstate="Runnable" seed="287174494" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.039478" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1206" name="DoesNotSpawnIfNotAllowed" fullname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest.DoesNotSpawnIfNotAllowed" methodname="DoesNotSpawnIfNotAllowed" classname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest" runstate="Runnable" seed="1969381624" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.059738" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1207" name="DoesNotSpawnMultipleTimes" fullname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest.DoesNotSpawnMultipleTimes" methodname="DoesNotSpawnMultipleTimes" classname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest" runstate="Runnable" seed="429812043" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.023439" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1205" name="SpawnsUnitOnStart" fullname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest.SpawnsUnitOnStart" methodname="SpawnsUnitOnStart" classname="DMP.Battle.Core.Test.Spawn.SpawnUnitsBySpawnersSystemTest" runstate="Runnable" seed="1779513597" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.026838" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1621" name="Weapon" fullname="DMP.Battle.Core.Test.Weapon" runstate="Runnable" testcasecount="8" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.266392" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1169" name="ReceiveWeaponIdSystemTest" fullname="DMP.Battle.Core.Test.Weapon.ReceiveWeaponIdSystemTest" classname="DMP.Battle.Core.Test.Weapon.ReceiveWeaponIdSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.029284" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1170" name="SetsWeaponIdOnFieldChange" fullname="DMP.Battle.Core.Test.Weapon.ReceiveWeaponIdSystemTest.SetsWeaponIdOnFieldChange" methodname="SetsWeaponIdOnFieldChange" classname="DMP.Battle.Core.Test.Weapon.ReceiveWeaponIdSystemTest" runstate="Runnable" seed="779983230" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.025110" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1171" name="SendWeaponSystemTest" fullname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest" classname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.148699" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1175" name="DoesNotSetIfIsNotControlTarget" fullname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest.DoesNotSetIfIsNotControlTarget" methodname="DoesNotSetIfIsNotControlTarget" classname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest" runstate="Runnable" seed="1656718328" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.024755" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1174" name="DoesNotUpdateWeaponTwice" fullname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest.DoesNotUpdateWeaponTwice" methodname="DoesNotUpdateWeaponTwice" classname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest" runstate="Runnable" seed="2039069422" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.023168" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1172" name="SetsWeaponFieldToReplica" fullname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest.SetsWeaponFieldToReplica" methodname="SetsWeaponFieldToReplica" classname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest" runstate="Runnable" seed="2017808630" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.029068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1173" name="UpdatesWeaponField" fullname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest.UpdatesWeaponField" methodname="UpdatesWeaponField" classname="DMP.Battle.Core.Test.Weapon.SendWeaponSystemTest" runstate="Runnable" seed="1085147519" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.070120" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1176" name="SetSpawnWeaponSystemTest" fullname="DMP.Battle.Core.Test.Weapon.SetSpawnWeaponSystemTest" classname="DMP.Battle.Core.Test.Weapon.SetSpawnWeaponSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.029357" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1177" name="CopiesWeaponFromRequestToUnitNextFrame" fullname="DMP.Battle.Core.Test.Weapon.SetSpawnWeaponSystemTest.CopiesWeaponFromRequestToUnitNextFrame" methodname="CopiesWeaponFromRequestToUnitNextFrame" classname="DMP.Battle.Core.Test.Weapon.SetSpawnWeaponSystemTest" runstate="Runnable" seed="552338753" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.028191" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1178" name="WeaponAttackTimeParametersUpdateSystemTest" fullname="DMP.Battle.Core.Test.Weapon.WeaponAttackTimeParametersUpdateSystemTest" classname="DMP.Battle.Core.Test.Weapon.WeaponAttackTimeParametersUpdateSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.030862" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1179" name="SetsWeaponParametersOnWeaponIdChanged" fullname="DMP.Battle.Core.Test.Weapon.WeaponAttackTimeParametersUpdateSystemTest.SetsWeaponParametersOnWeaponIdChanged" methodname="SetsWeaponParametersOnWeaponIdChanged" classname="DMP.Battle.Core.Test.Weapon.WeaponAttackTimeParametersUpdateSystemTest" runstate="Runnable" seed="158451942" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.029878" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1180" name="WeaponParametersUpdateSystemTest" fullname="DMP.Battle.Core.Test.Weapon.WeaponParametersUpdateSystemTest" classname="DMP.Battle.Core.Test.Weapon.WeaponParametersUpdateSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.027246" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1181" name="SetsWeaponParametersOnWeaponIdChanged" fullname="DMP.Battle.Core.Test.Weapon.WeaponParametersUpdateSystemTest.SetsWeaponParametersOnWeaponIdChanged" methodname="SetsWeaponParametersOnWeaponIdChanged" classname="DMP.Battle.Core.Test.Weapon.WeaponParametersUpdateSystemTest" runstate="Runnable" seed="1130557959" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.026057" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="1763" name="dmp.battle.render.test.dll" fullname="/builds/dmp/main/unity/Client/Library/ScriptAssemblies/dmp.battle.render.test.dll" runstate="Runnable" testcasecount="83" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="4.057721" total="83" passed="83" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="587" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
        <property name="platform" value="EditMode" />
        <property name="isAssembly" value="True" />
        <property name="EditorOnly" value="True" />
        <property name="RequiresPlayMode" value="False" />
      </properties>
      <test-suite type="TestSuite" id="1764" name="DMP" fullname="DMP" runstate="Runnable" testcasecount="83" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="4.055822" total="83" passed="83" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="1765" name="Battle" fullname="DMP.Battle" runstate="Runnable" testcasecount="83" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="4.051181" total="83" passed="83" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="1766" name="Render" fullname="DMP.Battle.Render" runstate="Runnable" testcasecount="83" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="4.047128" total="83" passed="83" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestSuite" id="1767" name="Test" fullname="DMP.Battle.Render.Test" runstate="Runnable" testcasecount="83" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="4.043218" total="83" passed="83" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="TestSuite" id="1780" name="Animation" fullname="DMP.Battle.Render.Test.Animation" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.035378" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1761" name="SetAnimatorSpeedSystemTest" fullname="DMP.Battle.Render.Test.Animation.SetAnimatorSpeedSystemTest" classname="DMP.Battle.Render.Test.Animation.SetAnimatorSpeedSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.032097" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1762" name="SetMoveSpeedTest" fullname="DMP.Battle.Render.Test.Animation.SetAnimatorSpeedSystemTest.SetMoveSpeedTest" methodname="SetMoveSpeedTest" classname="DMP.Battle.Render.Test.Animation.SetAnimatorSpeedSystemTest" runstate="Runnable" seed="1279711780" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.027754" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1779" name="Attack" fullname="DMP.Battle.Render.Test.Attack" runstate="Runnable" testcasecount="7" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="0.426280" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1751" name="AttackTargetMarkerControllerTest" fullname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest" classname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.235698" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties>
                    <property name="RequiresPlayMode" value="True" />
                  </properties>
                  <test-case id="1754" name="MovesVisualToNextTarget" fullname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest.MovesVisualToNextTarget" methodname="MovesVisualToNextTarget" classname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest" runstate="Runnable" seed="72009969" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.077478" asserts="0">
                    <properties>
                      <property name="_JOINTYPE" value="UnityCombinatorial" />
                    </properties>
                  </test-case>
                  <test-case id="1753" name="RemovesMarkerFromPreviousTarget" fullname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest.RemovesMarkerFromPreviousTarget" methodname="RemovesMarkerFromPreviousTarget" classname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest" runstate="Runnable" seed="434720593" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.008968" asserts="0">
                    <properties>
                      <property name="_JOINTYPE" value="UnityCombinatorial" />
                    </properties>
                  </test-case>
                  <test-case id="1752" name="SetsMarkerVisualForMarkedTarget" fullname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest.SetsMarkerVisualForMarkedTarget" methodname="SetsMarkerVisualForMarkedTarget" classname="DMP.Battle.Render.Test.Attack.AttackTargetMarkerControllerTest" runstate="Runnable" seed="958893326" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.004694" asserts="0">
                    <properties>
                      <property name="_JOINTYPE" value="UnityCombinatorial" />
                    </properties>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1755" name="RemoveAttackTargetMarkerSystemTest" fullname="DMP.Battle.Render.Test.Attack.RemoveAttackTargetMarkerSystemTest" classname="DMP.Battle.Render.Test.Attack.RemoveAttackTargetMarkerSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.124978" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties>
                    <property name="RequiresPlayMode" value="True" />
                  </properties>
                  <test-case id="1757" name="NotRemovesMarkerWhenHasNoAttackTarget" fullname="DMP.Battle.Render.Test.Attack.RemoveAttackTargetMarkerSystemTest.NotRemovesMarkerWhenHasNoAttackTarget" methodname="NotRemovesMarkerWhenHasNoAttackTarget" classname="DMP.Battle.Render.Test.Attack.RemoveAttackTargetMarkerSystemTest" runstate="Runnable" seed="1376821784" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.086162" asserts="0">
                    <properties>
                      <property name="_JOINTYPE" value="UnityCombinatorial" />
                    </properties>
                  </test-case>
                  <test-case id="1756" name="RemovesMarkerWhenThereAreNoAttackTargets" fullname="DMP.Battle.Render.Test.Attack.RemoveAttackTargetMarkerSystemTest.RemovesMarkerWhenThereAreNoAttackTargets" methodname="RemovesMarkerWhenThereAreNoAttackTargets" classname="DMP.Battle.Render.Test.Attack.RemoveAttackTargetMarkerSystemTest" runstate="Runnable" seed="182299306" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.035243" asserts="0">
                    <properties>
                      <property name="_JOINTYPE" value="UnityCombinatorial" />
                    </properties>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1758" name="SetAttackTargetMarkerSystemTest" fullname="DMP.Battle.Render.Test.Attack.SetAttackTargetMarkerSystemTest" classname="DMP.Battle.Render.Test.Attack.SetAttackTargetMarkerSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.058717" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1759" name="AddsMarkerToVisual" fullname="DMP.Battle.Render.Test.Attack.SetAttackTargetMarkerSystemTest.AddsMarkerToVisual" methodname="AddsMarkerToVisual" classname="DMP.Battle.Render.Test.Attack.SetAttackTargetMarkerSystemTest" runstate="Runnable" seed="677882349" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.027113" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1760" name="NotAddMarkerToVisual" fullname="DMP.Battle.Render.Test.Attack.SetAttackTargetMarkerSystemTest.NotAddMarkerToVisual" methodname="NotAddMarkerToVisual" classname="DMP.Battle.Render.Test.Attack.SetAttackTargetMarkerSystemTest" runstate="Runnable" seed="1003156660" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.027407" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1778" name="Base" fullname="DMP.Battle.Render.Test.Base" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="0.306860" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1742" name="BaseGameGroupDIProxySystemTest" fullname="DMP.Battle.Render.Test.Base.BaseGameGroupDIProxySystemTest" classname="DMP.Battle.Render.Test.Base.BaseGameGroupDIProxySystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="1899-12-30 00:00:00Z" duration="0.141313" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1743" name="DefineDataWhenHasComponentTest" fullname="DMP.Battle.Render.Test.Base.BaseGameGroupDIProxySystemTest.DefineDataWhenHasComponentTest" methodname="DefineDataWhenHasComponentTest" classname="DMP.Battle.Render.Test.Base.BaseGameGroupDIProxySystemTest" runstate="Runnable" seed="444995253" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.068237" asserts="0">
                    <properties>
                      <property name="RequiresPlayMode" value="True" />
                    </properties>
                  </test-case>
                  <test-case id="1744" name="DoesNotDefineDataFromOtherUnitTest" fullname="DMP.Battle.Render.Test.Base.BaseGameGroupDIProxySystemTest.DoesNotDefineDataFromOtherUnitTest" methodname="DoesNotDefineDataFromOtherUnitTest" classname="DMP.Battle.Render.Test.Base.BaseGameGroupDIProxySystemTest" runstate="Runnable" seed="1153038246" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.064052" asserts="0">
                    <properties>
                      <property name="RequiresPlayMode" value="True" />
                    </properties>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1745" name="BaseUnitGroupBufferToStoreProxySystemTest" fullname="DMP.Battle.Render.Test.Base.BaseUnitGroupBufferToStoreProxySystemTest" classname="DMP.Battle.Render.Test.Base.BaseUnitGroupBufferToStoreProxySystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.084986" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1746" name="DefineDataBufferChanged" fullname="DMP.Battle.Render.Test.Base.BaseUnitGroupBufferToStoreProxySystemTest.DefineDataBufferChanged" methodname="DefineDataBufferChanged" classname="DMP.Battle.Render.Test.Base.BaseUnitGroupBufferToStoreProxySystemTest" runstate="Runnable" seed="1133733050" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.081973" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1747" name="BaseUnitGroupDIProxySystemTest" fullname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest" classname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.074916" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1749" name="DefineDataToSeveralUnitTest" fullname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest.DefineDataToSeveralUnitTest" methodname="DefineDataToSeveralUnitTest" classname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest" runstate="Runnable" seed="1865984156" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.027277" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1748" name="DefineDataWhenHasComponentTagTest" fullname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest.DefineDataWhenHasComponentTagTest" methodname="DefineDataWhenHasComponentTagTest" classname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest" runstate="Runnable" seed="1145278894" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.022422" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1750" name="DoesNotDefineDataToOtherUnitTest" fullname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest.DoesNotDefineDataToOtherUnitTest" methodname="DoesNotDefineDataToOtherUnitTest" classname="DMP.Battle.Render.Test.Base.BaseUnitGroupDIProxySystemTest" runstate="Runnable" seed="264497261" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:37Z" duration="0.021984" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1777" name="Camera" fullname="DMP.Battle.Render.Test.Camera" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:38Z" duration="0.082422" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1738" name="SetCameraTargetSystemTest" fullname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest" classname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:38Z" duration="0.079828" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1740" name="DoesNotSetCameraTargetTwice" fullname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest.DoesNotSetCameraTargetTwice" methodname="DoesNotSetCameraTargetTwice" classname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest" runstate="Runnable" seed="302547720" result="Passed" start-time="2023-03-15 12:10:37Z" end-time="2023-03-15 12:10:38Z" duration="0.026363" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1741" name="RemovesCameraComponentWhenControlIsLost" fullname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest.RemovesCameraComponentWhenControlIsLost" methodname="RemovesCameraComponentWhenControlIsLost" classname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest" runstate="Runnable" seed="2022850997" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.023780" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1739" name="SetsCameraTargetForFirstPlayerControlTarget" fullname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest.SetsCameraTargetForFirstPlayerControlTarget" methodname="SetsCameraTargetForFirstPlayerControlTarget" classname="DMP.Battle.Render.Test.Camera.SetCameraTargetSystemTest" runstate="Runnable" seed="394635036" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.025219" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1776" name="CombatActions" fullname="DMP.Battle.Render.Test.CombatActions" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.196809" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1732" name="ActionAnimationGroupDIProxySystemTest" fullname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest" classname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.194331" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1736" name="DoesNotSendEventToOtherUnitTest" fullname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest.DoesNotSendEventToOtherUnitTest" methodname="DoesNotSendEventToOtherUnitTest" classname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest" runstate="Runnable" seed="86004159" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.082059" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.CombatActions.Systems.ActionAnimationGroupDIProxySystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1737" name="DoesNotSendEventWhenNoParametersTest" fullname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest.DoesNotSendEventWhenNoParametersTest" methodname="DoesNotSendEventWhenNoParametersTest" classname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest" runstate="Runnable" seed="1685125580" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.027119" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.CombatActions.Systems.ActionAnimationGroupDIProxySystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1735" name="SendEventToSeveralUnitTest" fullname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest.SendEventToSeveralUnitTest" methodname="SendEventToSeveralUnitTest" classname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest" runstate="Runnable" seed="2035175388" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.029416" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.CombatActions.Systems.ActionAnimationGroupDIProxySystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1733" name="SendEventWhenHasRequestAndAttackActionParametersTest" fullname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest.SendEventWhenHasRequestAndAttackActionParametersTest" methodname="SendEventWhenHasRequestAndAttackActionParametersTest" classname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest" runstate="Runnable" seed="716066288" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.026365" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.CombatActions.Systems.ActionAnimationGroupDIProxySystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1734" name="SendEventWhenHasRequestAndSkillActionParametersTest" fullname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest.SendEventWhenHasRequestAndSkillActionParametersTest" methodname="SendEventWhenHasRequestAndSkillActionParametersTest" classname="DMP.Battle.Render.Test.CombatActions.ActionAnimationGroupDIProxySystemTest" runstate="Runnable" seed="944944254" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.025225" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.CombatActions.Systems.ActionAnimationGroupDIProxySystem targeting DMP.Battle.Core.Action.Systems.ActionPrepareSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1775" name="Effects" fullname="DMP.Battle.Render.Test.Effects" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.672572" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1719" name="EffectAnimationSystemTest" fullname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest" classname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.137196" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1720" name="AddInitializedComponent" fullname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest.AddInitializedComponent" methodname="AddInitializedComponent" classname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest" runstate="Runnable" seed="704014187" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.033107" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Effects.System.EffectAnimationSystem targeting DMP.Battle.Core.Effects.Requests.Systems.EffectRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Requests.EffectRequestGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1722" name="DoesNotSendCustomActionAnimation" fullname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest.DoesNotSendCustomActionAnimation" methodname="DoesNotSendCustomActionAnimation" classname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest" runstate="Runnable" seed="1067467042" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.028020" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Effects.System.EffectAnimationSystem targeting DMP.Battle.Core.Effects.Requests.Systems.EffectRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Requests.EffectRequestGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1721" name="SendCustomActionAnimation" fullname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest.SendCustomActionAnimation" methodname="SendCustomActionAnimation" classname="DMP.Battle.Render.Test.Effects.EffectAnimationSystemTest" runstate="Runnable" seed="15571631" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.072445" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Effects.System.EffectAnimationSystem targeting DMP.Battle.Core.Effects.Requests.Systems.EffectRequestSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Effects.Requests.EffectRequestGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1723" name="EffectVFXDispelSystemTest" fullname="DMP.Battle.Render.Test.Effects.EffectVFXDispelSystemTest" classname="DMP.Battle.Render.Test.Effects.EffectVFXDispelSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.077263" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1725" name="RemoveEffectReferenceFromBuffer" fullname="DMP.Battle.Render.Test.Effects.EffectVFXDispelSystemTest.RemoveEffectReferenceFromBuffer" methodname="RemoveEffectReferenceFromBuffer" classname="DMP.Battle.Render.Test.Effects.EffectVFXDispelSystemTest" runstate="Runnable" seed="2098392792" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.042896" asserts="0">
                    <properties />
                    <output><![CDATA[Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1724" name="SetConnectedEffectCountToOne" fullname="DMP.Battle.Render.Test.Effects.EffectVFXDispelSystemTest.SetConnectedEffectCountToOne" methodname="SetConnectedEffectCountToOne" classname="DMP.Battle.Render.Test.Effects.EffectVFXDispelSystemTest" runstate="Runnable" seed="188069599" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.031287" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1726" name="EffectVFXInitializeSystemTest" fullname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest" classname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.455177" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1727" name="AddInitializedComponent" fullname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest.AddInitializedComponent" methodname="AddInitializedComponent" classname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest" runstate="Runnable" seed="71130467" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.046904" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1729" name="CreateSecondVFXEntity" fullname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest.CreateSecondVFXEntity" methodname="CreateSecondVFXEntity" classname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest" runstate="Runnable" seed="327612901" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.317734" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1728" name="DoesNotAddEffectReferenceSecondTime" fullname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest.DoesNotAddEffectReferenceSecondTime" methodname="DoesNotAddEffectReferenceSecondTime" classname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest" runstate="Runnable" seed="586270548" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.025550" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1730" name="DoesNotCreateSecondVFXEntityForSameAsset" fullname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest.DoesNotCreateSecondVFXEntityForSameAsset" methodname="DoesNotCreateSecondVFXEntityForSameAsset" classname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest" runstate="Runnable" seed="842939227" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.023596" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1731" name="DoesNotCreateVFXEntityWithoutVFXAsset" fullname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest.DoesNotCreateVFXEntityWithoutVFXAsset" methodname="DoesNotCreateVFXEntityWithoutVFXAsset" classname="DMP.Battle.Render.Test.Effects.EffectVFXInitializeSystemTest" runstate="Runnable" seed="1175812086" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:38Z" duration="0.022844" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1774" name="LifeCycle" fullname="DMP.Battle.Render.Test.LifeCycle" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:39Z" duration="0.192839" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <output><![CDATA[ObjectDisposedException: The Unity.Entities.EntityManager has been deallocated, it is not allowed to access it
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrowNoEarlyOut (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at <db4214c492144cde8f3fa63cb6f4d493>:0)
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrow (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at /home/bokken/buildslave/unity/build/Runtime/Export/Jobs/AtomicSafetyHandle.bindings.cs:165)
Unity.Entities.EntityManager.GetCheckedEntityDataAccess () (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:88)
Unity.Entities.EntityManager.Exists (Unity.Entities.Entity entity) (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:2842)
DMP.Battle.Render.Skill.VFXUtility.SetupVFXEntity (Unity.Entities.EntityManager entityManager, Unity.Entities.Entity vfxEntity, DMP.Battle.Render.VFX.VFXEffect template, Unity.Mathematics.float3 position, System.Single mainDuration, System.Single minDistance, System.Single maxDistance, System.Single angleWidth, UnityEngine.Transform parent, UnityEngine.Color color1, UnityEngine.Color color2, System.Boolean playAutomatically) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:57)
DMP.Battle.Render.Skill.VFXUtility+<>c__DisplayClass1_0.<CreateVFXEntity>b__0 (UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1[TObject] x) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:30)
DelegateList`1[T].Invoke (T res) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:69)
UnityEngine.Debug:LogException(Exception)
DelegateList`1:Invoke(AsyncOperationHandle`1) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:73)
UnityEngine.ResourceManagement.Util.DelayedActionManager:LateUpdate() (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelayedActionManager.cs:156)

ObjectDisposedException: The Unity.Entities.EntityManager has been deallocated, it is not allowed to access it
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrowNoEarlyOut (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at <db4214c492144cde8f3fa63cb6f4d493>:0)
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrow (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at /home/bokken/buildslave/unity/build/Runtime/Export/Jobs/AtomicSafetyHandle.bindings.cs:165)
Unity.Entities.EntityManager.GetCheckedEntityDataAccess () (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:88)
Unity.Entities.EntityManager.Exists (Unity.Entities.Entity entity) (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:2842)
DMP.Battle.Render.Skill.VFXUtility.SetupVFXEntity (Unity.Entities.EntityManager entityManager, Unity.Entities.Entity vfxEntity, DMP.Battle.Render.VFX.VFXEffect template, Unity.Mathematics.float3 position, System.Single mainDuration, System.Single minDistance, System.Single maxDistance, System.Single angleWidth, UnityEngine.Transform parent, UnityEngine.Color color1, UnityEngine.Color color2, System.Boolean playAutomatically) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:57)
DMP.Battle.Render.Skill.VFXUtility+<>c__DisplayClass1_0.<CreateVFXEntity>b__0 (UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1[TObject] x) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:30)
DelegateList`1[T].Invoke (T res) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:69)
UnityEngine.Debug:LogException(Exception)
DelegateList`1:Invoke(AsyncOperationHandle`1) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:73)
UnityEngine.ResourceManagement.ChainOperationTypelessDepedency`1:OnWrappedCompleted(AsyncOperationHandle`1)
DelegateList`1:Invoke(AsyncOperationHandle`1) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:69)
UnityEngine.ResourceManagement.Util.DelayedActionManager:LateUpdate() (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelayedActionManager.cs:156)

ObjectDisposedException: The Unity.Entities.EntityManager has been deallocated, it is not allowed to access it
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrowNoEarlyOut (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at <db4214c492144cde8f3fa63cb6f4d493>:0)
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrow (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at /home/bokken/buildslave/unity/build/Runtime/Export/Jobs/AtomicSafetyHandle.bindings.cs:165)
Unity.Entities.EntityManager.GetCheckedEntityDataAccess () (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:88)
Unity.Entities.EntityManager.Exists (Unity.Entities.Entity entity) (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:2842)
DMP.Battle.Render.Skill.VFXUtility.SetupVFXEntity (Unity.Entities.EntityManager entityManager, Unity.Entities.Entity vfxEntity, DMP.Battle.Render.VFX.VFXEffect template, Unity.Mathematics.float3 position, System.Single mainDuration, System.Single minDistance, System.Single maxDistance, System.Single angleWidth, UnityEngine.Transform parent, UnityEngine.Color color1, UnityEngine.Color color2, System.Boolean playAutomatically) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:57)
DMP.Battle.Render.Skill.VFXUtility+<>c__DisplayClass1_0.<CreateVFXEntity>b__0 (UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1[TObject] x) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:30)
DelegateList`1[T].Invoke (T res) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:69)
UnityEngine.Debug:LogException(Exception)
DelegateList`1:Invoke(AsyncOperationHandle`1) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:73)
UnityEngine.ResourceManagement.ChainOperationTypelessDepedency`1:OnWrappedCompleted(AsyncOperationHandle`1)
DelegateList`1:Invoke(AsyncOperationHandle`1) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:69)
UnityEngine.ResourceManagement.Util.DelayedActionManager:LateUpdate() (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelayedActionManager.cs:156)

ObjectDisposedException: The Unity.Entities.EntityManager has been deallocated, it is not allowed to access it
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrowNoEarlyOut (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at <db4214c492144cde8f3fa63cb6f4d493>:0)
Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle.CheckWriteAndThrow (Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle handle) (at /home/bokken/buildslave/unity/build/Runtime/Export/Jobs/AtomicSafetyHandle.bindings.cs:165)
Unity.Entities.EntityManager.GetCheckedEntityDataAccess () (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:88)
Unity.Entities.EntityManager.Exists (Unity.Entities.Entity entity) (at Library/PackageCache/com.unity.entities@0.51.1-preview.21/Unity.Entities/EntityManager.cs:2842)
DMP.Battle.Render.Skill.VFXUtility.SetupVFXEntity (Unity.Entities.EntityManager entityManager, Unity.Entities.Entity vfxEntity, DMP.Battle.Render.VFX.VFXEffect template, Unity.Mathematics.float3 position, System.Single mainDuration, System.Single minDistance, System.Single maxDistance, System.Single angleWidth, UnityEngine.Transform parent, UnityEngine.Color color1, UnityEngine.Color color2, System.Boolean playAutomatically) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:57)
DMP.Battle.Render.Skill.VFXUtility+<>c__DisplayClass1_0.<CreateVFXEntity>b__0 (UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1[TObject] x) (at /builds/dmp/main/unity/packages/battle/Render/Runtime/Skill/VFXUtility.cs:30)
DelegateList`1[T].Invoke (T res) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:69)
UnityEngine.Debug:LogException(Exception)
DelegateList`1:Invoke(AsyncOperationHandle`1) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:73)
UnityEngine.ResourceManagement.ChainOperationTypelessDepedency`1:OnWrappedCompleted(AsyncOperationHandle`1)
DelegateList`1:Invoke(AsyncOperationHandle`1) (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelegateList.cs:69)
UnityEngine.ResourceManagement.Util.DelayedActionManager:LateUpdate() (at Library/PackageCache/com.unity.addressables@1.19.19/Runtime/ResourceManager/Util/DelayedActionManager.cs:156)

]]></output>
                <test-suite type="TestFixture" id="1715" name="DeadUnitDIProxySystemTest" fullname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest" classname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:39Z" duration="0.129303" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1717" name="DefineDataToSeveralUnitTest" fullname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest.DefineDataToSeveralUnitTest" methodname="DefineDataToSeveralUnitTest" classname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest" runstate="Runnable" seed="1733319234" result="Passed" start-time="2023-03-15 12:10:38Z" end-time="2023-03-15 12:10:39Z" duration="0.050311" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1716" name="DefineDataWhenHasDeadTagTest" fullname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest.DefineDataWhenHasDeadTagTest" methodname="DefineDataWhenHasDeadTagTest" classname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest" runstate="Runnable" seed="243694445" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.053414" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1718" name="DoesNotDefineDataToOtherUnitTest" fullname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest.DoesNotDefineDataToOtherUnitTest" methodname="DoesNotDefineDataToOtherUnitTest" classname="DMP.Battle.Render.Test.LifeCycle.DeadUnitDIProxySystemTest" runstate="Runnable" seed="1281752342" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.023046" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1773" name="Move" fullname="DMP.Battle.Render.Test.Move" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.090723" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1710" name="ClearMoveSpeedHistoryByActionRequestSystemTest" fullname="DMP.Battle.Render.Test.Move.ClearMoveSpeedHistoryByActionRequestSystemTest" classname="DMP.Battle.Render.Test.Move.ClearMoveSpeedHistoryByActionRequestSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.056275" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1712" name="DoesNotResetBufferAndForceWithoutRequestTest" fullname="DMP.Battle.Render.Test.Move.ClearMoveSpeedHistoryByActionRequestSystemTest.DoesNotResetBufferAndForceWithoutRequestTest" methodname="DoesNotResetBufferAndForceWithoutRequestTest" classname="DMP.Battle.Render.Test.Move.ClearMoveSpeedHistoryByActionRequestSystemTest" runstate="Runnable" seed="1581533613" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.025766" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1711" name="ResetBufferAndForceByRequestTest" fullname="DMP.Battle.Render.Test.Move.ClearMoveSpeedHistoryByActionRequestSystemTest.ResetBufferAndForceByRequestTest" methodname="ResetBufferAndForceByRequestTest" classname="DMP.Battle.Render.Test.Move.ClearMoveSpeedHistoryByActionRequestSystemTest" runstate="Runnable" seed="2069024335" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.026969" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1713" name="TranslationRecordSystemTest" fullname="DMP.Battle.Render.Test.Move.TranslationRecordSystemTest" classname="DMP.Battle.Render.Test.Move.TranslationRecordSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.031474" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1714" name="WritesTranslation" fullname="DMP.Battle.Render.Test.Move.TranslationRecordSystemTest.WritesTranslation" methodname="WritesTranslation" classname="DMP.Battle.Render.Test.Move.TranslationRecordSystemTest" runstate="Runnable" seed="627481970" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.030355" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Move.Systems.TranslationRecordSystem targeting DMP.Battle.Client.Move.Systems.NavMeshAgentMoveSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.FixedStepSimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1772" name="Parameters" fullname="DMP.Battle.Render.Test.Parameters" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.066191" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1706" name="InitPlayerNameSystemTest" fullname="DMP.Battle.Render.Test.Parameters.InitPlayerNameSystemTest" classname="DMP.Battle.Render.Test.Parameters.InitPlayerNameSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.029764" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1707" name="SetNameFromReplicaTest" fullname="DMP.Battle.Render.Test.Parameters.InitPlayerNameSystemTest.SetNameFromReplicaTest" methodname="SetNameFromReplicaTest" classname="DMP.Battle.Render.Test.Parameters.InitPlayerNameSystemTest" runstate="Runnable" seed="1149774172" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.025741" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1708" name="InitUnitNameSystemTest" fullname="DMP.Battle.Render.Test.Parameters.InitUnitNameSystemTest" classname="DMP.Battle.Render.Test.Parameters.InitUnitNameSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.035787" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1709" name="SetNameFromReplicaTest" fullname="DMP.Battle.Render.Test.Parameters.InitUnitNameSystemTest.SetNameFromReplicaTest" methodname="SetNameFromReplicaTest" classname="DMP.Battle.Render.Test.Parameters.InitUnitNameSystemTest" runstate="Runnable" seed="1875448210" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.034734" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1771" name="Skill" fullname="DMP.Battle.Render.Test.Skill" runstate="Runnable" testcasecount="19" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:40Z" duration="0.801503" total="19" passed="19" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1682" name="CreatePlayerSkillAimVFXRequestSystemTest" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.144461" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1683" name="AddSkillAimWhenPressed" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest.AddSkillAimWhenPressed" methodname="AddSkillAimWhenPressed" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest" runstate="Runnable" seed="1804669721" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.071036" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.CreatePlayerSkillAimVFXRequestSystem targeting DMP.Battle.Client.Skill.Systems.CreateSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1685" name="DoesNotAddSkillAimWhenDead" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest.DoesNotAddSkillAimWhenDead" methodname="DoesNotAddSkillAimWhenDead" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest" runstate="Runnable" seed="1414438274" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.023752" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.CreatePlayerSkillAimVFXRequestSystem targeting DMP.Battle.Client.Skill.Systems.CreateSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1684" name="DoesNotAddSkillAimWhenSkillNotPressed" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest.DoesNotAddSkillAimWhenSkillNotPressed" methodname="DoesNotAddSkillAimWhenSkillNotPressed" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest" runstate="Runnable" seed="1409661835" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.023460" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.CreatePlayerSkillAimVFXRequestSystem targeting DMP.Battle.Client.Skill.Systems.CreateSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1686" name="DoesNotAddSkillAimWhenSkillOnCooldown" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest.DoesNotAddSkillAimWhenSkillOnCooldown" methodname="DoesNotAddSkillAimWhenSkillOnCooldown" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXRequestSystemTest" runstate="Runnable" seed="1315528296" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.022353" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.CreatePlayerSkillAimVFXRequestSystem targeting DMP.Battle.Client.Skill.Systems.CreateSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(Unity.Entities.SimulationSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1687" name="CreatePlayerSkillAimVFXSystemTest" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.223878" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1692" name="CreateAimMarkerAndAimRangeAndRemoveRequest" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest.CreateAimMarkerAndAimRangeAndRemoveRequest" methodname="CreateAimMarkerAndAimRangeAndRemoveRequest" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="325856087" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.068399" asserts="0">
                    <properties />
                    <output><![CDATA[Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1691" name="CreateAimMarkerAndRemoveRequest" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest.CreateAimMarkerAndRemoveRequest" methodname="CreateAimMarkerAndRemoveRequest" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="576960515" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.025971" asserts="0">
                    <properties />
                    <output><![CDATA[Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1690" name="CreateAimRangeAndRemoveRequest" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest.CreateAimRangeAndRemoveRequest" methodname="CreateAimRangeAndRemoveRequest" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="1738168487" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.025073" asserts="0">
                    <properties />
                    <output><![CDATA[Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1689" name="DoesNotCreateComponentsWhenSkillAimPrefabIsEmptyAndRemoveRequest" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest.DoesNotCreateComponentsWhenSkillAimPrefabIsEmptyAndRemoveRequest" methodname="DoesNotCreateComponentsWhenSkillAimPrefabIsEmptyAndRemoveRequest" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="68475773" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.053257" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1688" name="DoesNotCreateComponentsWithoutPlayerSkillAimVFXRequest" fullname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest.DoesNotCreateComponentsWithoutPlayerSkillAimVFXRequest" methodname="DoesNotCreateComponentsWithoutPlayerSkillAimVFXRequest" classname="DMP.Battle.Render.Test.Skill.CreatePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="677884992" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.045888" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1693" name="CreateSkillCastActionVFXSystemTest" fullname="DMP.Battle.Render.Test.Skill.CreateSkillCastActionVFXSystemTest" classname="DMP.Battle.Render.Test.Skill.CreateSkillCastActionVFXSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.055431" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <output><![CDATA[Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
]]></output>
                  <test-case id="1694" name="CreateVFX" fullname="DMP.Battle.Render.Test.Skill.CreateSkillCastActionVFXSystemTest.CreateVFX" methodname="CreateVFX" classname="DMP.Battle.Render.Test.Skill.CreateSkillCastActionVFXSystemTest" runstate="Runnable" seed="1270406792" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.027840" asserts="0">
                    <properties />
                    <output><![CDATA[Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1695" name="DoesNotCreateVFX" fullname="DMP.Battle.Render.Test.Skill.CreateSkillCastActionVFXSystemTest.DoesNotCreateVFX" methodname="DoesNotCreateVFX" classname="DMP.Battle.Render.Test.Skill.CreateSkillCastActionVFXSystemTest" runstate="Runnable" seed="1050717675" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.022670" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1696" name="RemovePlayerSkillAimVFXSystemTest" fullname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest" classname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.230183" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <output><![CDATA[Animator is not playing an AnimatorController
]]></output>
                  <test-case id="1697" name="DoesNotRemoveSkillAimWhenPressed" fullname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest.DoesNotRemoveSkillAimWhenPressed" methodname="DoesNotRemoveSkillAimWhenPressed" classname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="857409608" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.027296" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem targeting DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1701" name="RemovePlayerSkillAimMarkerReferenceWhenDead" fullname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest.RemovePlayerSkillAimMarkerReferenceWhenDead" methodname="RemovePlayerSkillAimMarkerReferenceWhenDead" classname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="516564372" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.028914" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem targeting DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1700" name="RemovePlayerSkillAimMarkerReferenceWhenNotPressed" fullname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest.RemovePlayerSkillAimMarkerReferenceWhenNotPressed" methodname="RemovePlayerSkillAimMarkerReferenceWhenNotPressed" classname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="870017372" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.027748" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem targeting DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1699" name="RemoveSkillAimWhenDead" fullname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest.RemoveSkillAimWhenDead" methodname="RemoveSkillAimWhenDead" classname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="1573100078" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.048919" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem targeting DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1698" name="RemoveSkillAimWhenNotPressed" fullname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest.RemoveSkillAimWhenNotPressed" methodname="RemoveSkillAimWhenNotPressed" classname="DMP.Battle.Render.Test.Skill.RemovePlayerSkillAimVFXSystemTest" runstate="Runnable" seed="757395296" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:39Z" duration="0.093114" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateBefore] attribute on DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem targeting DMP.Battle.Client.Skill.Systems.RemoveSkillAimTagSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1702" name="RemoveSkillPrepareMarkersSystemTest" fullname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest" classname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:40Z" duration="0.146475" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1705" name="RemoveReferencesAndDestroyEntities" fullname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest.RemoveReferencesAndDestroyEntities" methodname="RemoveReferencesAndDestroyEntities" classname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest" runstate="Runnable" seed="311675943" result="Passed" start-time="2023-03-15 12:10:39Z" end-time="2023-03-15 12:10:40Z" duration="0.087142" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.Skill.Systems.RemoveSkillPrepareMarkersSystem targeting DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1704" name="RemoveSkillPrepareCastProgressMarkerReferenceDestroyEntity" fullname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest.RemoveSkillPrepareCastProgressMarkerReferenceDestroyEntity" methodname="RemoveSkillPrepareCastProgressMarkerReferenceDestroyEntity" classname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest" runstate="Runnable" seed="352170588" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.026270" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.Skill.Systems.RemoveSkillPrepareMarkersSystem targeting DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                  <test-case id="1703" name="RemoveSkillPrepareRangeReferenceDestroyEntity" fullname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest.RemoveSkillPrepareRangeReferenceDestroyEntity" methodname="RemoveSkillPrepareRangeReferenceDestroyEntity" classname="DMP.Battle.Render.Test.Skill.RemoveSkillPrepareMarkersSystemTest" runstate="Runnable" seed="2099209671" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.028026" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.Skill.Systems.RemoveSkillPrepareMarkersSystem targeting DMP.Battle.Render.Skill.Systems.RemovePlayerSkillAimVFXSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Action.BattleActionSystemGroup))],
or by manually adding both systems to the same group's update list.
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
Animator is not playing an AnimatorController
Animator does not have an AnimatorController
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1770" name="UI" fullname="DMP.Battle.Render.Test.UI" runstate="Runnable" testcasecount="8" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="1899-12-30 00:00:00Z" duration="0.412567" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <output><![CDATA[Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
]]></output>
                <test-suite type="TestFixture" id="1670" name="CopyTransformToUnitUISystemTest" fullname="DMP.Battle.Render.Test.UI.CopyTransformToUnitUISystemTest" classname="DMP.Battle.Render.Test.UI.CopyTransformToUnitUISystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.051269" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1671" name="CopyTransformTest" fullname="DMP.Battle.Render.Test.UI.CopyTransformToUnitUISystemTest.CopyTransformTest" methodname="CopyTransformTest" classname="DMP.Battle.Render.Test.UI.CopyTransformToUnitUISystemTest" runstate="Runnable" seed="1081545724" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.026260" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1672" name="DoesNotCopyIfNoReference" fullname="DMP.Battle.Render.Test.UI.CopyTransformToUnitUISystemTest.DoesNotCopyIfNoReference" methodname="DoesNotCopyIfNoReference" classname="DMP.Battle.Render.Test.UI.CopyTransformToUnitUISystemTest" runstate="Runnable" seed="464272522" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.022744" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1673" name="CreateUnitUISystemTest" fullname="DMP.Battle.Render.Test.UI.CreateUnitUISystemTest" classname="DMP.Battle.Render.Test.UI.CreateUnitUISystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.062981" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <output><![CDATA[Animator is not playing an AnimatorController
]]></output>
                  <test-case id="1674" name="CreateUnitUIAndAddComponentsTest" fullname="DMP.Battle.Render.Test.UI.CreateUnitUISystemTest.CreateUnitUIAndAddComponentsTest" methodname="CreateUnitUIAndAddComponentsTest" classname="DMP.Battle.Render.Test.UI.CreateUnitUISystemTest" runstate="Runnable" seed="1706417621" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.029382" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.UI.Systems.CreateUnitUISystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1675" name="DoesNotCreateUITwiceTest" fullname="DMP.Battle.Render.Test.UI.CreateUnitUISystemTest.DoesNotCreateUITwiceTest" methodname="DoesNotCreateUITwiceTest" classname="DMP.Battle.Render.Test.UI.CreateUnitUISystemTest" runstate="Runnable" seed="2139932333" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.029660" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.UI.Systems.CreateUnitUISystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1676" name="LookAtCameraSystemTest" fullname="DMP.Battle.Render.Test.UI.LookAtCameraSystemTest" classname="DMP.Battle.Render.Test.UI.LookAtCameraSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.104556" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1678" name="DoesNotCopyIfNoTag" fullname="DMP.Battle.Render.Test.UI.LookAtCameraSystemTest.DoesNotCopyIfNoTag" methodname="DoesNotCopyIfNoTag" classname="DMP.Battle.Render.Test.UI.LookAtCameraSystemTest" runstate="Runnable" seed="1623255121" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.073153" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1677" name="LookAtCameraTest" fullname="DMP.Battle.Render.Test.UI.LookAtCameraSystemTest.LookAtCameraTest" methodname="LookAtCameraTest" classname="DMP.Battle.Render.Test.UI.LookAtCameraSystemTest" runstate="Runnable" seed="293662562" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.027689" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1679" name="UnitNameStoreProxySystemTest" fullname="DMP.Battle.Render.Test.UI.UnitNameStoreProxySystemTest" classname="DMP.Battle.Render.Test.UI.UnitNameStoreProxySystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="1899-12-30 00:00:00Z" duration="0.188060" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1681" name="DoesNotSendEventWithoutTagTest" fullname="DMP.Battle.Render.Test.UI.UnitNameStoreProxySystemTest.DoesNotSendEventWithoutTagTest" methodname="DoesNotSendEventWithoutTagTest" classname="DMP.Battle.Render.Test.UI.UnitNameStoreProxySystemTest" runstate="Runnable" seed="16730341" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.150698" asserts="0">
                    <properties>
                      <property name="RequiresPlayMode" value="True" />
                    </properties>
                  </test-case>
                  <test-case id="1680" name="SendUnitNameByReplicaInStoreTest" fullname="DMP.Battle.Render.Test.UI.UnitNameStoreProxySystemTest.SendUnitNameByReplicaInStoreTest" methodname="SendUnitNameByReplicaInStoreTest" classname="DMP.Battle.Render.Test.UI.UnitNameStoreProxySystemTest" runstate="Runnable" seed="1218575917" result="Passed" start-time="2023-03-15 12:11:04Z" end-time="2023-03-15 12:11:04Z" duration="0.032137" asserts="0">
                    <properties>
                      <property name="RequiresPlayMode" value="True" />
                    </properties>
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1769" name="Unit" fullname="DMP.Battle.Render.Test.Unit" runstate="Runnable" testcasecount="13" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.461905" total="13" passed="13" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1650" name="CopyTransformToUnitVisualSystemTest" fullname="DMP.Battle.Render.Test.Unit.CopyTransformToUnitVisualSystemTest" classname="DMP.Battle.Render.Test.Unit.CopyTransformToUnitVisualSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.052234" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1651" name="CopyTransformTest" fullname="DMP.Battle.Render.Test.Unit.CopyTransformToUnitVisualSystemTest.CopyTransformTest" methodname="CopyTransformTest" classname="DMP.Battle.Render.Test.Unit.CopyTransformToUnitVisualSystemTest" runstate="Runnable" seed="1623458476" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.025688" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1652" name="DoesNotCopyIfNoReference" fullname="DMP.Battle.Render.Test.Unit.CopyTransformToUnitVisualSystemTest.DoesNotCopyIfNoReference" methodname="DoesNotCopyIfNoReference" classname="DMP.Battle.Render.Test.Unit.CopyTransformToUnitVisualSystemTest" runstate="Runnable" seed="1312351196" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.022385" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1653" name="CreateUnitNavigationSystemTest" fullname="DMP.Battle.Render.Test.Unit.CreateUnitNavigationSystemTest" classname="DMP.Battle.Render.Test.Unit.CreateUnitNavigationSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.053778" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1654" name="CreatesPrefabAndAddsComponents" fullname="DMP.Battle.Render.Test.Unit.CreateUnitNavigationSystemTest.CreatesPrefabAndAddsComponents" methodname="CreatesPrefabAndAddsComponents" classname="DMP.Battle.Render.Test.Unit.CreateUnitNavigationSystemTest" runstate="Runnable" seed="683110615" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.027169" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1655" name="DoesNotCreatePrefabTwice" fullname="DMP.Battle.Render.Test.Unit.CreateUnitNavigationSystemTest.DoesNotCreatePrefabTwice" methodname="DoesNotCreatePrefabTwice" classname="DMP.Battle.Render.Test.Unit.CreateUnitNavigationSystemTest" runstate="Runnable" seed="1388042513" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.023487" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Core.Navigation.Systems.CreateUnitNavigationSystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1656" name="CreateUnitRootSystemTest" fullname="DMP.Battle.Render.Test.Unit.CreateUnitRootSystemTest" classname="DMP.Battle.Render.Test.Unit.CreateUnitRootSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.105481" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <output><![CDATA[Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
Animator is not playing an AnimatorController
]]></output>
                  <test-case id="1657" name="CreateUnitRootAndAddComponentsTest" fullname="DMP.Battle.Render.Test.Unit.CreateUnitRootSystemTest.CreateUnitRootAndAddComponentsTest" methodname="CreateUnitRootAndAddComponentsTest" classname="DMP.Battle.Render.Test.Unit.CreateUnitRootSystemTest" runstate="Runnable" seed="611230681" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.028079" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1658" name="DoesNotCreateRootTwiceTest" fullname="DMP.Battle.Render.Test.Unit.CreateUnitRootSystemTest.DoesNotCreateRootTwiceTest" methodname="DoesNotCreateRootTwiceTest" classname="DMP.Battle.Render.Test.Unit.CreateUnitRootSystemTest" runstate="Runnable" seed="1671394128" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.073669" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1659" name="CreateUnitVisualSystemTest" fullname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest" classname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.084708" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1661" name="CreatesAnotherVisual" fullname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest.CreatesAnotherVisual" methodname="CreatesAnotherVisual" classname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest" runstate="Runnable" seed="1664780953" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.031184" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.Unit.Systems.CreateUnitVisualSystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1660" name="CreatesUnitVisualAndAddsComponents" fullname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest.CreatesUnitVisualAndAddsComponents" methodname="CreatesUnitVisualAndAddsComponents" classname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest" runstate="Runnable" seed="749445683" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.024934" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.Unit.Systems.CreateUnitVisualSystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                  <test-case id="1662" name="DoesNotCreateVisualTwice" fullname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest.DoesNotCreateVisualTwice" methodname="DoesNotCreateVisualTwice" classname="DMP.Battle.Render.Test.Unit.CreateUnitVisualSystemTest" runstate="Runnable" seed="1675223612" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.024869" asserts="0">
                    <properties />
                    <output><![CDATA[Ignoring invalid [UpdateAfter] attribute on DMP.Battle.Render.Unit.Systems.CreateUnitVisualSystem targeting DMP.Battle.Core.Unit.Systems.CreateUnitRootSystem.
This attribute can only order systems that are members of the same ComponentSystemGroup instance.
Make sure that both systems are in the same system group with [UpdateInGroup(typeof(DMP.Battle.Core.Spawn.Systems.SpawnSystemGroup))],
or by manually adding both systems to the same group's update list.
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1663" name="CurrentMoveForceToVisualSystemTest" fullname="DMP.Battle.Render.Test.Unit.CurrentMoveForceToVisualSystemTest" classname="DMP.Battle.Render.Test.Unit.CurrentMoveForceToVisualSystemTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.052075" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1664" name="CopiesComponentDataFromLogicToVisual" fullname="DMP.Battle.Render.Test.Unit.CurrentMoveForceToVisualSystemTest.CopiesComponentDataFromLogicToVisual" methodname="CopiesComponentDataFromLogicToVisual" classname="DMP.Battle.Render.Test.Unit.CurrentMoveForceToVisualSystemTest" runstate="Runnable" seed="933472544" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.027510" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1665" name="DoesNotCopyIfNoReference" fullname="DMP.Battle.Render.Test.Unit.CurrentMoveForceToVisualSystemTest.DoesNotCopyIfNoReference" methodname="DoesNotCopyIfNoReference" classname="DMP.Battle.Render.Test.Unit.CurrentMoveForceToVisualSystemTest" runstate="Runnable" seed="437661655" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.021415" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1668" name="InitializeUnitGroupIdSystemTest" fullname="DMP.Battle.Render.Test.Unit.InitializeUnitGroupIdSystemTest" classname="DMP.Battle.Render.Test.Unit.InitializeUnitGroupIdSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.026800" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1669" name="SetUnitGroupIdAndRemoveRequestComponentTest" fullname="DMP.Battle.Render.Test.Unit.InitializeUnitGroupIdSystemTest.SetUnitGroupIdAndRemoveRequestComponentTest" methodname="SetUnitGroupIdAndRemoveRequestComponentTest" classname="DMP.Battle.Render.Test.Unit.InitializeUnitGroupIdSystemTest" runstate="Runnable" seed="1447067167" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.025689" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="TestFixture" id="1666" name="InitMoveSpeedBufferSystemTest" fullname="DMP.Battle.Render.Test.Unit.InitMoveSpeedBufferSystemTest" classname="DMP.Battle.Render.Test.Unit.InitMoveSpeedBufferSystemTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.083478" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1667" name="AddComponentsTest" fullname="DMP.Battle.Render.Test.Unit.InitMoveSpeedBufferSystemTest.AddComponentsTest" methodname="AddComponentsTest" classname="DMP.Battle.Render.Test.Unit.InitMoveSpeedBufferSystemTest" runstate="Runnable" seed="1674102129" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.080171" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestSuite" id="1768" name="Weapon" fullname="DMP.Battle.Render.Test.Weapon" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:41Z" duration="0.291811" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="1646" name="SetWeaponVisualSystemTest" fullname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest" classname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:41Z" duration="0.291171" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="1648" name="SetsOneHandWeaponToUnitVisual" fullname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest.SetsOneHandWeaponToUnitVisual" methodname="SetsOneHandWeaponToUnitVisual" classname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest" runstate="Runnable" seed="1047408544" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:40Z" duration="0.192442" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1649" name="SetsWeaponOnlyOnChange" fullname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest.SetsWeaponOnlyOnChange" methodname="SetsWeaponOnlyOnChange" classname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest" runstate="Runnable" seed="366299040" result="Passed" start-time="2023-03-15 12:10:40Z" end-time="2023-03-15 12:10:41Z" duration="0.071241" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1647" name="SetsWeaponToUnitVisual" fullname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest.SetsWeaponToUnitVisual" methodname="SetsWeaponToUnitVisual" classname="DMP.Battle.Render.Test.Weapon.SetWeaponVisualSystemTest" runstate="Runnable" seed="1567588569" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.023927" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="1987" name="dmp.client.tests.editor.dll" fullname="/builds/dmp/main/unity/Client/Library/ScriptAssemblies/dmp.client.tests.editor.dll" runstate="Runnable" testcasecount="174" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.400678" total="174" passed="174" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="587" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
        <property name="platform" value="EditMode" />
        <property name="isAssembly" value="True" />
        <property name="EditorOnly" value="True" />
        <property name="RequiresPlayMode" value="False" />
      </properties>
      <test-suite type="TestSuite" id="1988" name="DMP" fullname="DMP" runstate="Runnable" testcasecount="174" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.397281" total="174" passed="174" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="1989" name="Client" fullname="DMP.Client" runstate="Runnable" testcasecount="174" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.393873" total="174" passed="174" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="1990" name="Tests" fullname="DMP.Client.Tests" runstate="Runnable" testcasecount="174" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.390567" total="174" passed="174" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestSuite" id="1991" name="Editor" fullname="DMP.Client.Tests.Editor" runstate="Runnable" testcasecount="174" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.387287" total="174" passed="174" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="TestFixture" id="1810" name="LocationsAddressableAssetsTest" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" testcasecount="174" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.383966" total="174" passed="174" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
                <test-suite type="Theory" id="1986" name="AllBattleLogicIsAddressable" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" testcasecount="87" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.273965" total="87" passed="87" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties>
                    <property name="_JOINTYPE" value="Combinatorial" />
                  </properties>
                  <test-case id="1899" name="AllBattleLogicIsAddressable(&quot;blocking_catacombs11 (Blocking_Catacombs11)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;blocking_catacombs11 (Blocking_Catacombs11)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1145066163" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.009520" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1900" name="AllBattleLogicIsAddressable(&quot;blocking_catacombs4 (Blocking_Catacombs4)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;blocking_catacombs4 (Blocking_Catacombs4)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2003476589" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.004150" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1901" name="AllBattleLogicIsAddressable(&quot;blocking_catacombs5 (Blocking_Catacombs5)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;blocking_catacombs5 (Blocking_Catacombs5)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="535212604" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003766" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1902" name="AllBattleLogicIsAddressable(&quot;forest_2_1_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_1_camp (Forest_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="843270028" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003827" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1903" name="AllBattleLogicIsAddressable(&quot;forest_2_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_1_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2092828273" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002933" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1904" name="AllBattleLogicIsAddressable(&quot;forest_2_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_1_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1035519887" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003725" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1905" name="AllBattleLogicIsAddressable(&quot;forest_2_1_s3 (Forest_PlaneCrash)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_1_s3 (Forest_PlaneCrash)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="269492856" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002778" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1906" name="AllBattleLogicIsAddressable(&quot;forest_2_2_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_2_camp (Forest_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="936625186" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002456" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1907" name="AllBattleLogicIsAddressable(&quot;forest_2_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_2_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="867109306" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003031" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1908" name="AllBattleLogicIsAddressable(&quot;forest_2_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_2_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="360648216" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003224" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1909" name="AllBattleLogicIsAddressable(&quot;forest_2_2_s3 (Forest_Market)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_2_2_s3 (Forest_Market)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="941507271" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002698" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1910" name="AllBattleLogicIsAddressable(&quot;forest_3_1_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_1_camp (Forest_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="988254358" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003172" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1911" name="AllBattleLogicIsAddressable(&quot;forest_3_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_1_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1137787337" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002677" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1912" name="AllBattleLogicIsAddressable(&quot;forest_3_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_1_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1157580355" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002877" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1913" name="AllBattleLogicIsAddressable(&quot;forest_3_1_s3 (Forest_FuelLine)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_1_s3 (Forest_FuelLine)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1958777306" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002646" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1914" name="AllBattleLogicIsAddressable(&quot;forest_3_2_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_2_camp (Forest_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1845166326" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002540" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1915" name="AllBattleLogicIsAddressable(&quot;forest_3_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_2_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2087189464" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002848" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1916" name="AllBattleLogicIsAddressable(&quot;forest_3_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_2_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="785012714" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002447" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1917" name="AllBattleLogicIsAddressable(&quot;forest_3_2_s3 (Forest_AmusementPart1)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_2_s3 (Forest_AmusementPart1)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1678309872" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002688" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1918" name="AllBattleLogicIsAddressable(&quot;forest_3_3_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_3_camp (Forest_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="631717912" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002728" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1919" name="AllBattleLogicIsAddressable(&quot;forest_3_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_3_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1555141251" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002345" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1920" name="AllBattleLogicIsAddressable(&quot;forest_3_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_3_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="835439804" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002414" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1921" name="AllBattleLogicIsAddressable(&quot;forest_3_3_s3 (Forest_WomanSurvivor)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_3_3_s3 (Forest_WomanSurvivor)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="494470389" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002381" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1922" name="AllBattleLogicIsAddressable(&quot;forest_4_1_s3 (Forest_Oaks)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_4_1_s3 (Forest_Oaks)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1520094214" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003149" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1923" name="AllBattleLogicIsAddressable(&quot;forest_capital (Forest_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_capital (Forest_Capital)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="519174486" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002798" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1924" name="AllBattleLogicIsAddressable(&quot;neutral_1_1_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_1_camp (Neutral_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1985505198" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002669" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1925" name="AllBattleLogicIsAddressable(&quot;neutral_1_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_1_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1284233285" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002716" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1926" name="AllBattleLogicIsAddressable(&quot;neutral_1_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_1_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="894578692" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002772" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1927" name="AllBattleLogicIsAddressable(&quot;neutral_1_1_s3 (Neutral_Konvoi)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_1_s3 (Neutral_Konvoi)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="601787150" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002584" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1928" name="AllBattleLogicIsAddressable(&quot;neutral_1_2_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_2_camp (Neutral_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="755630277" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002555" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1929" name="AllBattleLogicIsAddressable(&quot;neutral_1_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_2_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="986679373" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002822" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1930" name="AllBattleLogicIsAddressable(&quot;neutral_1_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_2_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="690415058" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002686" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1931" name="AllBattleLogicIsAddressable(&quot;neutral_1_2_s3 (Neutral_Grove)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_2_s3 (Neutral_Grove)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1224436342" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000859" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1932" name="AllBattleLogicIsAddressable(&quot;neutral_1_3_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_3_camp (Neutral_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="362546237" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002866" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1933" name="AllBattleLogicIsAddressable(&quot;neutral_1_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_3_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1794953207" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002887" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1934" name="AllBattleLogicIsAddressable(&quot;neutral_1_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_3_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1502604979" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002579" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1935" name="AllBattleLogicIsAddressable(&quot;neutral_1_3_s3 (Neutral_Forest)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_3_s3 (Neutral_Forest)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="35399969" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002610" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1936" name="AllBattleLogicIsAddressable(&quot;neutral_1_4_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_4_camp (Neutral_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2055511616" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002755" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1937" name="AllBattleLogicIsAddressable(&quot;neutral_1_4_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_4_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1530811072" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003861" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1938" name="AllBattleLogicIsAddressable(&quot;neutral_1_4_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_4_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1741339247" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003243" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1939" name="AllBattleLogicIsAddressable(&quot;neutral_1_4_s3 (Neutral_Rocks)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_1_4_s3 (Neutral_Rocks)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="210823053" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002933" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1940" name="AllBattleLogicIsAddressable(&quot;neutral_capital (Neutral_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_capital (Neutral_Capital)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2005347491" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.006919" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1941" name="AllBattleLogicIsAddressable(&quot;neutral_home (Neutral_Home)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;neutral_home (Neutral_Home)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1327779761" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003095" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1942" name="AllBattleLogicIsAddressable(&quot;north_2_1_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_1_camp (North_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="87194315" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002855" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1943" name="AllBattleLogicIsAddressable(&quot;north_2_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_1_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="648698002" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002764" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1944" name="AllBattleLogicIsAddressable(&quot;north_2_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_1_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1690725140" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003459" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1945" name="AllBattleLogicIsAddressable(&quot;north_2_1_s3 (North_Water)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_1_s3 (North_Water)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2019556488" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002667" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1946" name="AllBattleLogicIsAddressable(&quot;north_2_2_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_2_camp (North_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1225282321" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002649" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1947" name="AllBattleLogicIsAddressable(&quot;north_2_2_s1 (North_Catacombs1)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_2_s1 (North_Catacombs1)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1635088936" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.004434" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1948" name="AllBattleLogicIsAddressable(&quot;north_2_2_s2 (North_Catacombs1)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_2_s2 (North_Catacombs1)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1943709418" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002849" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1949" name="AllBattleLogicIsAddressable(&quot;north_2_2_s3 (North_Market)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_2_2_s3 (North_Market)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1563532987" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.005876" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1950" name="AllBattleLogicIsAddressable(&quot;north_3_1_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_1_camp (North_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="959492394" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002702" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1951" name="AllBattleLogicIsAddressable(&quot;north_3_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_1_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="150083074" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002376" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1952" name="AllBattleLogicIsAddressable(&quot;north_3_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_1_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1396062141" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003053" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1953" name="AllBattleLogicIsAddressable(&quot;north_3_1_s3 (North_Parking)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_1_s3 (North_Parking)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="24119026" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002749" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1954" name="AllBattleLogicIsAddressable(&quot;north_3_2_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_2_camp (North_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="309626359" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002406" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1955" name="AllBattleLogicIsAddressable(&quot;north_3_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_2_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1509006200" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.003245" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1956" name="AllBattleLogicIsAddressable(&quot;north_3_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_2_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1162602037" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002878" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1957" name="AllBattleLogicIsAddressable(&quot;north_3_2_s3 (North_Junkyard)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_2_s3 (North_Junkyard)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="324095542" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002647" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1958" name="AllBattleLogicIsAddressable(&quot;north_3_3_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_3_camp (North_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="107323075" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002465" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1959" name="AllBattleLogicIsAddressable(&quot;north_3_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_3_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1898770249" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002407" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1960" name="AllBattleLogicIsAddressable(&quot;north_3_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_3_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1522397811" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002840" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1961" name="AllBattleLogicIsAddressable(&quot;north_3_3_s3 (North_Slum)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_3_3_s3 (North_Slum)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="334838036" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002500" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1962" name="AllBattleLogicIsAddressable(&quot;north_capital (North_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;north_capital (North_Capital)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="111479029" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.005998" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1963" name="AllBattleLogicIsAddressable(&quot;south_2_1_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_1_camp (South_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1521452490" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002815" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1964" name="AllBattleLogicIsAddressable(&quot;south_2_1_s1 (South_Catacombs3)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_1_s1 (South_Catacombs3)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="251092213" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002812" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1965" name="AllBattleLogicIsAddressable(&quot;south_2_1_s3 (South_Cliffs)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_1_s3 (South_Cliffs)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1911301663" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002711" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1966" name="AllBattleLogicIsAddressable(&quot;south_2_2_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_2_camp (South_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="775241100" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002727" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1967" name="AllBattleLogicIsAddressable(&quot;south_2_2_s1 (South_Catacombs2)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_2_s1 (South_Catacombs2)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1510110795" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002480" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1968" name="AllBattleLogicIsAddressable(&quot;south_2_2_s3 (South_Market)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_2_s3 (South_Market)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="456172327" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002406" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1969" name="AllBattleLogicIsAddressable(&quot;south_3_1_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_1_camp (South_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1809766357" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002640" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1970" name="AllBattleLogicIsAddressable(&quot;south_3_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_1_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="31677848" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002948" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1971" name="AllBattleLogicIsAddressable(&quot;south_3_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_1_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1401685289" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002705" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1972" name="AllBattleLogicIsAddressable(&quot;south_3_1_s3 (North_PlaneCrashBurn)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_1_s3 (North_PlaneCrashBurn)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2084454272" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002652" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1973" name="AllBattleLogicIsAddressable(&quot;south_3_2_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_2_camp (South_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="420894859" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002654" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1974" name="AllBattleLogicIsAddressable(&quot;south_3_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_2_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1697277407" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002449" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1975" name="AllBattleLogicIsAddressable(&quot;south_3_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_2_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1655143690" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002653" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1976" name="AllBattleLogicIsAddressable(&quot;south_3_2_s3 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_2_s3 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="407276074" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002418" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1977" name="AllBattleLogicIsAddressable(&quot;south_3_3_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_3_camp (South_StageCamp)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="871396212" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002438" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1978" name="AllBattleLogicIsAddressable(&quot;south_3_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_3_s1 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="975932993" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002659" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1979" name="AllBattleLogicIsAddressable(&quot;south_3_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_3_s2 (Neutral_Empty)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2113432357" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002738" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1980" name="AllBattleLogicIsAddressable(&quot;south_3_3_s3 (South_Water)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_3_3_s3 (South_Water)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="58950964" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002380" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1981" name="AllBattleLogicIsAddressable(&quot;south_capital (South_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_capital (South_Capital)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1406973403" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002488" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1982" name="AllBattleLogicIsAddressable(&quot;forest_art_marketmirror (Forest_Art_MarketMirror)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;forest_art_marketmirror (Forest_Art_MarketMirror)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="805561379" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002830" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1983" name="AllBattleLogicIsAddressable(&quot;south_2_1_s2 (South_Catacombs3)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_1_s2 (South_Catacombs3)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1339580937" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002668" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1984" name="AllBattleLogicIsAddressable(&quot;south_2_2_s2 (South_Catacombs2)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_2_2_s2 (South_Catacombs2)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="27186979" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.007467" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1985" name="AllBattleLogicIsAddressable(&quot;south_art_marketmirror (South_Art_MarketMirror)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBattleLogicIsAddressable(&quot;south_art_marketmirror (South_Art_MarketMirror)&quot;)" methodname="AllBattleLogicIsAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="540331984" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.002425" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="Theory" id="1898" name="AllBuildScenesAreAddressable" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" testcasecount="87" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.020398" total="87" passed="87" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties>
                    <property name="_JOINTYPE" value="Combinatorial" />
                  </properties>
                  <test-case id="1811" name="AllBuildScenesAreAddressable(&quot;blocking_catacombs11 (Blocking_Catacombs11)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;blocking_catacombs11 (Blocking_Catacombs11)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="864283837" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.001595" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1812" name="AllBuildScenesAreAddressable(&quot;blocking_catacombs4 (Blocking_Catacombs4)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;blocking_catacombs4 (Blocking_Catacombs4)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="711520490" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000307" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1813" name="AllBuildScenesAreAddressable(&quot;blocking_catacombs5 (Blocking_Catacombs5)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;blocking_catacombs5 (Blocking_Catacombs5)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="439597793" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000283" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1814" name="AllBuildScenesAreAddressable(&quot;forest_2_1_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_1_camp (Forest_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1720046015" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000315" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1815" name="AllBuildScenesAreAddressable(&quot;forest_2_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_1_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1428727492" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000254" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1816" name="AllBuildScenesAreAddressable(&quot;forest_2_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_1_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1995804587" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000093" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1817" name="AllBuildScenesAreAddressable(&quot;forest_2_1_s3 (Forest_PlaneCrash)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_1_s3 (Forest_PlaneCrash)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1196819452" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000229" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1818" name="AllBuildScenesAreAddressable(&quot;forest_2_2_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_2_camp (Forest_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="670432994" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000093" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1819" name="AllBuildScenesAreAddressable(&quot;forest_2_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_2_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="106396869" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1820" name="AllBuildScenesAreAddressable(&quot;forest_2_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_2_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1194309549" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000065" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1821" name="AllBuildScenesAreAddressable(&quot;forest_2_2_s3 (Forest_Market)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_2_2_s3 (Forest_Market)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2138067462" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000233" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1822" name="AllBuildScenesAreAddressable(&quot;forest_3_1_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_1_camp (Forest_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="498207986" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000098" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1823" name="AllBuildScenesAreAddressable(&quot;forest_3_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_1_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1643212892" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000074" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1824" name="AllBuildScenesAreAddressable(&quot;forest_3_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_1_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1969139481" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000062" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1825" name="AllBuildScenesAreAddressable(&quot;forest_3_1_s3 (Forest_FuelLine)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_1_s3 (Forest_FuelLine)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1797069980" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000235" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1826" name="AllBuildScenesAreAddressable(&quot;forest_3_2_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_2_camp (Forest_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="184593030" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000090" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1827" name="AllBuildScenesAreAddressable(&quot;forest_3_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_2_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1207660631" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000069" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1828" name="AllBuildScenesAreAddressable(&quot;forest_3_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_2_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="292073080" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1829" name="AllBuildScenesAreAddressable(&quot;forest_3_2_s3 (Forest_AmusementPart1)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_2_s3 (Forest_AmusementPart1)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1441676463" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000232" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1830" name="AllBuildScenesAreAddressable(&quot;forest_3_3_camp (Forest_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_3_camp (Forest_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="321016727" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000090" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1831" name="AllBuildScenesAreAddressable(&quot;forest_3_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_3_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="833627780" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000089" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1832" name="AllBuildScenesAreAddressable(&quot;forest_3_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_3_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2101689885" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000070" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1833" name="AllBuildScenesAreAddressable(&quot;forest_3_3_s3 (Forest_WomanSurvivor)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_3_3_s3 (Forest_WomanSurvivor)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="278388961" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000229" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1834" name="AllBuildScenesAreAddressable(&quot;forest_4_1_s3 (Forest_Oaks)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_4_1_s3 (Forest_Oaks)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2065300856" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000239" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1835" name="AllBuildScenesAreAddressable(&quot;forest_capital (Forest_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_capital (Forest_Capital)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2146988081" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000232" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1836" name="AllBuildScenesAreAddressable(&quot;neutral_1_1_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_1_camp (Neutral_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1849882406" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000242" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1837" name="AllBuildScenesAreAddressable(&quot;neutral_1_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_1_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1141719663" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000089" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1838" name="AllBuildScenesAreAddressable(&quot;neutral_1_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_1_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1298766468" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000066" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1839" name="AllBuildScenesAreAddressable(&quot;neutral_1_1_s3 (Neutral_Konvoi)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_1_s3 (Neutral_Konvoi)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1367219637" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000213" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1840" name="AllBuildScenesAreAddressable(&quot;neutral_1_2_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_2_camp (Neutral_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1896824763" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000087" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1841" name="AllBuildScenesAreAddressable(&quot;neutral_1_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_2_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="341847404" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000071" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1842" name="AllBuildScenesAreAddressable(&quot;neutral_1_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_2_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1861692864" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000062" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1843" name="AllBuildScenesAreAddressable(&quot;neutral_1_2_s3 (Neutral_Grove)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_2_s3 (Neutral_Grove)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2062632173" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000219" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1844" name="AllBuildScenesAreAddressable(&quot;neutral_1_3_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_3_camp (Neutral_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="744620696" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000091" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1845" name="AllBuildScenesAreAddressable(&quot;neutral_1_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_3_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="974179105" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000071" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1846" name="AllBuildScenesAreAddressable(&quot;neutral_1_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_3_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1770850112" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000077" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1847" name="AllBuildScenesAreAddressable(&quot;neutral_1_3_s3 (Neutral_Forest)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_3_s3 (Neutral_Forest)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="244966194" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000221" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1848" name="AllBuildScenesAreAddressable(&quot;neutral_1_4_camp (Neutral_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_4_camp (Neutral_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1090102878" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000088" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1849" name="AllBuildScenesAreAddressable(&quot;neutral_1_4_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_4_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="432836162" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1850" name="AllBuildScenesAreAddressable(&quot;neutral_1_4_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_4_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="667028164" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000064" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1851" name="AllBuildScenesAreAddressable(&quot;neutral_1_4_s3 (Neutral_Rocks)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_1_4_s3 (Neutral_Rocks)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1514252368" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000220" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1852" name="AllBuildScenesAreAddressable(&quot;neutral_capital (Neutral_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_capital (Neutral_Capital)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1809112767" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000235" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1853" name="AllBuildScenesAreAddressable(&quot;neutral_home (Neutral_Home)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;neutral_home (Neutral_Home)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="272387999" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000248" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1854" name="AllBuildScenesAreAddressable(&quot;north_2_1_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_1_camp (North_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1274961037" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000244" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1855" name="AllBuildScenesAreAddressable(&quot;north_2_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_1_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2025225577" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000088" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1856" name="AllBuildScenesAreAddressable(&quot;north_2_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_1_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="966034773" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000067" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1857" name="AllBuildScenesAreAddressable(&quot;north_2_1_s3 (North_Water)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_1_s3 (North_Water)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1119367570" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000218" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1858" name="AllBuildScenesAreAddressable(&quot;north_2_2_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_2_camp (North_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="861497097" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000112" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1859" name="AllBuildScenesAreAddressable(&quot;north_2_2_s1 (North_Catacombs1)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_2_s1 (North_Catacombs1)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1951570771" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000247" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1860" name="AllBuildScenesAreAddressable(&quot;north_2_2_s2 (North_Catacombs1)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_2_s2 (North_Catacombs1)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="39959572" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000090" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1861" name="AllBuildScenesAreAddressable(&quot;north_2_2_s3 (North_Market)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_2_2_s3 (North_Market)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1775726741" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000222" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1862" name="AllBuildScenesAreAddressable(&quot;north_3_1_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_1_camp (North_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="716584745" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000093" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1863" name="AllBuildScenesAreAddressable(&quot;north_3_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_1_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2007074099" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000070" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1864" name="AllBuildScenesAreAddressable(&quot;north_3_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_1_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1414760918" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000062" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1865" name="AllBuildScenesAreAddressable(&quot;north_3_1_s3 (North_Parking)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_1_s3 (North_Parking)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1801185991" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000224" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1866" name="AllBuildScenesAreAddressable(&quot;north_3_2_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_2_camp (North_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="910077599" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000091" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1867" name="AllBuildScenesAreAddressable(&quot;north_3_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_2_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="433131529" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000071" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1868" name="AllBuildScenesAreAddressable(&quot;north_3_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_2_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="521780584" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000064" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1869" name="AllBuildScenesAreAddressable(&quot;north_3_2_s3 (North_Junkyard)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_2_s3 (North_Junkyard)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1720541581" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000224" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1870" name="AllBuildScenesAreAddressable(&quot;north_3_3_camp (North_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_3_camp (North_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1726328733" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000091" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1871" name="AllBuildScenesAreAddressable(&quot;north_3_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_3_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="854084924" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000079" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1872" name="AllBuildScenesAreAddressable(&quot;north_3_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_3_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2045536631" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000070" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1873" name="AllBuildScenesAreAddressable(&quot;north_3_3_s3 (North_Slum)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_3_3_s3 (North_Slum)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1450697004" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000224" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1874" name="AllBuildScenesAreAddressable(&quot;north_capital (North_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;north_capital (North_Capital)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="357055753" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000235" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1875" name="AllBuildScenesAreAddressable(&quot;south_2_1_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_1_camp (South_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="852462145" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000255" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1876" name="AllBuildScenesAreAddressable(&quot;south_2_1_s1 (South_Catacombs3)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_1_s1 (South_Catacombs3)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="276374598" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000248" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1877" name="AllBuildScenesAreAddressable(&quot;south_2_1_s3 (South_Cliffs)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_1_s3 (South_Cliffs)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="583059460" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000244" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1878" name="AllBuildScenesAreAddressable(&quot;south_2_2_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_2_camp (South_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="898592196" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000094" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1879" name="AllBuildScenesAreAddressable(&quot;south_2_2_s1 (South_Catacombs2)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_2_s1 (South_Catacombs2)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="994960376" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000252" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1880" name="AllBuildScenesAreAddressable(&quot;south_2_2_s3 (South_Market)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_2_s3 (South_Market)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="26219868" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000245" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1881" name="AllBuildScenesAreAddressable(&quot;south_3_1_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_1_camp (South_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2087110483" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000093" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1882" name="AllBuildScenesAreAddressable(&quot;south_3_1_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_1_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="117557753" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000070" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1883" name="AllBuildScenesAreAddressable(&quot;south_3_1_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_1_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2006720565" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1884" name="AllBuildScenesAreAddressable(&quot;south_3_1_s3 (North_PlaneCrashBurn)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_1_s3 (North_PlaneCrashBurn)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="774648299" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000221" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1885" name="AllBuildScenesAreAddressable(&quot;south_3_2_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_2_camp (South_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="954248006" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000092" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1886" name="AllBuildScenesAreAddressable(&quot;south_3_2_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_2_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1171998660" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000071" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1887" name="AllBuildScenesAreAddressable(&quot;south_3_2_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_2_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1829301886" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1888" name="AllBuildScenesAreAddressable(&quot;south_3_2_s3 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_2_s3 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1150911571" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000065" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1889" name="AllBuildScenesAreAddressable(&quot;south_3_3_camp (South_StageCamp)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_3_camp (South_StageCamp)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="40075279" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000063" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1890" name="AllBuildScenesAreAddressable(&quot;south_3_3_s1 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_3_s1 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1180953308" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000066" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1891" name="AllBuildScenesAreAddressable(&quot;south_3_3_s2 (Neutral_Empty)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_3_s2 (Neutral_Empty)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="730514836" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000063" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1892" name="AllBuildScenesAreAddressable(&quot;south_3_3_s3 (South_Water)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_3_3_s3 (South_Water)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="280222566" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000221" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1893" name="AllBuildScenesAreAddressable(&quot;south_capital (South_Capital)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_capital (South_Capital)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1494679344" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000252" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1894" name="AllBuildScenesAreAddressable(&quot;forest_art_marketmirror (Forest_Art_MarketMirror)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;forest_art_marketmirror (Forest_Art_MarketMirror)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1327260065" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000262" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1895" name="AllBuildScenesAreAddressable(&quot;south_2_1_s2 (South_Catacombs3)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_1_s2 (South_Catacombs3)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="121098022" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000101" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1896" name="AllBuildScenesAreAddressable(&quot;south_2_2_s2 (South_Catacombs2)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_2_2_s2 (South_Catacombs2)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="1772746306" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000074" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="1897" name="AllBuildScenesAreAddressable(&quot;south_art_marketmirror (South_Art_MarketMirror)&quot;)" fullname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest.AllBuildScenesAreAddressable(&quot;south_art_marketmirror (South_Art_MarketMirror)&quot;)" methodname="AllBuildScenesAreAddressable" classname="DMP.Client.Tests.Editor.LocationsAddressableAssetsTest" runstate="Runnable" seed="2002102412" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000241" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="2099" name="dmp.core.tests.editor.dll" fullname="/builds/dmp/main/unity/Client/Library/ScriptAssemblies/dmp.core.tests.editor.dll" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.057647" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="587" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
        <property name="platform" value="EditMode" />
        <property name="isAssembly" value="True" />
        <property name="EditorOnly" value="True" />
        <property name="RequiresPlayMode" value="False" />
      </properties>
      <test-suite type="TestSuite" id="2100" name="DMP" fullname="DMP" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.057261" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="2101" name="Core" fullname="DMP.Core" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.053739" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="2102" name="Tests" fullname="DMP.Core.Tests" runstate="Runnable" testcasecount="10" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.050460" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2084" name="HierarchyActivatorTest" fullname="DMP.Core.Tests.HierarchyActivatorTest" classname="DMP.Core.Tests.HierarchyActivatorTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.018336" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2085" name="ActivatesSequentially" fullname="DMP.Core.Tests.HierarchyActivatorTest.ActivatesSequentially" methodname="ActivatesSequentially" classname="DMP.Core.Tests.HierarchyActivatorTest" runstate="Runnable" seed="1101012062" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.012434" asserts="0">
                <properties />
              </test-case>
              <test-case id="2086" name="DoesNotActivateDisabledChildren" fullname="DMP.Core.Tests.HierarchyActivatorTest.DoesNotActivateDisabledChildren" methodname="DoesNotActivateDisabledChildren" classname="DMP.Core.Tests.HierarchyActivatorTest" runstate="Runnable" seed="1177135675" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000925" asserts="0">
                <properties />
              </test-case>
              <test-case id="2087" name="DoesNotActivateSubHierarchiesTwice" fullname="DMP.Core.Tests.HierarchyActivatorTest.DoesNotActivateSubHierarchiesTwice" methodname="DoesNotActivateSubHierarchiesTwice" classname="DMP.Core.Tests.HierarchyActivatorTest" runstate="Runnable" seed="1247477764" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000697" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2088" name="MainActivatorTest" fullname="DMP.Core.Tests.MainActivatorTest" classname="DMP.Core.Tests.MainActivatorTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.015352" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2089" name="ActivatesOnAwake" fullname="DMP.Core.Tests.MainActivatorTest.ActivatesOnAwake" methodname="ActivatesOnAwake" classname="DMP.Core.Tests.MainActivatorTest" runstate="Runnable" seed="66034210" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.005607" asserts="0">
                <properties />
              </test-case>
              <test-suite type="ParameterizedMethod" id="2092" name="SetsLoggingLevelForChildren" fullname="DMP.Core.Tests.MainActivatorTest.SetsLoggingLevelForChildren" classname="DMP.Core.Tests.MainActivatorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.007182" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2090" name="SetsLoggingLevelForChildren(False)" fullname="DMP.Core.Tests.MainActivatorTest.SetsLoggingLevelForChildren(False)" methodname="SetsLoggingLevelForChildren" classname="DMP.Core.Tests.MainActivatorTest" runstate="Runnable" seed="1751412412" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000675" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2091" name="SetsLoggingLevelForChildren(True)" fullname="DMP.Core.Tests.MainActivatorTest.SetsLoggingLevelForChildren(True)" methodname="SetsLoggingLevelForChildren" classname="DMP.Core.Tests.MainActivatorTest" runstate="Runnable" seed="59332721" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.004034" asserts="0">
                  <properties />
                  <output><![CDATA[DMP.Core.Activators.MainActivator Activation Started at 21.66944s: Log
DMP.Core.Tests.TestActivator Activation Started at 21.67089s: Log
DMP.Core.Tests.TestActivator Activation Finished in 0.000749588s: Log
DMP.Core.Activators.MainActivator Activation Finished in 0.002967834s: Log
]]></output>
                </test-case>
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="2093" name="ParallelActivatorTest" fullname="DMP.Core.Tests.ParallelActivatorTest" classname="DMP.Core.Tests.ParallelActivatorTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.007955" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2094" name="ActivatesInParallel" fullname="DMP.Core.Tests.ParallelActivatorTest.ActivatesInParallel" methodname="ActivatesInParallel" classname="DMP.Core.Tests.ParallelActivatorTest" runstate="Runnable" seed="1621619291" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.005767" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2095" name="UnityActivatorTest" fullname="DMP.Core.Tests.UnityActivatorTest" classname="DMP.Core.Tests.UnityActivatorTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.005382" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2098" name="DoesNotLogIfLoggingIsDisabled" fullname="DMP.Core.Tests.UnityActivatorTest.DoesNotLogIfLoggingIsDisabled" methodname="DoesNotLogIfLoggingIsDisabled" classname="DMP.Core.Tests.UnityActivatorTest" runstate="Runnable" seed="1000376694" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.001489" asserts="0">
                <properties />
              </test-case>
              <test-case id="2096" name="ExecutesAsync" fullname="DMP.Core.Tests.UnityActivatorTest.ExecutesAsync" methodname="ExecutesAsync" classname="DMP.Core.Tests.UnityActivatorTest" runstate="Runnable" seed="1659135587" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.000423" asserts="0">
                <properties />
              </test-case>
              <test-case id="2097" name="LogsStartAndComplete" fullname="DMP.Core.Tests.UnityActivatorTest.LogsStartAndComplete" methodname="LogsStartAndComplete" classname="DMP.Core.Tests.UnityActivatorTest" runstate="Runnable" seed="1220500708" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:41Z" duration="0.001167" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="2116" name="dmp.services.system.configuration.tests.dll" fullname="/builds/dmp/main/unity/Client/Library/ScriptAssemblies/dmp.services.system.configuration.tests.dll" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.802657" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="587" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
        <property name="platform" value="EditMode" />
        <property name="isAssembly" value="True" />
        <property name="EditorOnly" value="True" />
        <property name="RequiresPlayMode" value="False" />
      </properties>
      <test-suite type="TestSuite" id="2117" name="DMP" fullname="DMP" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.801141" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="2118" name="Services" fullname="DMP.Services" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.797799" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="2119" name="System" fullname="DMP.Services.System" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.794535" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestSuite" id="2120" name="Configuration" fullname="DMP.Services.System.Configuration" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.791304" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="TestSuite" id="2121" name="Test" fullname="DMP.Services.System.Configuration.Test" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.788073" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="TestFixture" id="2114" name="ValidationTest" fullname="DMP.Services.System.Configuration.Test.ValidationTest" classname="DMP.Services.System.Configuration.Test.ValidationTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.784810" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="2115" name="Validate" fullname="DMP.Services.System.Configuration.Test.ValidationTest.Validate" methodname="Validate" classname="DMP.Services.System.Configuration.Test.ValidationTest" runstate="Runnable" seed="2128752198" result="Passed" start-time="2023-03-15 12:10:41Z" end-time="2023-03-15 12:10:54Z" duration="12.780747" asserts="0">
                    <properties />
                    <output><![CDATA[Config schemas generated
]]></output>
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="2131" name="EventSourcing.Test.dll" fullname="/builds/dmp/main/unity/Client/Library/ScriptAssemblies/EventSourcing.Test.dll" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.015585" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="587" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
        <property name="platform" value="EditMode" />
        <property name="isAssembly" value="True" />
        <property name="EditorOnly" value="True" />
        <property name="RequiresPlayMode" value="False" />
      </properties>
      <test-suite type="TestSuite" id="2132" name="Tests" fullname="Tests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.012055" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestFixture" id="2124" name="StoreTest" fullname="Tests.StoreTest" classname="Tests.StoreTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.008642" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-case id="2128" name="AppliesEvents" fullname="Tests.StoreTest.AppliesEvents" methodname="AppliesEvents" classname="Tests.StoreTest" runstate="Runnable" seed="862245966" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.001851" asserts="0">
            <properties />
          </test-case>
          <test-case id="2126" name="InitializesState" fullname="Tests.StoreTest.InitializesState" methodname="InitializesState" classname="Tests.StoreTest" runstate="Runnable" seed="2042923031" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.000740" asserts="0">
            <properties />
          </test-case>
          <test-case id="2129" name="InvokesEventMiddlewaresBeforeApplyingEvents" fullname="Tests.StoreTest.InvokesEventMiddlewaresBeforeApplyingEvents" methodname="InvokesEventMiddlewaresBeforeApplyingEvents" classname="Tests.StoreTest" runstate="Runnable" seed="427634546" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.000615" asserts="0">
            <properties />
          </test-case>
          <test-case id="2130" name="InvokesStateMiddlewaresAfterApplyingEvents" fullname="Tests.StoreTest.InvokesStateMiddlewaresAfterApplyingEvents" methodname="InvokesStateMiddlewaresAfterApplyingEvents" classname="Tests.StoreTest" runstate="Runnable" seed="184574554" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.000346" asserts="0">
            <properties />
          </test-case>
          <test-case id="2125" name="ReturnsDefaultState" fullname="Tests.StoreTest.ReturnsDefaultState" methodname="ReturnsDefaultState" classname="Tests.StoreTest" runstate="Runnable" seed="522335794" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.000247" asserts="0">
            <properties />
          </test-case>
          <test-case id="2127" name="UpdatesRevision" fullname="Tests.StoreTest.UpdatesRevision" methodname="UpdatesRevision" classname="Tests.StoreTest" runstate="Runnable" seed="2049503425" result="Passed" start-time="2023-03-15 12:10:54Z" end-time="2023-03-15 12:10:54Z" duration="0.000385" asserts="0">
            <properties />
          </test-case>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>